namespace cdm.legaldocumentation.commonelections: <"Common elections shared across different legal agreements">
version "${project.version}"

import cdm.base.staticdata.party.*
import cdm.legaldocumentation.common.*

type CommonAgreementSchedule : <"A set of elections that can be shared across legal agreement types">
    processAgent ProcessAgent (1..1) <"Election to capture if, and who, either party has elected as a process agent">
    addressForNotices AddressForNotices (0..1) <"Address for Notices">
    automaticEarlyTermination AutomaticEarlyTermination (1..1) <"Does automatic early termination apply to either party?">
    designatedOffices DesignatedOffices (0..1) <"Elections detailing designated offices">

type ProcessAgent : <"Election to capture if, and who, either party has elected as a process agent">
    elections ProcessAgentElection (2..2)

type ProcessAgentElection : <"Process agent data for either party">
    party CounterpartyRoleEnum (1..1) <"Relevant party">
    isAppointed boolean (1..1) <"Has that party appointed a process agent?">
    processAgent string (0..1) <"If appointed, process agent should be listed">

    condition AgentMustExist: <"If an agent is appointed they must be named.">
        if isAppointed then processAgent exists

type AutomaticEarlyTermination : <"Elections detailing if automatic early termination applies to either party">
    elections AutomaticEarlyTerminationElection (2..2)

type AutomaticEarlyTerminationElection : 
    party CounterpartyRoleEnum (1..1) <"Relevant party">
    isApplicable boolean (0..1) <"If provided, is automatic early termination applicable to relevant party?">

type DesignatedOffices : <"Elections detailing designated offices">
    elections DesignatedOfficeElection (2..2)

type DesignatedOfficeElection : <"Designated offices for the respective parties">
    party CounterpartyRoleEnum (1..1) <"Relevant party">
    offices string (0..*) <"If provided, which offices are designated for the party? (Will change to city list)">
