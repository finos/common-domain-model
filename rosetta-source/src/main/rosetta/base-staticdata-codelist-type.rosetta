namespace cdm.base.staticdata.codelist
version "${project.version}"

type CodeList:  <"A type hold a list of codes for business data validation">
    identification CodeListIdentification (1..1) <"Identification information about the code list">
    codes CodeValue(0..*) <"Code values">

type CodeListIdentification: <"A type to identify the version of a codelist">
    description string (0..1) <"A description  of the code list, e.g. A list of codes identifying business centers">
    publicationDate string (0..1) <"The most recent date the code list was published, e.g. 2021-10-05">
    shortName string (1..1) <"A short name (without whitespace) for the code list, e.g. businessCenterScheme">
    version string (1..1) <"The the most recent version of the codelist, eg. 9-1">
    codeShortId string (0..1) <"The name of the code list, e.g. business-center">
    canonicalUri string (1..1) <"Canonical URI which uniquely identifies all versions (collectively) of the referenced code list. Must be an absolute URI. Must not be used as a de facto location URI.">
    canonicalVersionUri string (0..1) <"Canonical URI which uniquely identifies a specific version of the referenced code list. Must be an absolute URI. Must not be used as a de facto location URI.">
    locationUri string (0..1) <"Suggested retrieval location for this version, in genericode format. An application must signal an error to the user if a document retrieved using a LocationUri is not in genericode format.">

type CodeValue:  <"A type to hold the value of the code in a codelist">
    value string (1..1) <"The value of the code, e.g. USNY">
    description string (0..1) <"A description of the meaning of the code, e.g. New York City, USA">
    source string (0..1) <"Where the code was defined,e.g. ISDA, FpML, Bloomberg">
    effectiveDate date(0..1) <"When the code became/becomes effective">
    deprecatedDate date(0..1) <"When the code ceased to be valid for new uses">

typeAlias FpMLCodingScheme(domain string):
	string

	condition IsValidCodingScheme:
		if item exists then ValidateFpMLCodingSchemeDomain (item, domain)

typeAlias BusinessCenter: FpMLCodingScheme(domain: "business-center")
typeAlias FloatingRateIndex : FpMLCodingScheme(domain: "floating-rate-index")

typeAlias CommodityBusinessCalendar : FpMLCodingScheme(domain: "commodity-business-calendar")
typeAlias InflationRateIndex : FpMLCodingScheme(domain: "inflation-index-description")
typeAlias CreditEventType : FpMLCodingScheme(domain: "credit-event-type")
typeAlias MasterAgreementType : FpMLCodingScheme(domain: "master-agreement-type")
typeAlias MasterConfirmationAnnexType : FpMLCodingScheme(domain: "master-confirmation-annex-type")
typeAlias MasterConfirmationType : FpMLCodingScheme(domain: "master-confirmation-type")
typeAlias CommodityReferencePrice : FpMLCodingScheme(domain: "commodity-reference-price")
typeAlias CreditRatingAgency : FpMLCodingScheme(domain: "credit-rating-agency")
typeAlias InformationProvider : FpMLCodingScheme(domain: "information-provider")
typeAlias InterpolationMethod : FpMLCodingScheme(domain: "interpolation-method")
typeAlias SettlementRateOption : FpMLCodingScheme(domain: "settlement-rate-option")
typeAlias DeterminationMethod : FpMLCodingScheme(domain: "determination-method")
typeAlias CreditSeniority : FpMLCodingScheme(domain: "credit-seniority")