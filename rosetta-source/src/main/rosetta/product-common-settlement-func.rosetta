namespace cdm.product.common.settlement : <"Common product settlement concepts: cash vs physical, non-deliverable, money and cashflow, delivery vs payment.">
version "${project.version}"

import cdm.base.math.*

import cdm.observable.asset.*

func UpdateAmountForEachQuantity: <"Updates all quantities on each price quantity with the new amount.">
	inputs:
		priceQuantity PriceQuantity (0..*) <"List of price quantities to update.">
		amount number (1..1) <"The new amount.">
	output:
		updatedPriceQuantity PriceQuantity (0..*) <"List of price quantities with all quantity amounts updated.">

func UpdateAmountForEachMatchingQuantity: <"Updates any quantity from the list of new quantities if the unit of amount matches.">
	inputs:
		priceQuantity PriceQuantity (1..*) <"List of price quantities to update.">
		change PriceQuantity (1..*)
		direction QuantityChangeDirectionEnum (1..1)
	output:
		updatedPriceQuantity PriceQuantity (1..*) <"List of price quantities with quantity amounts updated.">

	condition DirectionNotIncrease: direction <> QuantityChangeDirectionEnum -> Increase

func Create_PriceQuantity: <"Populates a PriceQuantity object based on Price and/or Quantity inputs.">
	inputs:
		price Price (0..*) <"List of prices">
		quantity Quantity (0..*) <"List of quantities">
		observable Observable (0..1)
	output:
		priceQuantity PriceQuantity (1..1) <"The PriceQuantity object populated from the Price and Quantity list inputs.">

	add priceQuantity -> price: price
	add priceQuantity -> quantity: quantity
	set priceQuantity -> observable: observable
