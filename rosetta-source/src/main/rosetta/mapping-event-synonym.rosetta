namespace cdm.mapping.event
version "${project.version}"

import cdm.base.datetime.*
import cdm.base.math.*
import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.identifier.*
import cdm.base.staticdata.party.*

import cdm.event.common.*
import cdm.event.position.*
import cdm.event.workflow.*

import cdm.legalagreement.common.*

import cdm.observable.asset.*

import cdm.product.asset.*
import cdm.product.common.settlement.*
import cdm.product.template.*

import cdm.mapping.fpml.*

synonym source Workflow_Event extends FpML_5_10 {

    ObservationSource:
        + curve
            [value "curve"]
        + informationSource
            [value "informationSource"]

    Price:
        + perUnitOfAmount
            [value "perUnitOfAmount"]

    Observable:
        + productIdentifier
            [value "productIdentifier"]

    Curve:
        + interestRateCurve
            [value "interestRateCurve"]
        + commodityCurve
            [value "commodityCurve" meta "commodityReferencePriceScheme"]

    InterestRateCurve:
        + floatingRateIndex
            [value "floatingRateIndex" meta "floatingRateIndexScheme"]
        + tenor
            [value "tenor"]

    ProductIdentifier:
        + identifier
            [value "identifier"]
        + source
            [value "source"]

    UnitType:
        + financialUnit
            [value "financialUnit" path "unitOfAmount"]
        + currency
            [value "currency" path "unitOfAmount"]


    ClosedState:
        + state
            [value "state"]
        + activityDate
            [value "activityDate"]
        + effectiveDate
            [value "effectiveDate"]
        + lastPaymentDate
            [value "lastPaymentDate"]

    AdjustableOrAdjustedOrRelativeDate:
        + adjustedDate
            [value "settlementDate"]

    TimeZone:
        + time
            [value "time"]
        + location
            [value "location" meta "timezoneLocationScheme"]

    BusinessEvent:
        + intent
            [value "intent"]
        + functionCall
            [value "functionCall"]
        + eventDate
            [value "eventDate"]
        + effectiveDate
            [value "effectiveDate"]
        + instruction
            [value "ignore"]
        + after
            [value "ignore"]

    EventTestBundle:
        + event
            [value "event"]
        + computedAmount
            [value "computedAmount"]

    TradeState:
        + trade
            [hint "trade"]
        + state
            [value "state"]
        + resetHistory
            [value "resetHistory"]
        + transferHistory
            [value "transferHistory"]

    TransferState:
       + transfer
          [value "transfer"]

    Reset:
        + resetValue
            [value "resetValue"]
        + resetDate
            [value "resetDate"]
        + rateRecordDate
            [value "rateRecordDate"]

    State:
        + closedState
            [value "closedState"]
        + positionState
            [value "positionStatus"]

    Trade:
        + contractDetails
            [value "trade" set when "trade->executionVenue" is absent]

    ExecutionDetails:
        + executionType
            [value "executionType"]

    TransferBase:
        + identifier
            [value "transferIdentifier"]
        + quantity
            [value "quantity"]
            [hint "paymentAmount"]
        + observable
            [value "observable"]

    PrimitiveEvent:
        + execution
            [value "executionPrimitive" path "primitive"]
        + contractFormation
            [value "contractFormation" path "primitive"]
        + split
            [value "split" path "primitive"]
        + quantityChange
            [value "quantityChange" path "primitive"]
        + termsChange
            [value "termsChange" path "primitive"]
        + transfer
            [value "transfer" path "primitive"]

    ExecutionPrimitive:
        + before
            [value "before"]
        + after
            [value "after"]

    ContractFormationPrimitive:
        + before
            [value "fpmlTrade" path "before"]
            [value "fpmlExecution" path "before"]
        + after
            [value "fpmlTrade" path "after"]

    SplitPrimitive:
        + before
            [value "fpmlTrade" path "before"]
        + after
            [value "fpmlTrade" path "after"]

    QuantityChangePrimitive:
        + before
            [value "fpmlTrade" path "before"]
        + after
            [value "fpmlTrade" path "after"]

    ResetPrimitive:
        + before
            [value "fpmlTrade" path "before"]
        + after
            [value "fpmlTrade" path "after"]

    TermsChangePrimitive:
        + before
            [value "fpmlTrade" path "before"]
        + after
            [value "fpmlTrade" path "after"]

    TransferPrimitive:
        + before
            [value "fpmlTrade" path "before"]
        + after
            [value "fpmlTrade" path "after"]

    CalculationAgentModel:
        + calculationAgent
            [value "calculationAgent"]
        + calculationAgentBusinessCenter
            [value "calculationAgentBusinessCenter"]

    GeneralTerms:
        + substitution
            [value "substitution"]
        + modifiedEquityDelivery
            [value "modifiedEquityDelivery"]

    CreditLimitInformation:
        + limitApplicable
            [value "limitApplicable"]

    WorkflowStep:
        [meta "id"]
        + proposedEvent
            [value "proposedInstruction"]
        + rejected
            [value "rejected"]
        + previousWorkflowStep
            [value "previousWorkflowStep"]
        + timestamp
            [value "timestamp"]
        + eventIdentifier
            [value "eventIdentifier"]
        + action
            [set to ActionEnum -> New when "isCorrection" = False,
			 set to ActionEnum -> Correct when "isCorrection" = True,
			 set to ActionEnum -> Cancel when "isRetraction" = True]
        + party
            [value "party"]
        + account
            [value "account"]
        + lineage
            [value "ignore"]
        + creditLimitInformation
            [value "creditLimitInformation" path "primitive->contractFormation->after"]

    EventInstruction:
        + instruction
            [value "ignore"]

    EventTimestamp:
        + dateTime
            [value "creationTimestamp"]
            [value "expiryTimestamp"]
        + qualification
            [set to EventTimestampQualificationEnum -> eventCreationDateTime when "creationTimestamp" exists]
            [set to EventTimestampQualificationEnum -> eventExpirationDateTime when "expiryTimestamp" exists]
            [set to EventTimestampQualificationEnum -> clearingSubmissionDateTime when "submittedForClearing" exists]

    WorkflowState:
         + workflowStatus
             [value "workflowStatus"]

    LimitApplicable:
        + limitType
            [value "limitType" meta "creditLimitTypeScheme"]
        + amountUtilized
            [value "amountUtilized"]
        + amountRemaining
            [value "amountRemaining"]
        + currency
            [value "currency" meta "currencyScheme"]

    LimitApplicableExtended:
        + limitLevel
            [value "level" meta "creditLimitLevelScheme"]
        + limitAmount
            [value "limitAmount"]
        + limitImpactDueToTrade
            [value "limitImpactDueToTrade"]

    MessageInformation:
        + messageId
            [value "messageId" path "messageInformation" meta "messageIdScheme"]
        + sentBy
            [value "sentBy" path "messageInformation" meta "messageAddressScheme"]
        + sentTo
            [value "sentTo" path "messageInformation" meta "messageAddressScheme"]

    PartyReferencePayerReceiver:
        + payerAccountReference
            [value "payerAccountReference" meta "href" mapper "CashTransferAccount"]
        + receiverAccountReference
            [value "receiverAccountReference" meta "href" mapper "CashTransferAccount"]

    LegalEntity:
        + name
            [value "executionVenue"]

    AssignedIdentifier:
        + identifier
            [value "identifier"]

    ComputedAmount:
        + currency
            [value "currency" meta "currencyScheme"]

    enums

    FinancialUnitEnum:
        + Share
            [value "Share"]

    ProductIdTypeEnum:
        + BBGID
            [value "BBGID"]
        + BBGTICKER
            [value "BBGTICKER"]
        + CUSIP
            [value "CUSIP"]
        + FIGI
            [value "FIGI"]
        + ISIN
            [value "ISIN"]
        + RIC
            [value "RIC"]
        + Other
            [value "Other"]
        + Sicovam
            [value "Sicovam"]
        + SEDOL
            [value "SEDOL"]
        + UPI
            [value "UPI"]
        + Wertpapier
            [value "Wertpapier"]

    PriceTypeEnum:
        + InterestRate
            [value "InterestRate"]

    CashPriceTypeEnum:
        + Fee
            [value "fee"]

    FeeTypeEnum:
        + Novation
            [value "novationFee"]

    ClosedStateEnum:
        + Allocated
            [value "allocated"]
        + Cancelled
            [value "cancelled"]
        + Exercised
            [value "exercised"]
        + Novated
            [value "novated"]
        + Terminated
            [value "terminated"]

    PositionStatusEnum:
        + Executed
            [value "executed"]
        + Formed
            [value "form"]
        + Settled
            [value "settled"]
        + Cancelled
            [value "cancelled"]
        + Closed
            [value "closed"]

    ExecutionTypeEnum:
        + Electronic
            [value "Electronic"]
        + OffFacility
            [value "OffFacility"]

    AssetTransferTypeEnum:
        + FreeOfPayment
            [value "FreeOfPayment"]

    EventIntentEnum:
        + IndexTransition
             [value "indexTransition"]
        + Renegotiation
            [value "renegotiation"]
        + ContractFormation
            [value "contractFormation"]

    TransferStatusEnum:
        + Disputed
            [value "disputed"]
        + Instructed
            [value "instructed"]
        + Pending
            [value "pending"]
        + Settled
            [value "settled"]


    LimitLevelEnum:
        + Account
            [value "ACCT"]
        + Customer
            [value "CUST"]
        + House
            [value "HOUS"]

    WorkflowStatusEnum:
        + Accepted
            [value "Accepted"]
        + Amended
            [value "Amended"]
        + Cleared
            [value "Cleared"]
        + Rejected
            [value "Rejected"]
        + Submitted
            [value "Submitted"]
        + Terminated
            [value "Terminated"]
        + Affirmed
            [value "Affirmed"]
        + Confirmed
            [value "Confirmed"]

    TransferTypeEnum:
        + Interest
            [value "interest"]
        + NetInterest
            [value "netInterest"]

    TransferSettlementEnum:
        + DeliveryVersusDelivery
            [value "DeliveryVersusDelivery"]
        + DeliveryVersusPayment
            [value "DeliveryVersusPayment"]
        + PaymentVersusPayment
            [value "PaymentVersusPayment"]
}