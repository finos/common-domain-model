version: '1.0'
steps:
  TagReleaseName:
    title: Setup RELEASE_NAME variable with tag
    image: alpine/git
    when:
      condition:
        all:
          releaseNameNotDefined: "${{TAG_REPO}} == true"
    commands:
      - cf_export RELEASE_NAME=${{TAG_NAME}}

  BranchReleaseName:
    title: Setup RELEASE_NAME variable with branch name
    image: alpine/git
    when:
      condition:
        all:
          releaseNameNotDefined: "${{TAG_REPO}} == false"
    commands:
      - cf_export RELEASE_NAME=${{GLOBAL_RELEASE_VERSION}}.${{CF_BRANCH_TAG_NORMALIZED}}

  BuildNormal:
    title: Maven build
    fail_fast: false
    image: r.cfcr.io/regnosysops/regnosys/mvn-docker-build:java-11
    working_directory: ./
    when:
      condition:
        all:
          isNotRelease: "${{TAG_REPO}} == false"
    commands:
      - rm -rf /codefresh/volume/.m2/com/regnosys
      - mvn -s /settings.xml versions:set -DnewVersion=${{RELEASE_NAME}}
      - mvn -s /settings.xml versions:update-property -Dproperty=rosetta.workbench.version -DnewVersion=[${{RELEASE_NAME}}] -DallowSnapshots=true -DallowDowngrade=true
      - mvn -s /settings.xml versions:update-property -Dproperty=rosetta.common.version -DnewVersion=[${{RELEASE_NAME}}] -DallowSnapshots=true -DallowDowngrade=true
      - mvn -U -s /settings.xml clean deploy

#  BuildDamlNormal:
#    title: Maven DAML build
#    fail_fast: false
#    image: r.cfcr.io/regnosysops/regnosys/mvn-docker-build:java-11
#    working_directory: ./
#    when:
#      condition:
#        all:
#          isNotRelease: "${{TAG_REPO}} == false"
#    commands:
#      - rm -rf /codefresh/volume/.m2/com/regnosys
#      - mvn -s /settings.xml -f daml-pom.xml versions:set -DnewVersion=${{RELEASE_NAME}}
#      - mvn -s /settings.xml -f daml-pom.xml versions:update-property -Dproperty=rosetta.workbench.version -DnewVersion=[${{RELEASE_NAME}}] -DallowSnapshots=true -DallowDowngrade=true
#      - mvn -s /settings.xml -f daml-pom.xml versions:update-property -Dproperty=rosetta.common.version -DnewVersion=[${{RELEASE_NAME}}] -DallowSnapshots=true -DallowDowngrade=true
#      - mvn -U -s /settings.xml -f daml-pom.xml clean deploy

  BuildRelease:
    title: Maven build for release
    fail_fast: false
    image: r.cfcr.io/regnosysops/regnosys/mvn-docker-build:java-11
    working_directory: ./
    when:
      condition:
        all:
          isRelease: "${{TAG_REPO}}"
    commands:
      - rm -rf /codefresh/volume/.m2/com/regnosys
      - mvn -s /settings.xml versions:set -DnewVersion=${{RELEASE_NAME}}
      - mvn -s /settings.xml versions:update-property -Dproperty=rosetta.workbench.version -DnewVersion=[${{RELEASE_NAME}}] -DallowSnapshots=true -DallowDowngrade=true
      - mvn -s /settings.xml versions:update-property -Dproperty=rosetta.common.version -DnewVersion=[${{RELEASE_NAME}}] -DallowSnapshots=true -DallowDowngrade=true
      - mvn -s /settings.xml clean deploy -P full

#  BuildDamlRelease:
#    title: Maven DAML build for release
#    fail_fast: false
#    image: r.cfcr.io/regnosysops/regnosys/mvn-docker-build:java-11
#    working_directory: ./
#    when:
#      condition:
#        all:
#          isRelease: "${{TAG_REPO}}"
#    commands:
#      - rm -rf /codefresh/volume/.m2/com/regnosys
#      - mvn -s /settings.xml -f daml-pom.xml versions:set -DnewVersion=${{RELEASE_NAME}}
#      - mvn -s /settings.xml -f daml-pom.xml versions:update-property -Dproperty=rosetta.workbench.version -DnewVersion=[${{RELEASE_NAME}}] -DallowSnapshots=true -DallowDowngrade=true
#      - mvn -s /settings.xml -f daml-pom.xml versions:update-property -Dproperty=rosetta.common.version -DnewVersion=[${{RELEASE_NAME}}] -DallowSnapshots=true -DallowDowngrade=true
#      - mvn -s /settings.xml -f daml-pom.xml clean deploy -P full

  NotifySlackOnFail:
    title: Trigger Slack dev channel notification if master build failed
    image: codefresh/cli
    when:
      branch:
        only:
          - master
      condition:
        any:
          buildNormalFailed: steps.BuildNormal.result == 'error'
          buildReleaseFailed: steps.BuildRelease.result == 'error'
#          buildDamlNormalFailed: steps.BuildDamlNormal.result == 'error'
#          buildDamlReleaseFailed: steps.BuildDamlRelease.result == 'error'
    commands:
      - export SAFE_COMMIT_AUTHOR='${{CF_COMMIT_AUTHOR}}'
      - export COMMIT_AUTHOR=${SAFE_COMMIT_AUTHOR:-MissingAuthor}
      - export SAFE_REPO_NAME='${{CF_REPO_NAME}}'
      - export REPO_NAME=${SAFE_REPO_NAME:-NoRepo}
      - export SAFE_COMMIT_MESSAGE='${{CF_COMMIT_MESSAGE}}'
      - export COMMIT_MESSAGE=${SAFE_COMMIT_MESSAGE:-NoCommitMsg}
      - echo Author is $SAFE_COMMIT_AUTHOR and commit msg is $SAFE_COMMIT_MESSAGE and repo is $SAFE_REPO_NAME
      - echo After substitution author is $COMMIT_AUTHOR and commit msg is $COMMIT_MESSAGE and repo is $REPO_NAME
      - codefresh run slack-notifier -v REPO_NAME="${REPO_NAME}" -v COMMIT_AUTHOR="${COMMIT_AUTHOR}" -v COMMIT_MESSAGE="${COMMIT_MESSAGE}"  --detach

  FailPipeline:
    title: Fail pipeline if the Maven build failed
    image: codefresh/cli
    when:
      condition:
        any:
          normalBuildFailure: steps.BuildNormal.result == 'failure'
          releaseBuildFailure: steps.BuildRelease.result == 'failure'
#          normalDamlBuildFailure: steps.BuildDamlNormal.result == 'failure'
#          releaseDamlBuildFailure: steps.BuildDamlRelease.result == 'failure'
    commands:
      - exit 1

  TagRepo:
    title: Tag git repo with release name
    image: alpine/git
    when:
      condition:
        all:
          buildPassed: steps.BuildRelease.result == 'success'
          isRelease: "${{TAG_REPO}}"
    commands:
      - echo This is a release build, tag repos with release name [${{RELEASE_NAME}}]
      - git fetch --prune https://regnosys-ops:O6pl6qXtQLk6Z8KO2QFEcY@github.com/REGnosys/${{CF_REPO_NAME}}.git "+refs/tags/*:refs/tags/*"
      - git tag ${{RELEASE_NAME}}
      - git push https://regnosys-ops:O6pl6qXtQLk6Z8KO2QFEcY@github.com/REGnosys/${{CF_REPO_NAME}}.git ${{RELEASE_NAME}}


  StartNextBuild:
    title: Build rosetta-ingest if on master
    image: codefresh/cli
    when:
      branch:
        only:
          - master
      condition:
        all:
          buildPassed: steps.BuildNormal.result == 'success'
          variableDefined: "${{TAG_REPO}} == false"
          skipNextBuild: "${{SKIP_NEXT_BUILD}} == false"
    commands:
      - codefresh run REGnosys/rosetta-ingest/rosetta-ingest --branch master --detach
