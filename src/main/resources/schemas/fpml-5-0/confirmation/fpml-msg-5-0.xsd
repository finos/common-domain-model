<?xml version="1.0" encoding="utf-8"?>
<!-- 
== Copyright (c) 2002-2010. All rights reserved. 
== Financial Products Markup Language is subject to the FpML public license. 
== A copy of this license is available at http://www.fpml.org/license/license.html
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns="http://www.fpml.org/FpML-5/confirmation" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:fpml-annotation="http://www.fpml.org/annotation" targetNamespace="http://www.fpml.org/FpML-5/confirmation" ecore:documentRoot="FpML" ecore:nsPrefix="conf" ecore:package="org.fpml.confirmation" version="$Revision: 2864 $" elementFormDefault="qualified" attributeFormDefault="unqualified">
  <xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd" />
  <xsd:include schemaLocation="fpml-doc-5-0.xsd" />
  <xsd:complexType name="Acknowledgement">
    <xsd:complexContent>
      <xsd:extension base="ResponseMessage">
        <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AdditionalData">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Provides extra information not represented in the model that may be useful in processing the message i.e. diagnosing the reason for failure.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="mimeType" type="MimeType">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Indicates the type of media used to provide the extra information. mimeType is used to determine the software product(s) that can read the content. MIME Types are described in RFC 2046.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:choice>
        <xsd:element name="string" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Provides extra information as string. In case the extra information is in XML format, a CDATA section must be placed around the source message to prevent its interpretation as XML content.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="hexadecimalBinary" type="xsd:hexBinary">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Provides extra information as binary contents coded in hexadecimal.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="base64Binary" type="xsd:base64Binary">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Provides extra information as binary contents coded in base64.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CorrectableRequestMessage">
    <xsd:annotation>
      <xsd:documentation>A type defining the content model for a request message that can be subsequently corrected or retracted.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="RequestMessage">
        <xsd:sequence>
          <xsd:element name="isCorrection" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>Indicates if this message corrects an earlier request.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:group ref="Correlation.model" />
          <xsd:group ref="Sequence.model" />
          <xsd:group ref="OnBehalfOf.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CorrelationId">
    <xsd:annotation>
      <xsd:documentation>A type defining a correlation identifier and qualifying scheme</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:normalizedString">
        <xsd:attribute name="correlationIdScheme" type="xsd:anyURI" use="required" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EventStatus">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A coding scheme used to describe the matching/confirmation status of a trade, post-trade event, position, or cash flows.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="eventStatusScheme" type="xsd:anyURI" default="http://www.fpml.org/coding-scheme/event-status" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EventIdentifier">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Identification of a business event through its correlation id.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:group ref="Correlation.model" />
      <xsd:group ref="Sequence.model" minOccurs="0" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EventStatusItem">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type used in event status enquiry messages which relates an event identifier to its current status value.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="eventIdentifier" type="EventIdentifier">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">An instance of a unique event identifier.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="status" type="EventStatus">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">An event status value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EventStatusResponse">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining the content model for a message normally generated in response to a requestEventStatus request.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ResponseMessage">
        <xsd:sequence>
          <xsd:element name="statusItem" type="EventStatusItem" maxOccurs="unbounded" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Exception">
    <xsd:annotation>
      <xsd:documentation>A type defining the basic content for a message sent to inform another system that some exception has been detected.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Message">
        <xsd:sequence>
          <xsd:element name="header" type="ExceptionMessageHeader" />
          <xsd:group ref="Validation.model" />
          <xsd:group ref="Correlation.model" minOccurs="0" />
          <xsd:group ref="Sequence.model" minOccurs="0" />
          <xsd:group ref="Exception.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ExceptionMessageHeader">
    <xsd:annotation>
      <xsd:documentation>A type defining the content model for an exception message header.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="MessageHeader">
        <xsd:sequence>
          <xsd:element name="inReplyTo" type="MessageId" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>A copy of the unique message identifier (within it own coding scheme) to which this message is responding.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:group ref="MessageHeader.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Message" abstract="true">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining the basic structure of all FpML messages which is refined by its derived types.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Document" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="MessageAddress">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The data type used for identifying a message address.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="messageAddressScheme" type="xsd:anyURI" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="MessageHeader" abstract="true">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining the content model for a generic message header that is refined by its derived classes.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="MessageId">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A unique identifier (within its coding scheme) assigned to the message by its creating party.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessageId">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The data type use for message identifiers.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="messageIdScheme" type="xsd:anyURI" use="required" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="NonCorrectableRequestMessage">
    <xsd:annotation>
      <xsd:documentation>A type defining the content model for a request message that cannot be subsequently corrected or retracted.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="RequestMessage">
        <xsd:sequence>
          <xsd:group ref="Correlation.model" />
          <xsd:group ref="Sequence.model" />
          <xsd:group ref="OnBehalfOf.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="NotificationMessage" abstract="true">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining the basic content for a message sent to inform another system that some 'business event' has occured. Notifications are not expected to be replied to.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Message">
        <xsd:sequence>
          <xsd:element name="header" type="NotificationMessageHeader" />
          <xsd:group ref="Validation.model" />
          <xsd:group ref="Correlation.model" minOccurs="0" />
          <xsd:group ref="Sequence.model" minOccurs="0" />
          <xsd:group ref="OnBehalfOf.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="NotificationMessageHeader">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type that refines the generic message header to match the requirements of a NotificationMessage.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="MessageHeader">
        <xsd:sequence>
          <xsd:element name="inReplyTo" type="MessageId" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">A copy of the unique message identifier (within it own coding scheme) to which this message is responding.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:group ref="MessageHeader.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="OnBehalfOf">
    <xsd:sequence>
      <xsd:element name="partyReference" type="PartyReference">
        <xsd:annotation>
          <xsd:documentation>The party for which the message reciever should work.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="accountReference" type="AccountReference" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Identifies the account(s) related to the party when they can be determined from the party alone, for example in a inter-book trade.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PartyMessageInformation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining additional information that may be recorded against a message.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="partyReference" type="PartyReference">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Identifies that party that has ownership of this information.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProblemLocation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Provides a lexical location (i.e. a line number and character for bad XML) or an XPath location (i.e. place to identify the bad location for valid XML).</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:normalizedString">
        <xsd:attribute name="locationType" type="xsd:token">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">The value of the locationType attribute defines which type of location has been given. It may take the values 'lexical' or 'xpath'.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Reason">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining a content model for describing the nature and possible location of a error within a previous message.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="reasonCode" type="ReasonCode">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A machine interpretable error code.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="location" type="ProblemLocation" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A value indicating the location of the problem within the subject message.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="description" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Plain English text describing the associated error condition</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="validationRuleId" type="Validation" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A reference identifying a rule within a validation scheme</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="additionalData" type="AdditionalData" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Any string of additional data that may help the message processor, for example in a rejection message this might contain a code value or the text of any one of the messages (within a CDATA section).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ReasonCode">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a list of machine interpretable error codes.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="reasonCodeScheme" type="xsd:anyURI" default="http://www.fpml.org/coding-scheme/reason-code" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="RequestEventStatus">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining the content model for a message allowing one party to query the status of one event (trade or post-trade event) previously sent to another party.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="NonCorrectableRequestMessage">
        <xsd:sequence>
          <xsd:element name="eventIdentifier" type="EventIdentifier" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RequestMessage" abstract="true">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining the basic content of a message that requests the receiver to perform some business operation determined by the message type and its content.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Message">
        <xsd:sequence>
          <xsd:element name="header" type="RequestMessageHeader" />
          <xsd:group ref="Validation.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RequestMessageHeader">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type refining the generic message header content to make it specific to request messages.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="MessageHeader">
        <xsd:sequence>
          <xsd:group ref="MessageHeader.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ResponseMessage" abstract="true">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type refining the generic message content model to make it specific to response messages.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Message">
        <xsd:sequence>
          <xsd:element name="header" type="ResponseMessageHeader" />
          <xsd:group ref="Validation.model" />
          <xsd:group ref="Correlation.model" />
          <xsd:group ref="Sequence.model" minOccurs="0" />
          <xsd:group ref="OnBehalfOf.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ResponseMessageHeader">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type refining the generic message header to make it specific to response messages.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="MessageHeader">
        <xsd:sequence>
          <xsd:element name="inReplyTo" type="MessageId">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">A copy of the unique message identifier (within it own coding scheme) to which this message is responding.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:group ref="MessageHeader.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:group name="Correlation.model">
    <xsd:annotation>
      <xsd:documentation>A model group defining the element used for process correlation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="correlationId" type="CorrelationId">
        <xsd:annotation>
          <xsd:documentation>A qualified identifier used to correlate between messages</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="Exception.model">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A model group which has exception elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="reason" type="Reason" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">An instance of the Reason type used to record the nature of any errors associated with a message.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="additionalData" type="AdditionalData" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Any string of additional data that may help the message processor, for example in a rejection message this might contain a code value or the text of the original request (within a CDATA section).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="MessageHeader.model">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines the structure that contains routing and identification information, which allows processing and transfer of the message. It contains only messaging information that is applicable to all messages. If the information is not message related or is not applicable to all messages then it is not defined in the message header.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="sentBy" type="MessageAddress">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">The unique identifier (within its coding scheme) for the originator of a message instance.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="sendTo" type="MessageAddress" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A unique identifier (within its coding scheme) indicating an intended recipent of a message.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="copyTo" type="MessageAddress" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A unique identifier (within the specified coding scheme) giving the details of some party to whom a copy of this message will be sent for reference.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="creationTimestamp" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">The date and time (on the source system) when this message instance was created.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="expiryTimestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">The date and time (on the source system) when this message instance will be considered expired.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="partyMessageInformation" type="PartyMessageInformation" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Additional message information that may be provided by each involved party.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="dsig:Signature" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="OnBehalfOf.model">
    <xsd:sequence>
      <xsd:element name="onBehalfOf" type="OnBehalfOf">
        <xsd:annotation>
          <xsd:documentation>Indicates which party (and accounts) a trade is being processed for.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="Sequence.model">
    <xsd:annotation>
      <xsd:documentation>A model group defining the element used for message sequencing</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="sequenceNumber" type="xsd:positiveInteger">
        <xsd:annotation>
          <xsd:documentation>A numeric value that can be used to order messages with the same correlation identifier from the same sender.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:annotation>
    <xsd:documentation xml:lang="en">Event Status messages.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="requestEventStatus" type="RequestEventStatus" />
  <xsd:element name="eventStatusResponse" type="EventStatusResponse" />
  <xsd:element name="eventStatusException" type="Exception" />
  <xsd:element name="messageRejected" type="Exception">
    <xsd:annotation>
      <xsd:documentation>The root element used for rejected message exceptions</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
</xsd:schema>

