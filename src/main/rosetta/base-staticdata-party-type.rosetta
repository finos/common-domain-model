namespace cdm.base.staticdata.party : <"Basic party concepts: legal entity, natural person, contact details, buyer / payer and all related enums.">
version "${project.version}"

import cdm.base.staticdata.identifier.*
import cdm.synonyms.config.*

type Counterparty: <"Defines a counterparty enumerated value, e.g. Party1 or Party2, with an associated party reference. The product is agnostic to the actual parties to the transaction, with the party references abstracted away from the product definition and replaced by the CounterpartyEnum (e.g. values Party1 or Party2). The CounterpartyEnum can then be positioned in the product (e.g. to specify which counterparty is the payer, receiver etc) and this Counterparty type, which is positioned outside of the product definition, allows the CounterpartyEnum to be associated with an actual party reference.">

	role CounterpartyRoleEnum (1..1) <"Specifies the CounterpartyEnum, e.g. either Party1 or Party2, that is associated to the partyReference.">
	partyReference Party (1..1) <"Specifies the party that is associated to the counterparty.">
		[metadata reference]

type AncillaryParty: <"Defines an ancillary role enumerated value with an associated party reference. The product is agnostic to the actual parties involved in the transaction, with the party references abstracted away from the product definition and replaced by the AncillaryRoleEnum. The AncillaryRoleEnum can then be positioned in the product and this AncillaryParty type, which is positioned outside of the product definition, allows the AncillaryRoleEnum to be associated with an actual party reference.">

	role AncillaryRoleEnum (1..1) <"Specifies the AncillaryRoleEnum that is associated to the party reference. An ancillary party is any involved party that is not one of the two principal parties to the transaction.">
	partyReference Party (1..*) <"Specifies the party, or parties, associated to the ancillary role.">
		[metadata reference]
	onBehalfOf CounterpartyRoleEnum (0..1) <"Optionally specifies the counterparty that the ancillary party is acting on behalf of.">

type BuyerSeller: <"This class corresponds to the FpML BuyerSeller.model construct.">

	buyer CounterpartyRoleEnum (1..1) <"Buyer party that can be resolved as one of the two principal parties to the transaction. The party that buys this instrument, i.e. pays for this instrument and receives the rights defined by it. ISDA 2002 Equity Definitions section 1.18: `Buyer` means the party specified as such in the related Confirmation. | ISDA 2006 Definitions article 12.1 (b)(i) relating to a Swaption: 'Buyer' means the party that will, on each Premium Payment Date, pay to Seller the Premium | ISDA 2006 Definitions article 12.1 (b)(ii) relating to Swap Transactions with applicable Early Termination: the party specified as such in the related Confirmation, or the Exercising Party if neither party is specified | ISDA 2006 Definitions article 12.1 (b)(iii) relating to any other Option Transaction: the party specified as such in the related Confirmation. | ISDA 2014 Credit Definition article 1.4: `Buyer` means the Fixed Rate Payer.">
	seller CounterpartyRoleEnum (1..1) <"Seller party that can be resolved as one of the two principal parties to the transaction. The party that sells ('writes') this instrument, i.e. that grants the rights defined by this instrument and in return receives a payment for it. ISDA 2002 Equity Definitions section 1.19: `Seller` means the party specified as such in the related Confirmation. | ISDA 2006 Definitions article 12.1 (a)(i) relating to a Swaption: 'Seller' means the party the party specified as such or as writer in the related Confirmation | ISDA 2006 Definitions article 12.1 (a)(ii) relating to Swap Transactions with applicable Early Termination: the party specified as such or as writer in the related Confirmation or, if neither party is specified as such, the Non-exercising Party | ISDA 2006 Definitions article 12.1 (a)(iii) relating to any other Option Transaction: the party specified as such in the related Confirmation. | ISDA 2014 Credit Definition article 1.4: `Seller` means the Floating Rate Payer.">

type PayerReceiver: <"Specifies the parties responsible for making and receiving payments defined by this structure.">

	payer CounterpartyRoleEnum (0..1) <"Specifies the counterparty responsible for making the payments defined by this structure.  The party is one of the two principal parties to the transaction.">
	payerAncillaryRole AncillaryRoleEnum (0..1) <"Specifies the ancillary role responsible for making the payments defined by this structure.  Only populated on the cashflow payout when there is a payment to a party which is not one of the two principal parties to the transaction.">
	    [deprecated]
	payerPartyReference Party (0..1) <"Specifies the party responsible for making the payments defined by this structure.  Only populated on physical exercise and cash exercise which do not have the required model structure to specify the counterparties.">
        [metadata reference]
        [deprecated]
    receiver CounterpartyRoleEnum (0..1) <"Specifies the party that receives the payments corresponding to this structure.  The party is one of the two counterparties to the transaction.">
    receiverAncillaryRole AncillaryRoleEnum (0..1) <"Specifies the ancillary role that receives the payments corresponding to this structure.  Only populated on the cashflow payout when there is a payment to a party which is not one of the two principal parties to the transaction.">
        [deprecated]
    receiverPartyReference Party (0..1) <"Specifies the party that receives the payments corresponding to this structure.  Only populated on physical exercise and cash exercise which do not have the required model structure to specify the counterparties.">
        [metadata reference]
        [deprecated]

	condition PayerCounterpartyOrAncillaryRoleOrPartyReference: <"Payer should be populated when PayerReceiver is used inside the Product.  The other attributes, payerRole and payerPartyReference, are deprecated.">
		required choice payer, payerAncillaryRole, payerPartyReference

	condition ReceiverCounterpartyOrAncillaryRoleOrPartyReference: <"Receiver should be populated when PayerReceiver is used inside the Product.  The other attributes, receiverRole and receiverPartyReference, are deprecated.">
		required choice receiver, receiverAncillaryRole, receiverPartyReference
		
	condition CashflowPayerAncillaryRole: <"The payerRole is specified only on the cashflow payout when there is a payment to a party which is not one of the two principal parties to the transaction.">
		if payerAncillaryRole exists
		then payerAncillaryRole = AncillaryRoleEnum -> ArrangingBroker or payerAncillaryRole = AncillaryRoleEnum -> Beneficiary
		    or payerAncillaryRole = AncillaryRoleEnum -> ClearingFirm or payerAncillaryRole = AncillaryRoleEnum -> CounterpartyAfflilate
		    or payerAncillaryRole = AncillaryRoleEnum -> Guarantor or payerAncillaryRole = AncillaryRoleEnum -> OtherParty
		    or payerAncillaryRole = AncillaryRoleEnum -> PrimeBroker or payerAncillaryRole = AncillaryRoleEnum -> SettlementAgent
		
	condition CashflowReceiverAncillaryRole: <"The receiverrole is specified only on the cashflow payout when there is a payment to a party which is not one of the two principal parties to the transaction.">
		if receiverAncillaryRole exists
		then receiverAncillaryRole = AncillaryRoleEnum -> ArrangingBroker or receiverAncillaryRole = AncillaryRoleEnum -> Beneficiary
		    or receiverAncillaryRole = AncillaryRoleEnum -> ClearingFirm or receiverAncillaryRole = AncillaryRoleEnum -> CounterpartyAfflilate
		    or receiverAncillaryRole = AncillaryRoleEnum -> Guarantor or receiverAncillaryRole = AncillaryRoleEnum -> OtherParty
		    or receiverAncillaryRole = AncillaryRoleEnum -> PrimeBroker or receiverAncillaryRole = AncillaryRoleEnum -> SettlementAgent

type PartyReferencePayerReceiver: <"Specifies the parties responsible for making and receiving payments defined by this structure.">

	payerPartyReference Party (1..1) <"The party responsible for making the payments defined by this structure.">
		[metadata reference]
	payerAccountReference Account (0..1) <"A reference to the account responsible for making the payments defined by this structure.">
		[metadata reference]
		[synonym Workflow_Event value "payerAccountReference" meta "href" mapper "CashTransferAccount"]
	receiverPartyReference Party (1..1) <"The party that receives the payments corresponding to this structure.">
		[metadata reference]
	receiverAccountReference Account (0..1) <"A reference to the account that receives the payments corresponding to this structure.">
		[metadata reference]
		[synonym Workflow_Event value "receiverAccountReference" meta "href" mapper "CashTransferAccount"]

type ReferenceBank: <"A class to describe an institution (party) identified by means of a coding scheme and an optional name.">

	referenceBankId string (1..1) <"An institution (party) identifier, e.g. a bank identifier code (BIC). FpML specifies a referenceBankIdScheme.">
		[metadata scheme]
	referenceBankName string (0..1) <"The name of the institution (party). A free format string. FpML does not define usage rules for the element.">

type ReferenceBanks: <"A class defining the list of reference institutions polled for relevant rates or prices when determining the cash settlement amount for a product where cash settlement is applicable.">
	referenceBank ReferenceBank (1..*) <"An institution (party) identified by means of a coding scheme and an optional name.">

type RelatedParty:

	partyReference Party (1..1) <"Reference to a party.">
		[metadata reference]
	accountReference Account (0..1) <"Reference to an account.">
		[metadata reference]
	role PartyRoleEnum (1..1) <"The category of the relationship. The related party performs the role specified in this field for the base party. For example, if the role is ,Guarantor, the related party acts as a guarantor for the base party.">

type Account: <"A class to specify an account as an account number alongside, optionally. an account name, an account type, an account beneficiary and a servicing party.">
	[metadata key]

	partyReference Party (0..1) <"A reference to the party to which the account refers to.">
		[metadata reference]
	accountNumber string (1..1) <"The account number.">
		[metadata scheme]
		[synonym ISDA_Create_1_0 value "pledged_account_number"]
	accountName string (0..1) <"The name by which the account is known.">
		[metadata scheme]
		[synonym ISDA_Create_1_0 value "name"]
	accountType AccountTypeEnum (0..1) <"The type of account, e.g. client, house.">
		[metadata scheme]
	accountBeneficiary Party (0..1) <"A reference to the party beneficiary of the account.">
		[metadata reference]
	servicingParty Party (0..1) <"The reference to the legal entity that services the account, i.e. in the books of which the account is held.">
		[metadata reference]

type Address: <"A class to specify a post or street address.">

	street string (1..*) <"The set of street and building number information that identifies a postal address within a city.">
	city string (1..1) <"The city component of the postal address.">
	state string (0..1) <"A country subdivision used in postal addresses in some countries. For example, US states, Canadian provinces, Swiss cantons, ...">
	country string (1..1) <"The ISO 3166 standard code for the country within which the postal address is located.">
		[metadata scheme]
	postalCode string (1..1) <"The code, required for computerized mail sorting systems, that is allocated to a physical address by a national postal authority.">

type BusinessUnit: <"A class to specify an organizational unit.">
	[metadata key]

	name string (1..1) <"A name used to describe the organizational unit">
	identifier Identifier (0..1) <"An identifier used to uniquely identify the organizational unit">
	contactInformation ContactInformation (0..1) <"The contact information for such business unit, when different from the contact information associated with the party.">

type ContactInformation: <"A class to specify contact information associated with a party: telephone, postal/street address, email and web page.">

	telephone TelephoneNumber (0..*) <"The telephone number.">
	address Address (0..*) <"The street/postal address.">
	email string (0..*) <"The email address.">
	webPage string (0..*) <"The web page. This attribute is not specified as part of the FpML ContactInformation complex type.">

type LegalEntity: <"A class to specify a legal entity, with a required name and an optional entity identifier (such as the LEI).">
	[metadata key]

	entityId string (0..*) <"A legal entity identifier (e.g. RED entity code).">
		[metadata scheme]
	name string (1..1) <"The legal entity name.">
		[metadata scheme]
		[synonym Workflow_Event value "executionVenue"]

type NaturalPerson: <"A class to represent the attributes that are specific to a natural person.">
	[metadata key]

	honorific string (0..1) <"An honorific title, such as Mr., Ms., Dr. etc.">
	firstName string (1..1) <"The natural person's first name. It is optional in FpML.">
	middleName string (0..*)
	initial string (0..*)
	surname string (1..1) <"The natural person's surname.">
	suffix string (0..1) <"Name suffix, such as Jr., III, etc.">
	dateOfBirth date (0..1) <"The natural person's date of birth.">

	condition NaturalPersonChoice: <"Choice rule to represent an FpML choice construct.">
		optional choice middleName, initial

type NaturalPersonRole: <"A class to specify the role(s) that natural person(s) may have in relation to the contract.">

	personReference NaturalPerson (1..1) <"A reference to the natural person to whom the role refers to.">
		[metadata reference]
	role NaturalPersonRoleEnum (0..1) <"FpML specifies a person role that is distinct from the party role.">
		[metadata scheme]

type Party: <"A class to specify a party, without a qualification as to whether this party is a legal entity or a natural person, although the model provides the ability to associate a person (or set of persons) to a party, which use case would imply that such party would be a legal entity (even if not formally specified as such). ">
	[metadata key]

	partyId string (1..*) <"The identifier associated with a party, e.g. the 20 digits LEI code.">
		[metadata scheme]
	name string (0..1) <"The party name.">
		[metadata scheme]
	person NaturalPerson (0..*) <"The person(s) who might be associated with the party as part of the execution, contract or legal document.">
	account Account (0..1) <"The account that might be associated with the party. At most one account can be specified, as it is expected that this information is used in the context of a contract or legal document where only one account per party can be associated with such object.">

type PartyContactInformation: <"A class to specify contact information within a party: address and, optionally, associated business unit and person. This class also supports the ISDA CSA representation as a single string, through the address attribute.">

	partyReference Party (0..1) <"The reference to the party to which the contact information refers to.">
		[metadata reference]
	contactInformation ContactInformation (0..1) <"The postal/street address, telephone number, email address and/or web page. If the contact information is specific to the associated business unit(s), it should be associated with those.">
	businessUnit BusinessUnit (0..*) <"Optional organization unit information used to describe the organization units (e.g. trading desks) involved in a transaction or business process, incl. the contact information (when relevant).">
	person NaturalPerson (0..*) <"Optional information about people involved in a transaction or business process. (These are employees of the party.)">
	address string (0..1) <"The address specified as a string to support non-normalized contact information, such as in the case of ISDA Create.">
	additionalInformation string (0..1) <"Specification of special instructions of the relevant party.">
		[synonym ISDA_Create_1_0 value "partyA_specify"]
		[synonym ISDA_Create_1_0 value "partyB_specify"]

	condition PartyContactInformationChoice: <"The address attribute corresponds to a non-normalized alternative representation to the contactInformation. This reflects the current ISDA Create data representation.">
		optional choice contactInformation, address

type PartyRole: <"A class to specify the role(s) that party(ies) may have in relation to the execution, contract or other legal agreement.">

	partyReference Party (1..1) <"A reference to the party to which the role refers to.">
		[metadata reference]
		[synonym ISDA_Create_1_0 value "partyA"]
	role PartyRoleEnum (1..1) <"The party role.">
	ownershipPartyReference Party (0..1) <"A reference to the party that has ownership of this party role information. FpML specifies that For shared trade information, this attribute will reference the originator of the data (for example, an execution facility or clearing house).">
		[metadata reference]

type TelephoneNumber: <"A class to specify a telephone number as a type of phone number (e.g. work, personal, ...) alongside with the actual number.">

	telephoneNumberType TelephoneTypeEnum (0..1) <"The type of telephone number, e.g. work, mobile.">
	number string (1..1) <"The actual telephone number.">

type AncillaryEntity: <"Holds an identifier for an ancillary entity, either identified directly via its ancillary role or directly as a legal entity.">
	ancillaryParty AncillaryRoleEnum (0..1) <"Identifies a party via its ancillary role on a transaction (e.g. CCP or DCO through which the trade should be cleared.)">
	legalEntity LegalEntity (0..1)
	condition: one-of
