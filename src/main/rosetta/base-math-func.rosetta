namespace cdm.base.math : <"Basic maths concepts: quantity and unit, rounding, curve / schedule, non-negativity constraint etc.">
version "${project.version}"

func Abs:
	inputs: x number (1..1)
	output: result number (1..1)

// TODO: turn these functions into language level operators i.e. 'sum', 'abs', '<'
func Sum:
	inputs: x number (0..*)
	output: sum number (1..1)

//  FIXME create and use new Map built-i n type. See https://github.com/REGnosys/rosetta-dsl/issues/129
func ListsCompare:
	inputs:
		compareOp CompareOp(1..1)
		left number (1..*)
		right number(0..*)
		rightNumber number(0..1)
	output: result boolean (1..1)

func Max:
	inputs:
		a number (1..1)
		b number (1..1)
	output:
		max number (1..1)

	assign-output max:
		if a > b
		then a
		else b

func RoundToNearest:
	inputs:
		value number (1..1)
		nearest number (1..1)
		roundingMode RoundingModeEnum (1..1)

	output:
		roundedValue number (1..1)

	condition:
		nearest > 0

enum RoundingModeEnum:
	Down
	Up
	// TODO: add other rounding modes
