	namespace "org.isda.cdm"
version "${project.version}"

	synonym source DTCC_11_0_BASE
	
	synonym source DTCC_11_0 extends DTCC_11_0_BASE
{
	AssetPool:
		+ version
			[value "version"]
		+ effectiveDate
			[value "effectiveDate"]
		+ initialFactor
			[value "initialFactor"]
		+ currentFactor
			[value "currentFactor"]

	ConstituentWeight:
		+ openUnits
			[value "openUnits"]
		+ basketPercentage
			[value "basketPercentage"]

	Loan:
		+ borrower
			[value "borrower"]
		+ lien
			[value "lien" meta "lienScheme"]
		+ facilityType
			[value "facilityType" meta "facilityTypeScheme"]
		+ creditAgreementDate
			[value "creditAgreementDate"]
		+ tranche
			[value "tranche" meta "loanTrancheScheme"]

	MortgageBackedSecurity:
		+ pool
			[value "pool"]
		+ sector
			[value "sector" meta "mortgageSectorScheme"]
		+ tranche
			[value "tranche"]

	ProductIdentifier:
		+ identifier
			[value "instrumentId" maps 2 meta "instrumentIdScheme"]

	Security:
		+ bond
			[value "bond"]
		+ convertibleBond
			[value "convertibleBond"]
		+ mortgageBackedSecurity
			[value "mortgage"]

	AssignedIdentifier:
		+ identifier
			[value "tradeId" path "partyTradeIdentifier" maps 2
					set when "partyTradeIdentifier->tradeId->tradeIdScheme" = "EventProcessingId" and rosettaPath = WorkflowStep -> eventIdentifier -> assignedIdentifier -> identifier,
					set when "partyTradeIdentifier->tradeId->tradeIdScheme" = "TradeRefNbr" and rosettaPath = Contract -> contractIdentifier -> assignedIdentifier -> identifier meta "tradeIdScheme"]
			[value "USITradeId" meta "tradeIdScheme"]
			[value "UTITradeId" meta "tradeIdScheme"]
			[value "identifier" path "payment" meta "paymentIdScheme"]

	CalculationAgentModel:
		+ calculationAgentBusinessCenter
			[value "calculationAgentBusinessCenter" path "Body->OTC_Matching->Trade->FpML->trade"]

	Identifier:
		+ issuerReference
			[value "partyReference" path "partyTradeIdentifier" maps 2 meta "href"]
		+ issuer
			[value "USIIssuer" meta "issuerIdScheme"]
			[value "UTIIssuer" meta "issuerIdScheme"]

	PackageInformation:
		+ relatedParty
			[value "relatedParty"]
		+ category
			[value "category"]
		+ intentToAllocate
			[value "intentToAllocate"]

	PartyContractInformation:
		+ partyReference
			[value "partyReference" meta "href"]
		+ naturalPersonRole
			[value "relatedPerson"]

	PercentageRule:
		+ paymentPercent
			[value "paymentPercent"]
		+ notionalAmountReference
			[value "notionalAmountReference" meta "href"]

	BondReference:
		+ bond
			[value "bond"]
		+ conditionPrecedentBond
			[value "conditionPrecedentBond"]
		+ discrepancyClause
			[value "discrepancyClause"]

	CalculationPeriodBase:
		+ adjustedStartDate
			[value "adjustedStartDate"]
		+ adjustedEndDate
			[value "adjustedEndDate"]

	CalculationPeriod:
		+ unadjustedStartDate
			[value "unadjustedStartDate"]
		+ unadjustedEndDate
			[value "unadjustedEndDate"]
		+ calculationPeriodNumberOfDays
			[value "calculationPeriodNumberOfDays"]
		+ notionalAmount
			[value "notionalAmount"]
		+ fxLinkedNotionalAmount
			[value "fxLinkedNotionalAmount"]
		+ floatingRateDefinition
			[value "floatingRateDefinition"]
		+ fixedRate
			[value "fixedRate"]
		+ dayCountYearFraction
			[value "dayCountYearFraction"]
		+ forecastAmount
			[value "forecastAmount"]
		+ forecastRate
			[value "forecastRate"]

	CalculationPeriodDates:
		+ effectiveDate
			[value "effectiveDate" set when "effectiveDate->relativeDate" exists]
				// TODO - The above mapping logic doesn't handle the case of an equity swap payout with an effective date specified as an adjustable date, such as in the eqs-ex01-single-underlyer-execution-long-form.xml
				// This use case should be tackled as part of this Trello card https://trello.com/c/tGA9hPQi
			[value "effectiveDate" path "calculationPeriodDates"]
			[value "relativeEffectiveDate" path "calculationPeriodDates"]
			[hint "adjustedEffectiveDate"]
		+ terminationDate
			[value "terminationDate" path "calculationPeriodDates"]
			[value "relativeTerminationDate" path "calculationPeriodDates"]
			[hint "adjustedTerminationDate"]
		+ calculationPeriodDatesAdjustments
			[value "calculationPeriodDatesAdjustments" path "calculationPeriodDates"]
		+ firstPeriodStartDate
			[value "firstPeriodStartDate" path "calculationPeriodDates"]
			[value "periodicPayment"]
		+ firstRegularPeriodStartDate
			[value "firstRegularPeriodStartDate" path "calculationPeriodDates"]
		+ firstCompoundingPeriodEndDate
			[value "firstCompoundingPeriodEndDate" path "calculationPeriodDates"]
		+ lastRegularPeriodEndDate
			[value "lastRegularPeriodEndDate" path "calculationPeriodDates"]
		+ stubPeriodType
			[value "stubPeriodType" path "calculationPeriodDates"]
		+ calculationPeriodFrequency
			[value "calculationPeriodFrequency" path "calculationPeriodDates"]
			[value "periodicPayment"]

	CancelableProvision:
		+ americanExercise
			[value "americanExercise"]
		+ bermudaExercise
			[value "bermudaExercise"]
		+ europeanExercise
			[value "europeanExercise"]
		+ exerciseNotice
			[value "exerciseNotice"]
		+ followUpConfirmation
			[value "followUpConfirmation"]
		+ cancelableProvisionAdjustedDates
			[value "cancelableProvisionAdjustedDates"]
		+ finalCalculationPeriodDateAdjustment
			[value "finalCalculationPeriodDateAdjustment"]
		+ initialFee
			[value "initialFee"]

	CancelableProvisionAdjustedDates:
		+ cancellationEvent
			[value "cancellationEvent"]

	CancellationEvent:
		+ adjustedExerciseDate
			[value "adjustedExerciseDate"]
		+ adjustedEarlyTerminationDate
			[value "adjustedEarlyTerminationDate"]

	CashflowRepresentation:
		+ cashflowsMatchParameters
			[value "cashflowsMatchParameters"]
		+ principalExchange
			[value "principalExchange"]
		+ paymentCalculationPeriod
			[value "paymentCalculationPeriod"]

	CashPriceMethod:
		+ cashSettlementReferenceBanks
			[value "cashSettlementReferenceBanks"]
		+ cashSettlementCurrency
			[value "cashSettlementCurrency" meta "currencyScheme"]
		+ quotationRateType
			[value "quotationRateType"]

	CashSettlementPaymentDate:
		+ adjustableDates
			[value "adjustableDates"]
		+ relativeDate
			[value "relativeDate"]
		+ businessDateRange
			[value "businessDateRange"]

	CrossCurrencyMethod:
		+ cashSettlementReferenceBanks
			[value "cashSettlementReferenceBanks"]
		+ cashSettlementCurrency
			[value "cashSettlementCurrency" meta "currencyScheme"]
		+ quotationRateType
			[value "quotationRateType"]

	DateRelativeToCalculationPeriodDates:
		+ calculationPeriodDatesReference
			[value "calculationPeriodDatesReference" meta "href"]

	DateRelativeToPaymentDates:
		+ paymentDatesReference
			[value "paymentDatesReference" meta "href"]

	DiscountingMethod:
		+ discountingType
			[value "discountingType"]
			[value "fraDiscounting" set when "fraDiscounting" <> "NONE"]
		+ discountRate
			[value "discountRate"]
		+ discountRateDayCountFraction
			[value "discountRateDayCountFraction" meta "dayCountFractionScheme"]

	EarlyTerminationEvent:
		+ adjustedExerciseDate
			[value "adjustedExerciseDate"]
		+ adjustedEarlyTerminationDate
			[value "adjustedEarlyTerminationDate"]
		+ adjustedCashSettlementValuationDate
			[value "adjustedCashSettlementValuationDate"]
		+ adjustedCashSettlementPaymentDate
			[value "adjustedCashSettlementPaymentDate"]
		+ adjustedExerciseFeePaymentDate
			[value "adjustedExerciseFeePaymentDate"]

	EarlyTerminationProvision:
		+ mandatoryEarlyTermination
			[value "mandatoryEarlyProvision"]
		+ mandatoryEarlyTerminationDateTenor
			[value "mandatoryEarlyTerminationDateTenor"]
		+ optionalEarlyTermination
			[value "optionalEarlyTermination"]
		+ optionalEarlyTerminationParameters
			[value "optionalEarlyTerminationParameters"]

	ExerciseEvent:
		+ adjustedExerciseDate
			[value "adjustedExerciseDate"]
		+ adjustedRelevantSwapEffectiveDate
			[value "adjustedRelevantSwapEffectiveDate"]
		+ adjustedCashSettlementValuationDate
			[value "adjustedCashSettlementValuationDate"]
		+ adjustedCashSettlementPaymentDate
			[value "adjustedCashSettlementPaymentDate"]
		+ adjustedExerciseFeePaymentDate
			[value "adjustedExerciseFeePaymentDate"]

	ExercisePeriod:
		+ earliestExerciseDateTenor
			[value "earliestExerciseDateTenor"]
		+ exerciseFrequency
			[value "exerciseFrequency"]

	ExtendibleProvision:
		+ americanExercise
			[value "americanExercise"]
		+ bermudaExercise
			[value "bermudaExercise"]
		+ europeanExercise
			[value "europeanExercise"]
		+ exerciseNotice
			[value "exerciseNotice"]
		+ followUpConfirmation
			[value "followUpConfirmation"]
		+ extendibleProvisionAdjustedDates
			[value "extendibleProvisionAdjustedDates"]

	ExtendibleProvisionAdjustedDates:
		+ extensionEvent
			[value "extensionEvent"]

	ExtensionEvent:
		+ adjustedExerciseDate
			[value "adjustedExerciseDate"]
		+ adjustedExtendedTerminationDate
			[value "adjustedExtendedTerminationDate"]

	FallbackReferencePrice:
		+ valuationPostponement
			[value "valuationPostponement"]
		+ fallBackSettlementRateOption
			[value "fallBackSettlementRateOption" meta "settlementRateOptionScheme"]
		+ fallbackSurveyValuationPostponement
			[set to True]
		+ calculationAgentDetermination
			[value "calculationAgentDetermination"]

	FinalCalculationPeriodDateAdjustment:
		+ relevantUnderlyingDateReference
			[value "relevantUnderlyingDateReference" meta "href"]
		+ swapStreamReference
			[value "swapStreamReference" meta "href"]
		+ businessDayConvention
			[value "businessDayConvention"]

	FloatingRateDefinition:
		+ calculatedRate
			[value "calculatedRate"]
		+ rateObservation
			[value "rateObservation"]
		+ floatingRateMultiplier
			[value "floatingRateMultiplier"]
		+ spread
			[value "spread"]
		+ capRate
			[value "capRate"]
		+ floorRate
			[value "floorRate"]

	FxFixingDate:
		+ businessDayConvention
			[value "businessDayConvention"]
		+ businessCenters
			[value "businessCenters"]
		+ businessCentersReference
			[value "businessCentersReference" meta "href"]
		+ dateRelativeToPaymentDates
			[value "dateRelativeToPaymentDates"]
		+ dateRelativeToCalculationPeriodDates
			[value "dateRelativeToCalculationPeriodDates"]

	FxLinkedNotionalAmount:
		+ resetDate
			[value "resetDate"]
		+ adjustedFxSpotFixingDate
			[value "adjustedFxSpotFixingDate"]
		+ observedFxSpotRate
			[value "observedFxSpotRate"]
		+ notionalAmount
			[value "notionalAmount"]

	FxLinkedNotionalSchedule:
		+ initialValue
			[value "initialValue"]
		+ varyingNotionalCurrency
			[value "varyingNotionalCurrency" meta "currencyScheme"]
		+ varyingNotionalFixingDates
			[value "varyingNotionalFixingDates"]
		+ fxSpotRateSource
			[value "fxSpotRateSource"]
		+ varyingNotionalInterimExchangePaymentDates
			[value "varyingNotionalInterimExchangePaymentDates"]

	InflationRateSpecification:
		+ inflationLag
			[value "inflationLag"]
		+ indexSource
			[value "indexSource" meta "rateSourcePageScheme"]
		+ mainPublication
			[value "mainPublication" meta "mainPublicationScheme"]
		+ interpolationMethod
			[value "interpolationMethod" meta "interpolationMethodScheme"]
		+ initialIndexLevel
			[value "initialIndexLevel"]
		+ fallbackBondApplicable
			[value "fallbackBondApplicable"]

	MandatoryEarlyTermination:
		+ mandatoryEarlyTerminationDate
			[value "mandatoryEarlyTerminationDate"]
		+ calculationAgent
			[value "calculationAgent"]
		+ cashSettlement
			[value "cashSettlement"]
		+ mandatoryEarlyTerminationAdjustedDates
			[value "mandatoryEarlyTerminationAdjustedDates"]

	MandatoryEarlyTerminationAdjustedDates:
		+ adjustedEarlyTerminationDate
			[value "adjustedEarlyTerminationDate"]
		+ adjustedCashSettlementValuationDate
			[value "adjustedCashSettlementValuationDate"]
		+ adjustedCashSettlementPaymentDate
			[value "adjustedCashSettlementPaymentDate"]

	NonDeliverableSettlement:
		+ referenceCurrency
			[value "referenceCurrency" meta "currencyScheme"]
		+ fxFixingDate
			[value "fxFixingDate"]
		+ fxFixingSchedule
			[value "fxFixingSchedule"]
		+ settlementRateOption
			[value "settlementRateOption" meta "settlementRateOptionScheme"]
		+ priceSourceDisruption
			[value "priceSourceDisruption"]

	OptionalEarlyTermination:
		+ singlePartyOption
			[value "singlePartyOption"]
		+ americanExercise
			[value "americanExercise"]
		+ bermudaExercise
			[value "bermudaExercise"]
		+ europeanExercise
			[value "europeanExercise"]
		+ exerciseNotice
			[value "exerciseNotice"]
		+ followUpConfirmation
			[value "followUpConfirmation"]
		+ calculationAgent
			[value "calculationAgent"]
		+ cashSettlement
			[value "cashSettlement"]
		+ optionalEarlyTerminationAdjustedDates
			[value "optionalEarlyTerminationAdjustedDates"]

	OptionalEarlyTerminationAdjustedDates:
		+ earlyTerminationEvent
			[value "earlyTerminationEvent"]

	OptionCashSettlement:
		+ cashSettlementValuationTime
			[value "cashSettlementValuationTime"]
		+ cashSettlementValuationDate
			[value "cashSettlementValuationDate"]
		+ cashSettlementPaymentDate
			[value "cashSettlementPaymentDate"]
		+ cashPriceMethod
			[value "cashPriceMethod"]
		+ cashPriceAlternateMethod
			[value "cashPriceAlternateMethod"]
		+ parYieldCurveAdjustedMethod
			[value "parYieldCurveAdjustedMethod"]
		+ zeroCouponYieldAdjustedMethod
			[value "zeroCouponYieldAdjustedMethod"]
		+ parYieldCurveUnadjustedMethod
			[value "parYieldCurveUnadjustedMethod"]
		+ crossCurrencyMethod
			[value "crossCurrencyMethod"]
		+ collateralizedCashPriceMethod
			[value "collateralizedCashPriceMethod"]

	PaymentCalculationPeriod:
		+ unadjustedPaymentDate
			[value "unadjustedPaymentDate"]
		+ adjustedPaymentDate
			[value "adjustedPaymentDate"]
		+ calculationPeriod
			[value "calculationPeriod"]
		+ fixedPaymentAmount
			[value "fixedPaymentAmount"]
		+ discountFactor
			[value "discountFactor"]
		+ forecastPaymentAmount
			[value "forecastPaymentAmount"]
		+ presentValueAmount
			[value "presentValueAmount"]

	PriceSourceDisruption:
		+ fallbackReferencePrice
			[value "fallbackReferencePrice"]

	PrincipalExchange:
		+ unadjustedPrincipalExchangeDate
			[value "unadjustedPrincipalExchangeDate"]
		+ adjustedPrincipalExchangeDate
			[value "adjustedPrincipalExchangeDate"]
		+ principalExchangeAmount
			[value "principalExchangeAmount"]
		+ discountFactor
			[value "discountFactor"]
		+ presentValuePrincipalExchangeAmount
			[value "presentValuePrincipalExchangeAmount"]

	ResetDates:
		+ calculationPeriodDatesReference
			[value "calculationPeriodDatesReference" path "resetDates" meta "href"]
		+ resetRelativeTo
			[value "resetRelativeTo" path "resetDates"]
		+ fixingDates
			[value "fixingDates" path "resetDates"]
			[value "fixingDateOffset"]
		+ finalFixingDate
			[value "finalFixingDate" path "periodicPayment->floatingAmountCalculation"]
		+ rateCutOffDaysOffset
			[value "resetCutOffDaysOffset" path "resetDates"]
		+ resetFrequency
			[value "resetFrequency" path "resetDates", "resetFrequency" path "interestLegCalculationPeriodDates->interestLegResetDates"]
		+ resetDatesAdjustments
			[value "resetDatesAdjustments" path "resetDates"]

	SettlementProvision:
		+ settlementCurrency
			[value "settlementCurrency" meta "currencyScheme"]
		+ nonDeliverableSettlement
			[value "nonDeliverableSettlement"]

	StubCalculationPeriodAmount:
		+ calculationPeriodDatesReference
			[value "calculationPeriodDatesReference" meta "href"]
		+ initialStub
			[value "initialStub"]
		+ finalStub
			[value "finalStub"]

	ValuationPostponement:
		+ maximumDaysOfPostponement
			[value "maximumDaysOfPostponement"]

	YieldCurveMethod:
		+ settlementRateSource
			[value "settlementRateSource"]
		+ quotationRateType
			[value "quotationRateType"]

	Cashflow:
		+ cashflowAmount
			[value "fixedAmount"]
		+ cashflowType
			[value "paymentType"]
		+ discountFactor
			[value "discountFactor"]
		+ presentValueAmount
			[value "presentValueAmount"]
		+ paymentDelay
			[value "paymentDelay" path "trade->creditDefaultSwap->feeLeg"]

	Contract:
		+ contractIdentifier
			[value "Submitter"]
			[value "ContraTradeId"]
			[value "YourTradeId"]
			[value "tradeIdentifyingItems"]
			[value "USI"]
			[value "OriginatingUSI"]
			[value "UTI"]
		+ clearedDate
			[value "clearedDate" path "trade->tradeHeader"]
		+ contractualQuantity
			// For Swap Stream:
			[value "swap", "swap" path "trade" ]
				// For Swaption:
			[value "swap" path "trade->swaption"]
			[value "swap" path "swaption"]
			[value "premium" path "swaption"]
				// For CapFloor:
			[value "capFloor" path "trade" ]
				// For FRA and Bond Options:
			[value "trade"]
				// For Bond Options:
			[hint "bondOption"]
				// For CDS:
			[value "creditDefaultSwap" ]
			[value "creditDefaultSwap" path "trade" ]
				// For CDS Option
			[value "creditDefaultSwap" path "trade->creditDefaultSwapOption" ]
		+ contractualPrice
			[value "swap", "swap" path "trade"]
			[value "swaption", "swaption" path "trade"]
			[value "creditDefaultSwapOption", "creditDefaultSwapOption" path "trade"]
			[value "creditDefaultSwap", "creditDefaultSwap" path "trade"]
			[value "bondOption", "bondOption" path "trade"]
			[value "otherPartyPayment", "otherPartyPayment" path "trade"]
			[value "fxSingleLeg", "fxSingleLeg" path "trade"]
		+ collateral
			[value "collateral" path "trade"]
		+ governingLaw
			[value "governingLaw" path "trade" meta "governingLawScheme"]
		+ party
			[value "party"]
		+ account
			[value "account"]
		+ partyContractInformation
			[value "partyTradeInformation" path "trade->tradeHeader"]

	ExecutionQuantity:
		+ quantityNotation
			// For Swap Stream, incl. Swaption and CapFloor:
			[value "notionalSchedule" path "swapStream->calculationPeriodAmount->calculation"]
			[value "notionalSchedule" path "capFloorStream->calculationPeriodAmount->calculation"]
				// For BRL CDI swaps
			[value "futureValueNotional" path "swapStream->calculationPeriodAmount->calculation"]
				// For FRA:
			[value "fra"]
				// For CDS
			[value "protectionTerms"]
			[value "fixedAmountCalculation" path "feeLeg->periodicPayment"]
			[value "floatingAmountCalculation" path "feeLeg->periodicPayment"]

	ResolvablePayoutQuantity:
		+ assetIdentifier
			// For Swap Stream:
			[value "notionalAmount", "notionalStepSchedule"]
				// For FRA, CDS Single Fee, Repo, and Bond Option:
			[hint "currency"]
				// For CDS:
			[value "calculationAmount"]
		+ quantityReference
			[value "constantNotionalScheduleReference" meta "href"]
				// For CDS Option, CDX Index Option, Bond Option, Swaption:
			[value "notionalReference" meta "href"]
		+ futureValueNotional
			[value "futureValueNotional"]

	CrossCurrencyTerms:
		+ principalExchanges
			[value "principalExchanges"]
		+ settlementProvision
			[value "settlementProvision"]

	CreditDefaultPayout:
		+ generalTerms
			[value "generalTerms" path "trade->creditDefaultSwap"]
			[value "generalTerms" path "creditDefaultSwap"]
			[value "generalTerms"]
		+ protectionTerms
			[value "protectionTerms" path "trade->creditDefaultSwap"]
			[value "protectionTerms" path "creditDefaultSwap"]
			[value "protectionTerms"]
		+ cashSettlementTerms
			[value "cashSettlementTerms" path "trade->creditDefaultSwap"]
			[value "cashSettlementTerms" path "creditDefaultSwap"]
			[value "cashSettlementTerms"]
		+ physicalSettlementTerms
			[value "physicalSettlementTerms" path "trade->creditDefaultSwap"]
			[value "physicalSettlementTerms" path "creditDefaultSwap"]
			[value "physicalSettlementTerms"]

	EconomicTerms:
		+ effectiveDate
			[value "effectiveDate" path "trade->creditDefaultSwap->generalTerms", "effectiveDate" path "generalTerms"]
		+ terminationDate
			[value "scheduledTerminationDate" path "trade->creditDefaultSwap->generalTerms", "scheduledTerminationDate" path "generalTerms"]
		+ dateAdjustments
			[value "dateAdjustments" path "trade->creditDefaultSwap->generalTerms", "dateAdjustments" path "generalTerms"]
		+ earlyTerminationProvision
			[value "earlyTerminationProvision" path "trade->swap", "earlyTerminationProvision" path "trade->capFloor"]
		+ optionProvision
			[value "swap" path "trade", "repo" path "trade"]

	Execution:
		+ identifier
			[value "partyTradeIdentifier" path "Submitter"]
		+ executionQuantity
			[value "swap", "swap" path "trade" ]
				// For CDS:
			[value "creditDefaultSwap" ]
			[value "creditDefaultSwap" path "trade" ]
			[value "trade"]
				// For Swaption:
			[value "swap" path "trade->swaption"]
			[value "swap" path "swaption"]
			[value "premium" path "swaption"]
				// For CapFloor:
			[value "capFloor" path "trade" ]
				// For FRA and Bond Options:
			[value "trade"]
				// For Bond Options:
			[hint "bondOption"]
				// For CDS Option
			[value "creditDefaultSwap" path "trade->creditDefaultSwapOption" ]

	GeneralTerms:
		+ referenceInformation
			[value "referenceInformation"]
		+ indexReferenceInformation
			[value "indexReferenceInformation"]
		+ basketReferenceInformation
			[value "basketReferenceInformation"]
		+ additionalTerm
			[value "additionalTerm" meta "additionalTermScheme"]
		+ substitution
			[value "substitution"]
		+ modifiedEquityDelivery
			[value "modifiedEquityDelivery"]

	InterestRatePayout:
		+ dayCountFraction
			[value "dayCountFraction" path "calculationPeriodAmount->calculation" meta "dayCountFractionScheme"]
			[value "dayCountFraction" path "periodicPayment->fixedAmountCalculation" meta "dayCountFractionScheme"]
			[value "dayCountFraction" path "periodicPayment->floatingAmountCalculation" meta "dayCountFractionScheme"]
			[value "dayCountFraction"]
			[value "dayCountFraction" path "interestCalculation" meta "dayCountFractionScheme"]
		+ paymentDates
			[value "paymentDates"]
			[value "periodicPayment"]
		+ paymentDate
			[value "paymentDate"]
		+ paymentDelay
			[value "paymentDelay"]
		+ discountingMethod
			[value "discounting" path "calculationPeriodAmount->calculation"]
			[hint "fraDiscounting"]
		+ compoundingMethod
			[value "compoundingMethod" path "calculationPeriodAmount->calculation"]
		+ cashflowRepresentation
			[value "cashflows"]
		+ stubPeriod
			[value "stubCalculationPeriodAmount"]
		+ bondReference
			[value "bondReference"]

	OptionExercise:
		+ strike
			[value "strike"]
		+ exerciseProcedure
			[value "exerciseProcedure"]

	OptionPayout:
		+ optionType
			[value "optionType"]
			[set to OptionTypeEnum -> Straddle when "swaptionStraddle" = True]
		+ feature
			[value "feature"]

	PayoutBase:
		+ payoutQuantity
			// For Swap Stream:
			[value "notionalSchedule" path "calculationPeriodAmount->calculation"]
				// For CDS:
			[value "calculationAmount"]
			[value "calculationAmount" path "periodicPayment->fixedAmountCalculation"]
			[value "calculationAmount" path "periodicPayment->floatingAmountCalculation"]
			[value "fixedAmount"]
			[value "fxLinkedNotionalSchedule" path "calculationPeriodAmount->calculation"]
				// For Repo:
			[value "settlementAmount" path "nearLeg"]
				// For BRL CDI swaps:
			[value "calculation" path "calculationPeriodAmount"]
				// For CDS Option:
			[hint "notionalReference"]
				// For Bond Option:
			[value "notionalAmount"]

	Payout:
		+ interestRatePayout
			[value "swapStream" path "trade->swap" ]
			[value "swapStream" path "swap"]
			[value "swapStream"]
			[value "generalTerms" path "trade->creditDefaultSwap", "feeLeg" path "trade->creditDefaultSwap" set when "trade->creditDefaultSwap->feeLeg->periodicPayment" exists]
			[value "generalTerms" path "creditDefaultSwap", "feeLeg" path "creditDefaultSwap" set when "creditDefaultSwap->feeLeg->periodicPayment" exists]
			[value "feeLeg", "generalTerms"]
			[value "capFloorStream" path "trade->capFloor"]
			[value "fra" path "trade" mapper "FRAIRPSplitter"]
			[value "interestLeg" path "trade->returnSwap", "interestLeg" path "trade->equitySwapTransactionSupplement"]
		+ equityPayout
			[value "ignore"]
		+ optionPayout
			[value "swaption" path "trade"]
			[value "swaption"]
			[value "creditDefaultSwapOption" path "trade"]
			[value "creditDefaultSwapOption"]
			[value "bondOption" path "trade"]
			[value "bondOption"]
		+ forwardPayout
			[value "ignore"]
		+ cashflow
			[value "additionalPayment" path "trade->swap"]
			[value "additionalPayment" path "swap"]
			[value "additionalPayment"]
			[value "initialPayment" path "trade->creditDefaultSwap->feeLeg"]
			[value "initialPayment" path "creditDefaultSwap->feeLeg"]
			[value "singlePayment" path "trade->creditDefaultSwap->feeLeg"]
			[value "singlePayment" path "creditDefaultSwap->feeLeg"]
			[value "singlePayment"]
				// TODO - The below 2 attributes are not properly mapped.  This needs to be addressed as part of this Trello card https://trello.com/c/488uoZcS
			[hint "paymentDelay"]
			[hint "payerReceiver"]
			[value "premium" path "trade->swaption"]
			[value "premium" path "swaption"]
			[value "premium" path "trade->creditDefaultSwapOption"]
			[value "premium" path "creditDefaultSwapOption"]
			[value "premium" path "trade->bondOption"]
			[value "premium" path "bondOption"]
			[value "premium" path "trade->capFloor", "additionalPayment" path "trade->capFloor"]
			[value "otherPartyPayment" path "trade"]
			[value "otherPartyPayment"]

	Product:
		+ contractualProduct
			[value "creditDefaultSwap"]
			[value "swap"]
		+ loan
			[value "loan"]

	ProductIdentification:
		+ primaryAssetdata
			[value "primaryAssetClass" path "trade->creditDefaultSwap" meta "assetClassScheme"]
			[value "primaryAssetClass" path "creditDefaultSwap" meta "assetClassScheme"]
		+ secondaryAssetdata
			[value "secondaryAssetClass" path "trade->creditDefaultSwap" meta "assetClassScheme"]
			[value "secondaryAssetClass" path "creditDefaultSwap" meta "assetClassScheme"]
		+ productType
			[value "ProductType"]
		+ productId
			[value "productId" path "trade->creditDefaultSwap" meta "productIdScheme"]
			[value "productId" path "creditDefaultSwap" meta "productIdScheme"]
			[value "instrumentId" path "payment->calculationDetails->calculationElements->underlier->index" meta "instrumentIdScheme"]

	Quantity:
		+ amount
			[value "amount"]
			[value "initialValue"]

	NonNegativeStepSchedule:
		+ step
			[value "step"]

	NonNegativeQuantitySchedule:
		+ quantity
			[value "ignore"]
		+ stepSchedule
			[value "notionalStepSchedule"]

	AssetIdentifier:
		+ productIdentifier
			[value "ignore"]
		+ currency
			[value "currency" maps 2 meta "currencyScheme"]

	QuantityNotation:
		+ quantity
			// For Swap Streams:
			[value "notionalStepSchedule"]
				// For BRL CDI swaps:
			[hint "amount"]
				// For FRA:
			[value "notional"]
				// For CDS:
			[value "calculationAmount"]
		+ assetIdentifier
			// For Swap Stream:
			[value "notionalStepSchedule"]
				// For BRL CDI swaps:
			[hint "currency"]
				// For FRA and CDS single fee:
			[value "notional"]
				// For CDS:
			[value "calculationAmount"]

	PriceNotation:
		+ assetIdentifier
			// For Equity Swaps
			[value "singleUnderlyer"]

	ExecutionPrice:
		+ priceNotation
			[hint "paymentAmount"]
				// For Equity Swaps
			[value "initialPrice" path "rateOfReturn", "underlyer"]
				// For CD Index and CDS
			[value "initialPayment" path "feeLeg"]
			[value "singlePayment" path "feeLeg"]
			[value "additionalPayment"]
			[value "premium"]
				// For FX
			[hint "exchangeRate"]

	RateSpecification:
		+ inflationRate
			[value "inflationRateCalculation" path "calculationPeriodAmount->calculation"]

	StubPeriod:
		+ calculationPeriodDatesReference
			[value "calculationPeriodDatesReference" meta "href"]
		+ initialStub
			[value "initialStub"]
		+ finalStub
			[value "finalStub"]

	TransactedPrice:
		+ marketFixedRate
			[value "marketFixedRate" path "feeLeg"]
		+ initialPoints
			[value "initialPoints" path "feeLeg"]
		+ marketPrice
			[value "marketPrice" path "feeLeg"]
		+ quotationStyle
			[value "quotationStyle" path "feeLeg"]

	PrimitiveEvent:
		+ execution
			[value "ignore"]
		+ contractFormation
			[value "ignore"]
		+ allocation
			[value "ignore"]
		+ exercise
			[value "ignore"]
		+ quantityChange
			[value "ignore"]
		+ reset
			[value "ignore"]
		+ termsChange
			[value "ignore"]
		+ transfer
			[value "Payment" path "Body->OTC_Matching"]

	InceptionPrimitive:
		+ after
			[value "OTC_RM" path "Header", "OTC_Matching" path "Body" set when "Header->OTC_RM->Manifest->TradeMsg->TransType" = "Trade"]

	ObservationPrimitive:
		+ date
			[value "observationDate"]

	TransferPrimitive:
		+ identifier
			[value "tradeCashflowsId" path "FpML" meta "tradeCashflowsIdScheme"]
		+ settlementType
			[value "SettlementType" path "PaymentDetails"]
		+ cashTransfer
			[value "payment" path "FpML"]

	CashPrice:
		+ cashflowAmount
			[value "paymentAmount"]
			[value "fixedAmount"]

	LegalEntity:
		+ entityId
			[value "entityId" meta "entityIdScheme"]
			[value "entityId" path "referenceEntity" meta "entityIdScheme"]
		+ name
			[value "partyName" meta "entityNameScheme"]
			[value "entityName" meta "entityNameScheme"]
			[value "entityName" path "referenceEntity" meta "entityNameScheme"]

	NaturalPerson:
		+ honorific
			[value "honorific"]
		+ firstName
			[value "firstName"]
		+ middleName
			[value "middleName"]
		+ initial
			[value "initial"]
		+ surname
			[value "surname"]
		+ suffix
			[value "suffix"]
		+ dateOfBirth
			[value "dateOfBirth"]

	NaturalPersonRole:
		+ personReference
			[value "personReference" meta "href"]
		+ role
			[value "role" meta "personRoleScheme"]

	Party:
		+ partyId
			[value "partyId" meta "partyIdScheme"]
			[value "partyId" maps 2 meta "partyIdScheme"]
		+ name
			[value "partyName" meta "entityNameScheme"]
			[value "entityName" meta "entityNameScheme"]
			[value "entityName" path "referenceEntity" meta "entityNameScheme"]
		+ person
			[value "person"]
		+ account
			[value "account"]

	PartyRole:
		+ partyReference
			[value "determiningParty" path "trade" meta "href"]
			[value "barrierDeterminationAgent" path "trade" meta "href"]
			[value "hedgingParty" path "trade" meta "href"]
			[value "brokerPartyReference" path "trade" meta "href"]
			[value "partyReference" path "trade->tradeHeader->partyTradeIdentifier->relatedParty" meta "href"]
			[value "partyReference" path "tradeHeader->partyTradeInformation->relatedParty" meta "href"]
		+ role
			[set to PartyRoleEnum -> DeterminingParty when path = "trade->determiningParty"]
			[set to PartyRoleEnum -> BarrierDeterminationAgent when path = "trade->barrierDeterminationAgent"]
			[set to PartyRoleEnum -> HedgingParty when path = "trade->hedgingParty"]
			[set to PartyRoleEnum -> ArrangingBroker when path = "trade->brokerPartyReference"]
			[value "role" path "tradeHeader->partyTradeInformation->relatedParty"]
		+ ownershipPartyReference
			[value "partyReference" path "tradeHeader->partyTradeInformation" meta "href"]

	Asian:
		+ averagingInOut
			[value "averagingInOut"]
		+ strikeFactor
			[value "strikeFactor"]
		+ averagingPeriodIn
			[value "averagingPeriodIn"]
		+ averagingPeriodOut
			[value "averagingPeriodOut"]

	AveragingObservationList:
		+ averagingObservation
			[value "averagingObservation"]

	AveragingPeriod:
		+ schedule
			[value "schedule"]
		+ averagingDateTimes
			[value "averagingDateTimes"]
		+ averagingObservations
			[value "averagingObservations"]
		+ marketDisruption
			[value "marketDisruption" meta "marketDisruptionScheme"]

	AveragingSchedule:
		+ startDate
			[value "startDate"]
		+ endDate
			[value "endDate"]
		+ averagingPeriodFrequency
			[value "averagingPeriodFrequency"]

	Barrier:
		+ barrierCap
			[value "barrierCap"]
		+ barrierFloor
			[value "barrierFloor"]

	CalendarSpread:
		+ expirationDateTwo
			[value "expirationDateTwo"]

	Composite:
		+ determinationMethod
			[value "determinationMethod"]
		+ relativeDate
			[value "relativeDate"]
		+ fxSpotRateSource
			[value "fxSpotRateSource"]

	CreditEvents:
		+ bankruptcy
			[value "bankruptcy"]
		+ failureToPay
			[value "failureToPay"]
		+ failureToPayPrincipal
			[value "failureToPayPrincipal"]
		+ failureToPayInterest
			[value "failureToPayInterest"]
		+ obligationDefault
			[value "obligationDefault"]
		+ obligationAcceleration
			[value "obligationAcceleration"]
		+ repudiationMoratorium
			[value "repudiationMoratorium"]
		+ restructuring
			[value "restructuring"]
		+ governmentalIntervention
			[value "governmentalIntervention"]
		+ distressedRatingsDowngrade
			[value "distressedRatingsDowngrade"]
		+ maturityExtension
			[value "maturityExtension"]
		+ writedown
			[value "writedown"]
		+ impliedWritedown
			[value "impliedWritedown"]
		+ defaultRequirement
			[value "defaultRequirement"]
		+ creditEventNotice
			[value "creditEventNotice"]

	CreditEventNotice:
		+ notifyingParty
			[value "notifyingParty"]
		+ businessCenter
			[value "businessCenter"]
		+ publiclyAvailableInformation
			[value "publiclyAvailableInformation"]

	FailureToPay:
		+ applicable
			[value "applicable"]
		+ gracePeriodExtension
			[value "gracePeriodExtension"]
		+ paymentRequirement
			[value "paymentRequirement"]

	FeaturePayment:
		+ levelPercentage
			[value "levelPercentage"]
		+ amount
			[value "amount"]
		+ time
			[value "time"]
		+ currency
			[value "currency" meta "currencyScheme"]
		+ paymentDate
			[value "featurePaymentDate"]

	FxFeature:
		+ referenceCurrency
			[value "referenceCurrency" meta "id", "currencyScheme"]
		+ composite
			[value "composite"]
		+ quanto
			[value "quanto"]
		+ crossCurrency
			[value "crossCurrency"]

	GracePeriodExtension:
		+ applicable
			[value "applicable"]
		+ gracePeriod
			[value "gracePeriod"]

	Knock:
		+ knockIn
			[value "knockIn"]
		+ knockOut
			[value "knockOut"]

	NotifyingParty:
		+ buyerPartyReference
			[value "buyerPartyReference" meta "href"]
		+ sellerPartyReference
			[value "sellerPartyReference" meta "href"]

	OptionDenomination:
		+ optionEntitlement
			[value "optionEntitlement"]
		+ entitlementCurrency
			[value "entitlementCurrency" meta "currencyScheme"]
		+ numberOfOptions
			[value "numberOfOptions"]

	OptionFeature:
		+ fxFeature
			[value "fxFeature"]
		+ asian
			[value "asian"]
		+ barrier
			[value "barrier"]
		+ knock
			[value "knock"]
		+ passThrough
			[value "passThrough"]

	OptionProvision:
		+ cancelableProvision
			[value "cancelableProvision"]
		+ extendibleProvision
			[value "extendibleProvision"]

	OptionSettlement:
		+ cashSettlementTerms
			[value "cashSettlement"]
		+ physicalSettlementTerms
			[value "physicalSettlement"]

	OptionStrike:
		+ spread
			[value "spread"]
		+ price
			[value "strikePrice" path "price"]
		+ currency
			[value "currency" path "price" meta "currencyScheme"]
		+ percentage
			[value "strikePercentage" path "price"]
		+ strikeReference
			[value "strikeReference" meta "href"]
		+ referenceSwapCurve
			[value "referenceSwapCurve"]

	OptionStyle:
		+ americanExercise
			[value "americanExercise"]
		+ bermudaExercise
			[value "bermudaExercise"]
		+ europeanExercise
			[value "europeanExercise"]

	PassThrough:
		+ passThroughItem
			[value "passThroughItem"]

	PassThroughItem:
		+ passThroughPercentage
			[value "passThroughPercentage"]

	PubliclyAvailableInformation:
		+ standardPublicSources
			[value "standardPublicSources"]
		+ publicSource
			[value "publicSource"]
		+ specifiedNumber
			[value "specifiedNumber"]

	Quanto:
		+ fxRate
			[value "fxRate"]
		+ fxSpotRateSource
			[value "fxSpotRateSource"]

	Restructuring:
		+ applicable
			[value "applicable"]
		+ restructuringType
			[value "restructuringType" meta "restructuringScheme"]
		+ multipleHolderObligation
			[value "multipleHolderObligation"]
		+ multipleCreditEventNotices
			[value "multipleCreditEventNotices"]

	StrategyFeature:
		+ strikeSpread
			[value "strikeSpread" path "strategyFeature"]
		+ calendarSpread
			[value "calendarSpread" path "strategyFeature"]

	StrikeSpread:
		+ upperStrike
			[value "upperStrike"]
		+ upperStrikeNumberOfOptions
			[value "upperStrikeNumberOfOptions"]

	Trigger:
		+ level
			[value "level"]
		+ levelPercentage
			[value "levelPercentage"]
		+ creditEvents
			[value "creditEvents"]
		+ creditEventsReference
			[value "creditEventsReference" meta "href"]
		+ triggerType
			[value "triggerType"]
		+ triggerTimeType
			[value "triggerTimeType"]

	TriggerEvent:
		+ schedule
			[value "schedule"]
		+ triggerDates
			[value "triggerDates"]
		+ trigger
			[value "trigger"]
		+ featurePayment
			[value "featurePayment"]

	WeightedAveragingObservation:
		+ dateTime
			[value "dateTime"]
		+ observationNumber
			[value "observationNumber"]
		+ weight
			[value "weight"]

	AdditionalFixedPayments:
		+ interestShortfallReimbursement
			[value "interestShortfallReimbursement"]
		+ principalShortfallReimbursement
			[value "principalShortfallReimbursement"]
		+ writedownReimbursement
			[value "writedownReimbursement"]

	BasketReferenceInformation:
		+ basketName
			[value "basketName" meta "basketNameScheme"]
		+ basketId
			[value "basketId" meta "basketIdScheme"]
		+ referencePool
			[value "referencePool"]
		+ nthToDefault
			[value "nthToDefault"]
		+ mthToDefault
			[value "mthToDefault"]
		+ tranche
			[value "tranche"]

	CalculationAmount:
		+ step
			[value "step"]

	CashSettlementTerms:
		+ valuationDate
			[value "valuationDate"]
		+ valuationTime
			[value "valuationTime"]
		+ quotationMethod
			[value "quotationMethod"]
		+ quotationAmount
			[value "quotationAmount"]
		+ minimumQuotationAmout
			[value "minimumQuotationAmount"]
		+ dealer
			[value "dealer"]
		+ cashSettlementBusinessDays
			[value "cashSettlementBusinessDays"]
		+ cashSettlementAmount
			[value "cashSettlementAmount"]
		+ recoveryFactor
			[value "recoveryFactor"]
		+ fixedSettlement
			[value "fixedSettlement"]
		+ accruedInterest
			[value "accruedInterest"]
		+ valuationMethod
			[value "valuationMethod"]

	DeliverableObligations:
		+ accruedInterest
			[value "accruedInterest"]
		+ category
			[value "category"]
		+ notSubordinated
			[value "notSubordinated"]
		+ specifiedCurrency
			[value "specifiedCurrency"]
		+ notSovereignLender
			[value "notSovereignLender"]
		+ notDomesticCurrency
			[value "notDomesticCurrency"]
		+ notDomesticLaw
			[value "notDomesticLaw"]
		+ listed
			[value "listed"]
		+ notContingent
			[value "notContingent"]
		+ notDomesticIssuance
			[value "notDomesticIssuance"]
		+ assignableLoan
			[value "assignableLoan"]
		+ consentRequiredLoan
			[value "consentRequiredLoan"]
		+ directLoanParticipation
			[value "directLoanParticipation"]
		+ transferable
			[value "transferable"]
		+ maximumMaturity
			[value "maximumMaturity"]
		+ acceleratedOrMatured
			[value "acceleratedOrMatured"]
		+ notBearer
			[value "notBearer"]
		+ fullFaithAndCreditObLiability
			[value "fullFaithAndCreditObLiability"]
		+ generalFundObligationLiability
			[value "generalFundObligationLiability"]
		+ revenueObligationLiability
			[value "revenueObligationLiability"]
		+ indirectLoanParticipation
			[value "indirectLoanParticipation"]
		+ excluded
			[value "excluded"]
		+ othReferenceEntityObligations
			[value "othReferenceEntityObligations"]

	FloatingAmountEvents:
		+ failureToPayPrincipal
			[value "failureToPayPrincipal"]
		+ interestShortfall
			[value "interestShortfall"]
		+ writedown
			[value "writedown"]
		+ impliedWritedown
			[value "impliedWritedown"]
		+ floatingAmountProvisions
			[value "floatingAmountProvisions"]
		+ additionalFixedPayments
			[value "additionalFixedPayments"]

	FloatingAmountProvisions:
		+ wacCapInterestProvision
			[value "WACCapInterestProvision"]
		+ stepUpProvision
			[value "stepUpProvision"]

	IndexReferenceInformation:
		+ indexName
			[value "indexName" meta "indexNameScheme"]
		+ indexId
			[value "indexId" meta "indexIdScheme"]
		+ indexSeries
			[value "indexSeries"]
		+ indexAnnexVersion
			[value "indexAnnexVersion"]
		+ indexAnnexDate
			[value "indexAnnexDate"]
		+ indexAnnexSource
			[value "indexAnnexSource" meta "indexAnnexSourceScheme"]
		+ excludedReferenceEntity
			[value "excludedReferenceEntity"]
		+ tranche
			[value "tranche"]
		+ settledEntityMatrix
			[value "settledEntityMatrix"]

	InterestShortFall:
		+ interestShortfallCap
			[value "interestShortfallCap"]
		+ compounding
			[value "compounding"]
		+ rateSource
			[value "rateSource" meta "floatingRateIndexScheme"]

	LoanParticipation:
		+ qualifyingParticipationSeller
			[value "qualifyingParticipationSeller"]

	MultipleValuationDates:
		+ businessDaysThereafter
			[value "businessDaysThereafter"]
		+ numberValuationDates
			[value "numberValuationDates"]

	NotDomesticCurrency:
		+ applicable
			[value "applicable"]
		+ currency
			[value "currency" meta "currencyScheme"]

	Obligations:
		+ category
			[value "category"]
		+ notSubordinated
			[value "notSubordinated"]
		+ specifiedCurrency
			[value "specifiedCurrency"]
		+ notSovereignLender
			[value "notSovereignLender"]
		+ notDomesticCurrency
			[value "notDomesticCurrency"]
		+ notDomesticLaw
			[value "notDomesticLaw"]
		+ listed
			[value "listed"]
		+ notDomesticIssuance
			[value "notDomesticIssuance"]
		+ fullFaithAndCreditObLiability
			[value "fullFaithAndCreditObLiability"]
		+ generalFundObligationLiability
			[value "generalFundObligationLiability"]
		+ revenueObligationLiability
			[value "revenueObligationLiability"]
		+ notContingent
			[value "notContingent"]
		+ excluded
			[value "excluded"]
		+ othReferenceEntityObligations
			[value "othReferenceEntityObligations"]
		+ designatedPriority
			[value "designatedPriority" meta "lienScheme"]
		+ cashSettlementOnly
			[value "cashSettlementOnly"]
		+ deliveryOfCommitments
			[value "deliveryOfCommitments"]
		+ continuity
			[value "continuity"]

	PCDeliverableObligationCharac:
		+ applicable
			[value "applicable"]
		+ partialCashSettlement
			[value "partialCashSettlement"]

	PhysicalSettlementPeriod:
		+ businessDaysNotSpecified
			[value "businessDaysNotSpecified"]
		+ businessDays
			[value "businessDays"]
		+ maximumBusinessDays
			[value "maximumBusinessDays"]

	PhysicalSettlementTerms:
		+ physicalSettlementPeriod
			[value "physicalSettlementPeriod"]
		+ deliverableObligations
			[value "deliverableObligations"]
		+ escrow
			[value "escrow"]
		+ sixtyBusinessDaySettlementCap
			[value "sixtyBusinessDaySettlementCap"]

	ProtectionTerms:
		+ creditEvents
			[value "creditEvents"]
		+ obligations
			[value "obligations"]
		+ floatingAmountEvents
			[value "floatingAmountEvents"]

	ReferenceInformation:
		+ referenceObligation
			[value "referenceObligation"]
		+ noReferenceObligation
			[value "noReferenceObligation"]
		+ unknownReferenceObligation
			[value "unknownReferenceObligation"]
		+ allGuarantees
			[value "allGuarantees"]
		+ referencePrice
			[value "referencePrice"]
		+ referencePolicy
			[value "referencePolicy"]
		+ securedList
			[value "securedList"]

	ReferenceObligation:
		+ bond
			[value "bond"]
		+ convertibleBond
			[value "convertibleBond"]
		+ mortgageBackedSecurity
			[value "mortgage"]
		+ loan
			[value "loan"]
		+ primaryObligor
			[value "primaryObligor"]
		+ primaryObligorReference
			[value "primaryObligorReference" meta "href"]
		+ guarantor
			[value "guarantor"]
		+ guarantorReference
			[value "guarantorReference"]
		+ standardReferenceObligation
			[value "standardReferenceObligation"]

	ReferencePair:
		+ referenceObligation
			[value "referenceObligation"]
		+ noReferenceObligation
			[value "noReferenceObligation"]
		+ entityType
			[value "entityType" meta "entityTypeScheme"]

	ReferencePool:
		+ referencePoolItem
			[value "referencePoolItem"]

	ReferencePoolItem:
		+ constituentWeight
			[value "constituentWeight"]
		+ referencePair
			[value "referencePair"]
		+ protectionTermsReference
			[value "protectionTermsReference" meta "href"]
		+ cashSettlementTermsReference
			[value "settlementTermsReference" maps 2 meta "href"]
		+ physicalSettlementTermsReference
			[value "settlementTermsReference" maps 2 meta "href"]

	SettledEntityMatrix:
		+ matrixSource
			[value "matrixSource" meta "settledEntityMatrixSourceScheme"]
		+ publicationDate
			[value "publicationDate"]

	SingleValuationDate:
		+ businessDays
			[value "businessDays"]

	SpecifiedCurrency:
		+ applicable
			[value "applicable"]
		+ currency
			[value "currency" meta "currencyScheme"]

	Tranche:
		+ attachmentPoint
			[value "attachmentPoint"]
		+ exhaustionPoint
			[value "exhaustionPoint"]
		+ incurredRecoveryApplicable
			[value "incurredRecoveryApplicable"]

	ValuationDate:
		+ singleValuationDate
			[value "singleValuationDate"]
		+ multipleValuationDates
			[value "multipleValuationDates"]

	CashTransferComponent:
		+ amount
			[value "paymentAmount"]
		+ cashflowType
			[value "cashflowType" path "calculationDetails->grossCashflow" meta "cashflowTypeScheme"]
		+ breakdown
			[value "breakdown"]

	ContractState:
		+ contract
			[value "FpML" path "Trade"]
			[value "TradeMsg" path "Manifest"]
			[value "ReportingJurisdiction" path "ReportingData->ReportingHeader"]
		+ updatedContract
			[value "ignore"]

	CustomisedWorkflow:
		+ itemName
			[set to "comment" when path = "PartyWorkflowFields->comment"]
			[set to "superId" when path = "PartyWorkflowFields->superId"]
			[set to "deskId" when path = "PartyWorkflowFields->deskId"]
			[set to "eTradeId" when path = "PartyWorkflowFields->eTradeId"]
			[set to "designatedParty" when path = "PartyWorkflowFields->designatedParty"]
			[set to "brokerName" when path = "PartyWorkflowFields->brokerName"]
			[set to "branchLocation" when path = "PartyWorkflowFields->branchLocation"]
			[set to "midMarketPriceType" when path = "PartyWorkflowFields->midMarketPrice->midMarketPriceType"]
			[set to "amount" when path = "PartyWorkflowFields->midMarketPrice->amount"]
		+ itemValue
			[value "comment" path "PartyWorkflowFields"]
			[value "superId" path "PartyWorkflowFields"]
			[value "deskId" path "PartyWorkflowFields"]
			[value "eTradeId" path "PartyWorkflowFields"]
			[value "designatedParty" path "PartyWorkflowFields"]
			[value "brokerName" path "PartyWorkflowFields"]
			[value "branchLocation" path "PartyWorkflowFields"]
			[value "midMarketPriceType" path "PartyWorkflowFields->midMarketPrice"]
			[value "amount" path "PartyWorkflowFields->midMarketPrice"]

	WorkflowStep:
		+ messageInformation
			[value "FpML" path "Body->OTC_Matching->Trade"]
			[value "FpML" path "Body->OTC_Matching->Payment"]
			[value "RouteInfo" path "Header->OTC_RM->Delivery"]
			[value "Manifest" path "Header->OTC_RM"]
		+ timestamp
			[value "header" path "Body->OTC_Matching->Trade->FpML"]
			[value "Route" path "Header->OTC_RM->Delivery->RouteHist"]
			[value "header" path "Body->OTC_Matching->Payment->FpML"]
		+ eventIdentifier
			[value "Submitter" path "Header->OTC_RM->Manifest->TradeMsg"]
			[value "ContraTradeId" path "Header->OTC_RM->Manifest->TradeMsg"]
			[value "YourTradeId" path "Header->OTC_RM->Manifest->TradeMsg"]
			[value "tradeIdentifyingItems" path "Header->OTC_RM->Manifest->TradeMsg"]
		+ action
			[value "Activity" path "Header->OTC_RM->Manifest->TradeMsg"]
		+ party
			[value "party" path "Body->OTC_Matching->Trade->FpML" ]
			[value "party" path "Body->OTC_Matching->Payment->FpML" ]
		+ account
			[value "account"]

	EventTimestamp:
		+ dateTime
			[value "creationTimestamp"]
			[value "expiryTimestamp"]
			[value "ReceiveTime"]
		+ qualification
			[set to EventTimestampQualificationEnum -> eventCreationDateTime when "creationTimestamp" exists]
			[set to EventTimestampQualificationEnum -> eventExpirationDateTime when "expiryTimestamp" exists]
			[set to EventTimestampQualificationEnum -> eventSubmittedDateTime when "ReceiveTime" exists]

	MessageInformation:
		+ messageId
			[value "messageId" path "header" meta "messageIdScheme"]
		+ sentBy
			[value "From"]
		+ sentTo
			[value "To"]

	PartyCustomisedWorkflow:
		+ partyReference
			[value "partyReference" meta "href"]

	Trade:
		+ contract
			[value "FpML" path "Trade"]
			[value "TradeMsg" path "Manifest"]
			[value "ReportingJurisdiction" path "ReportingData->ReportingHeader"]

	TradeWarehouseWorkflow:
		+ warehouseIdentity
			[value "WarehousePositionType" path "WarehouseState"]
		+ warehouseStatus
			[value "WarehouseStatus" path "WarehouseState"]
		+ partyCustomisedWorkflow
			[value "WorkflowData"]

	TransferBase:
		+ identifier
			[value "identifier" meta "paymentIdScheme"]
		+ transferCalculation
			[value "calculationDetails"]

	TransferCalculation:
		+ period
			[value "calculationPeriod" path "calculationElements"]

	TransferorTransferee:
		+ transferorPartyReference
			[value "payerPartyReference" meta "href"]
		+ transferorAccountReference
			[value "payerAccountReference" meta "href"]
		+ transfereePartyReference
			[value "receiverPartyReference" meta "href"]
		+ transfereeAccountReference
			[value "receiverAccountReference" meta "href"]

	AdjustableDate:
		+ unadjustedDate
			[value "unadjustedDate" maps 2]
			[value "unadjustedDate" path "adjustableDate"]
			[value "unadjustedDate" path "paymentDate"]
			[value "unadjustedDate" path "paymentDate->adjustableDate"]
			[value "firstPeriodStartDate"]
			[value "adjustablePaymentDate"]
		+ dateAdjustments
			[value "dateAdjustments"]
			[value "dateAdjustments" path "calculationPeriodDates->terminationDate"]
			[value "dateAdjustments" path "calculationPeriodDates->effectiveDate"]
			[value "dateAdjustments" path "paymentDate->adjustableDate"]
			[value "dateAdjustments" path "adjustableDate"]
			[value "dateAdjustments" path "paymentDate"]
		+ dateAdjustmentsReference
			[value "dateAdjustmentsReference" meta "href"]
		+ adjustedDate
			[value "adjustedDate" meta "id"]
			[value "adjustedDate" path "paymentDate" meta "id"]
			[value "adjustedDate" path "adjustableDate" meta "id"]
			[value "adjustedDate" path "paymentDate->adjustableDate" meta "id"]
			[value "adjustedTerminationDate"]
			[value "adjustedEffectiveDate"]

	AdjustableDates:
		+ unadjustedDate
			[value "unadjustedDate"]
		+ dateAdjustments
			[value "dateAdjustments"]
		+ adjustedDate
			[value "adjustedDate" meta "id"]

	AdjustableOrAdjustedDate:
		+ unadjustedDate
			[value "unadjustedDate"]
		+ dateAdjustments
			[value "dateAdjustments"]
		+ adjustedDate
			[value "adjustedDate" meta "id"]

	AdjustableOrAdjustedOrRelativeDate:
		+ unadjustedDate
			[value "unadjustedDate"]
			[value "adjustablePaymentDate"]
			[value "unadjustedDate" path "paymentDate->adjustableDate"]
			[value "unadjustedDate" path "paymentDate"]
			[value "unadjustedDate" path "adjustableDate"]
		+ dateAdjustments
			[value "dateAdjustments"]
			[value "dateAdjustments" path "paymentDate->adjustableDate"]
			[value "dateAdjustments" path "paymentDate"]
			[value "dateAdjustments" path "adjustableDate"]
		+ adjustedDate
			[value "adjustedDate" meta "id"]
			[value "adjustedDate" path "paymentDate" meta "id"]
			[value "adjustedDate" path "adjustableDate" meta "id"]
			[value "adjustedPaymentDate" meta "id"]
			[value "adjustedPaymentDate" path "FpML"]
		+ relativeDate
			[value "relativeDate"]
			[value "relativeDate" path "paymentDate"]

	AdjustableOrRelativeDate:
		+ relativeDate
			[value "relativeDate"]
			[value "relativeDate" path "paymentDate"]
			[hint "periodMultiplier"]
			[hint "period"]
			[hint "dayType"]
			[hint "businessDayConvention"]
			[hint "businessCenters"]
			[hint "dateRelativeTo"]
			[hint "relativeDateAdjustments"]

	AdjustableOrRelativeDates:
		+ adjustableDates
			[value "adjustableDates"]
		+ relativeDates
			[value "relativeDates"]

	AdjustedRelativeDateOffset:
		+ relativeDateAdjustments
			[value "relativeDateAdjustments"]

	AmericanExercise:
		+ commencementDate
			[value "commencementDate"]
		+ expirationDate
			[value "expirationDate"]
		+ relevantUnderlyingDate
			[value "relevantUnderlyingDate"]
		+ earliestExerciseTime
			[value "earliestExerciseTime"]
		+ latestExerciseTime
			[value "latestExerciseTime"]
		+ expirationTime
			[value "expirationTime"]
		+ multipleExercise
			[value "multipleExercise"]
		+ exerciseFeeSchedule
			[value "exerciseFeeSchedule"]

	AmountSchedule:
		+ currency
			[value "currency" meta "currencyScheme"]

	AutomaticExercise:
		+ thresholdRate
			[value "thresholdRate"]

	BermudaExercise:
		+ bermudaExerciseDates
			[value "bermudaExerciseDates"]
		+ relevantUnderlyingDate
			[value "relevantUnderlyingDate"]
		+ earliestExerciseTime
			[value "earliestExerciseTime"]
		+ latestExerciseTime
			[value "latestExerciseTime"]
		+ expirationTime
			[value "expirationTime"]
		+ multipleExercise
			[value "multipleExercise"]
		+ exerciseFeeSchedule
			[value "exerciseFeeSchedule"]

	BrokerConfirmation:
		+ brokerConfirmationType
			[value "brokerConfirmationType" meta "brokerConfirmationTypeScheme"]

	BusinessCenters:
		+ businessCenter
			[value "businessCenter" meta "businessCenterScheme"]
			[value "businessCenter" path "businessCenters" meta "businessCenterScheme"]
		+ businessCentersReference
			[value "businessCentersReference" meta "href"]

	BusinessCenterTime:
		+ hourMinuteTime
			[value "hourMinuteTime"]
		+ businessCenter
			[value "businessCenter" meta "businessCenterScheme"]

	BusinessDateRange:
		+ businessDayConvention
			[value "businessDayConvention"]

	BusinessDayAdjustments:
		+ businessDayConvention
			[value "businessDayConvention" maps 2]

	BuyerSeller:
		+ buyerPartyReference
			[value "buyerPartyReference" meta "href"]
		+ buyerAccountReference
			[value "buyerAccountReference" meta "href"]
		+ sellerPartyReference
			[value "sellerPartyReference" meta "href"]
		+ sellerAccountReference
			[value "sellerAccountReference" meta "href"]

	CalculationAgent:
		+ calculationAgentPartyReference
			[value "calculationAgentPartyReference" path "trade->calculationAgent" meta "href"]
			[value "calculationAgentPartyReference" path "calculationAgent" meta "href"]
			[value "calculationAgentPartyReference" path "trade->swaption->calculationAgent" meta "href"]
			[value "calculationAgentPartyReference" path "swaption->calculationAgent" meta "href"]
		+ calculationAgentParty
			[value "calculationAgentParty" path "trade->calculationAgent"]
			[value "calculationAgentParty" path "calculationAgent"]
			[value "calculationAgentParty" path "trade->swaption->calculationAgent"]
			[value "calculationAgentParty" path "swaption->calculationAgent"]
		+ calculationAgentBusinessCenter
			[value "calculationAgentBusinessCenter" path "trade" meta "businessCenterScheme"]
			[value "calculationAgentBusinessCenter"]

	CalculationPeriodFrequency:
		+ rollConvention
			[value "rollConvention"]

	CashSettlementReferenceBanks:
		+ referenceBank
			[value "referenceBank"]

	Collateral:
		+ independentAmount
			[value "independentAmount"]

	ContractualMatrix:
		+ matrixType
			[value "matrixType" meta "matrixTypeScheme"]
		+ publicationDate
			[value "publicationDate"]
		+ matrixTerm
			[value "matrixTerm" meta "matrixTermScheme"]

	ContractualTermsSupplement:
		+ contractualTermsSupplementType
			[value "type" meta "contractualSupplementScheme"]
		+ publicationDate
			[value "publicationDate"]

	CreditSupportAgreement:
		+ creditSupportAgreementType
			[value "type" meta "creditSupportAgreementTypeScheme"]
		+ date
			[value "date"]
		+ identifierValue
			[value "identifier"]

	DateRange:
		+ unadjustedFirstDate
			[value "unadjustedFirstDate"]
		+ unadjustedLastDate
			[value "unadjustedLastDate"]

	DateList:
		+ date
			[value "date"]

	DateTimeList:
		+ dateTime
			[value "dateTime"]

	Documentation:
		+ documentationIdentification
			[value "documentation" path "trade"]

	DocumentationIdentification:
		+ masterAgreement
			[value "masterAgreement"]
		+ masterConfirmation
			[value "masterConfirmation"]
		+ brokerConfirmation
			[value "brokerConfirmation"]
		+ contractualDefinitions
			[value "contractualDefinitions" meta "contractualDefinitionsScheme"]
		+ contractualTermsSupplement
			[value "contractualTermsSupplement"]
		+ contractualMatrix
			[value "contractualMatrix"]
		+ creditSupportAgreement
			[value "creditSupportAgreement"]
		+ otherAgreement
			[value "otherAgreement"]
		+ attachment
			[value "attachment"]

	EuropeanExercise:
		+ expirationDate
			[value "expirationDate"]
		+ relevantUnderlyingDate
			[value "relevantUnderlyingDate"]
		+ earliestExerciseTime
			[value "earliestExerciseTime"]
		+ expirationTime
			[value "expirationTime"]
		+ partialExercise
			[value "partialExercise"]
		+ exerciseFee
			[value "exerciseFee"]

	ExerciseFee:
		+ notionalReference
			[value "notionalReference" meta "href"]
		+ feeAmount
			[value "feeAmount"]
		+ feeRate
			[value "feeRate"]
		+ feePaymentDate
			[value "feePaymentDate"]

	ExerciseFeeSchedule:
		+ notionalReference
			[value "notionalReference" meta "href"]
		+ feeAmountSchedule
			[value "feeAmountSchedule"]
		+ feeRateSchedule
			[value "feeRateSchedule"]
		+ feePaymentDate
			[value "feePaymentDate"]

	ExerciseNotice:
		+ partyReference
			[value "partyReference" meta "href"]
		+ exerciseNoticePartyReference
			[value "exerciseNoticePartyReference" meta "href"]
		+ businessCenter
			[value "businessCenter" meta "businessCenterScheme"]

	ExerciseProcedure:
		+ manualExercise
			[value "manualExercise"]
		+ automaticExercise
			[value "automaticExercise"]
		+ followUpConfirmation
			[value "followUpConfirmation"]
		+ limitedRightToConfirm
			[value "limitedRightToConfirm"]
		+ splitTicket
			[value "splitTicket"]

	FloatingRate:
		+ floatingRateIndex
			[value "floatingRateIndex" path "calculationPeriodAmount->calculation->floatingRateCalculation" meta "floatingRateIndexScheme"]
			[value "floatingRateIndex" path "periodicPayment->floatingAmountCalculation->floatingRate" meta "floatingRateIndexScheme"]
			[value "floatingRateIndex"]
		+ indexTenor
			[value "indexTenor" path "calculationPeriodAmount->calculation->floatingRateCalculation", "indexTenor" path "periodicPayment->floatingAmountCalculation->floatingRate"]
			[value "indexTenor"]
		+ floatingRateMultiplierSchedule
			[value "floatingRateMultiplierSchedule" path "calculationPeriodAmount->calculation->floatingRateCalculation", "floatingRateMultiplierSchedule" path "periodicPayment->floatingAmountCalculation->floatingRate"]
		+ spreadSchedule
			[value "spreadSchedule" path "calculationPeriodAmount->calculation->floatingRateCalculation", "spreadSchedule" path "periodicPayment->floatingAmountCalculation->floatingRate"]
		+ rateTreatment
			[value "rateTreatment" path "calculationPeriodAmount->calculation->floatingRateCalculation", "rateTreatment" path "periodicPayment->floatingAmountCalculation->floatingRate"]
		+ capRateSchedule
			[value "capRateSchedule" path "calculationPeriodAmount->calculation->floatingRateCalculation", "capRateSchedule" path "periodicPayment->floatingAmountCalculation->floatingRate"]
		+ floorRateSchedule
			[value "floorRateSchedule" path "calculationPeriodAmount->calculation->floatingRateCalculation", "floorRateSchedule" path "periodicPayment->floatingAmountCalculation->floatingRate"]

	FloatingRateSpecification:
		+ initialRate
			[value "initialRate" path "calculationPeriodAmount->calculation->floatingRateCalculation", "initialRate" path "periodicPayment->floatingAmountCalculation->floatingRate"]
		+ finalRateRounding
			[value "finalRateRounding" path "calculationPeriodAmount->calculation->floatingRateCalculation", "finalRateRounding" path "periodicPayment->floatingAmountCalculation->floatingRate"]
		+ averagingMethod
			[value "averagingMethod" path "calculationPeriodAmount->calculation->floatingRateCalculation", "averagingMethod" path "periodicPayment->floatingAmountCalculation->floatingRate"]
		+ negativeInterestRateTreatment
			[value "negativeInterestRateTreatment" path "calculationPeriodAmount->calculation->floatingRateCalculation", "negativeInterestRateTreatment" path "periodicPayment->floatingAmountCalculation->floatingRate"]

	Frequency:
		+ periodMultiplier
			[value "periodMultiplier"]
		+ period
			[value "period"]

	FutureValueAmount:
		+ currency
			[value "currency" maps 2 meta "currencyScheme"]
		+ calculationPeriodNumberOfDays
			[value "calculationPeriodNumberOfDays"]
		+ valueDate
			[value "valueDate"]

	FxRate:
		+ quotedCurrencyPair
			[value "quotedCurrencyPair"]
		+ rate
			[value "rate"]

	FxSpotRateSource:
		+ primaryRateSource
			[value "primaryRateSource"]
		+ secondaryRateSource
			[value "secondaryRateSource"]
		+ fixingTime
			[value "fixingTime"]

	IndependentAmount:
		+ paymentDetail
			[value "paymentDetail"]

	InformationSource:
		+ sourceProvider
			[value "rateSource" meta "informationProviderScheme"]
		+ sourcePage
			[value "rateSourcePage" meta "rateSourcePageScheme"]
		+ sourcePageHeading
			[value "rateSourcePageHeading"]

	InitialFixingDate:
		+ relativeDateOffset
			[value "initialFixingDate" path "resetDates"]
		+ initialFixingDate
			[value "initialFixingDate" path "periodicPayment->floatingAmountCalculation"]

	IssuerTradeId:
		+ issuer
			[value "issuer" meta "issuerIdScheme"]
		+ identifier
			[value "tradeId" meta "id", "tradeIdScheme"]

	LastRegularPaymentDate:
		+ lastRegularPaymentDate
			[value "lastRegularPaymentDate"]
		+ finalPaymentDate
			[value "paymentDateFinal"]

	ManualExercise:
		+ exerciseNotice
			[value "exerciseNotice"]
		+ fallbackExercise
			[value "fallbackExercise"]

	MasterAgreement:
		+ masterAgreementId
			[value "masterAgreementId" meta "masterAgreementIdScheme"]
		+ masterAgreementType
			[value "masterAgreementType" meta "masterAgreementTypeScheme"]
		+ masterAgreementVersion
			[value "masterAgreementVersion" meta "masterAgreementVersionScheme"]
		+ masterAgreementDate
			[value "masterAgreementDate"]

	MasterConfirmation:
		+ masterConfirmationType
			[value "masterConfirmationType" meta "masterConfirmationTypeScheme"]
		+ masterConfirmationDate
			[value "masterConfirmationDate"]
		+ masterConfirmationAnnexDate
			[value "masterConfirmationAnnexDate"]
		+ masterConfirmationAnnexType
			[value "masterConfirmationAnnexType" meta "masterConfirmationAnnexTypeScheme"]

	Money:
		+ currency
			[value "currency" maps 2 meta "currencyScheme"]
		+ amount
			[value "amount" maps 2]

	MultipleExercise:
		+ maximumNotionalAmount
			[value "maximumNotionalAmount"]
		+ maximumNumberOfOptions
			[value "maximumNumberOfOptions"]

	NonNegativeStep:
		+ stepDate
			[value "stepDate"]
		+ stepValue
			[value "stepValue"]

	Offset:
		+ dayType
			[value "dayType"]

	OptionPhysicalSettlement:
		+ clearedPhysicalSettlement
			[value "clearedPhysicalSettlement"]
		+ predeterminedClearingOrganizationPartyReference
			[value "predeterminedClearingOrganizationPartyReference" meta "href"]

	OtherAgreement:
		+ identifier
			[value "identifier" meta "agreementIdScheme"]
		+ otherAgreementType
			[value "type" meta "agreementTypeScheme"]
		+ version
			[value "version" meta "agreementVersionScheme"]
		+ date
			[value "date"]

	PartialExercise:
		+ notionaReference
			[value "notionalReference" meta "href"]
		+ integralMultipleAmount
			[value "integralMultipleAmount"]
		+ minimumNotionalAmount
			[value "minimumNotionalAmount"]
		+ minimumNumberOfOptions
			[value "minimumNumberOfOptions"]

	PayerReceiver:
		+ payerPartyReference
			[value "payerPartyReference" meta "href"]
			[value "buyerPartyReference" maps 2 meta "href"]
			[value "buyerPartyReference" path "trade->creditDefaultSwap->generalTerms" maps 2 meta "href"]
		+ payerAccountReference
			[value "payerAccountReference" meta "href"]
			[value "buyerAccountReference" maps 2 meta "href"]
		+ receiverPartyReference
			[value "receiverPartyReference" meta "href"]
			[value "sellerPartyReference" maps 2 meta "href"]
			[value "sellerPartyReference" path "trade->creditDefaultSwap->generalTerms" maps 2 meta "href"]
		+ receiverAccountReference
			[value "receiverAccountReference" meta "href"]
			[value "sellerAccountReference" maps 2 meta "href"]

	PaymentDates:
		+ paymentFrequency
			[value "paymentFrequency"]
		+ firstPaymentDate
			[value "firstPaymentDate"]
		+ payRelativeTo
			[value "payRelativeTo"]
		+ paymentDaysOffset
			[value "paymentDaysOffset"]
		+ paymentDatesAdjustments
			[value "paymentDatesAdjustments"]

	PaymentDetail:
		+ paymentDate
			[value "paymentDate"]
		+ paymentRule
			[value "paymentRule"]
		+ paymentAmount
			[value "paymentAmount"]

	PaymentDiscounting:
		+ discountFactor
			[value "discountFactor"]
		+ presentValueAmount
			[value "presentValueAmount"]

	Period:
		+ periodMultiplier
			[value "periodMultiplier"]
		+ period
			[value "period"]

	PremiumExpression:
		+ premiumType
			[value "premiumType"]
		+ pricePerOption
			[value "pricePerOption"]
		+ percentageOfNotional
			[value "percentageOfNotional"]

	PrincipalExchanges:
		+ initialExchange
			[value "initialExchange"]
		+ finalExchange
			[value "finalExchange"]
		+ intermediateExchange
			[value "intermediateExchange"]

	QuotedCurrencyPair:
		+ currency1
			[value "currency1" meta "currencyScheme"]
		+ currency2
			[value "currency2" meta "currencyScheme"]
		+ quoteBasis
			[value "quoteBasis"]

	RateObservation:
		+ resetDate
			[value "resetDate"]
		+ adjustedFixingDate
			[value "adjustedFixingDate"]
		+ observedRate
			[value "observedRate"]
		+ treatedRate
			[value "treatedRate"]
		+ observationWeight
			[value "observationWeight"]
		+ rateReference
			[value "rateReference" meta "href"]
		+ forecastRate
			[value "forecastRate"]
		+ treatedForecastRate
			[value "treatedForecastRate"]

	ReferenceBank:
		+ referenceBankId
			[value "referenceBankId" meta "referenceBankIdScheme"]
		+ referenceBankName
			[value "referenceBankName"]

	RelatedParty:
		+ partyReference
			[value "partyReference" meta "href"]
		+ accountReference
			[value "accountReference" meta "href"]
		+ role
			[value "role"]

	RelativeDates:
		+ periodSkip
			[value "periodSkip"]
		+ scheduleBounds
			[value "scheduleBounds"]

	RelativeDateOffset:
		+ businessDayConvention
			[value "businessDayConvention"]
		+ businessCenters
			[value "businessCenters"]
		+ businessCentersReference
			[value "businessCentersReference" meta "href"]
		+ dateRelativeTo
			[value "dateRelativeTo" meta "href"]
		+ adjustedDate
			[value "adjustedDate"]

	ResetFrequency:
		+ weeklyRollConvention
			[value "weeklyRollConvention"]

	Resource:
		+ resourceId
			[value "resourceId" meta "resourceIdScheme"]
		+ resourceType
			[value "resourceType" meta "resourceTypeScheme"]
		+ language
			[value "language" meta "languageScheme"]
		+ sizeInBytes
			[value "sizeInBytes"]
		+ length
			[value "length"]
		+ mimeType
			[value "mimeType" meta "mimeTypeScheme"]
		+ name
			[value "name"]
		+ comments
			[value "comments"]
		+ string
			[value "string"]
		+ url
			[value "url"]

	ResourceLength:
		+ lengthUnit
			[value "lengthUnit"]
		+ lengthValue
			[value "lengthValue"]

	Rounding:
		+ roundingDirection
			[value "roundingDirection"]
		+ precision
			[value "precision"]

	Schedule:
		+ initialValue
			[value "initialValue"]
			[value "initialValue" path "calculationPeriodAmount->calculation->fixedRateSchedule"]
			[value "initialValue" path "calculationPeriodAmount->calculation->floatingRateCalculation"]
			[value "fixedRate" path "periodicPayment->fixedAmountCalculation"]
			[value "fixedRate"]
		+ step
			[value "step" path "calculationPeriodAmount->calculation->fixedRateSchedule"]
			[value "step"]

	SettlementBase:
		+ settlementCurrency
			[value "settlementCurrency" meta "currencyScheme"]

	SettlementTerms:
		+ settlementType
			[value "settlementType"]
		+ settlementDate
			[value "settlementDate"]
		+ settlementAmount
			[value "settlementAmount"]

	SettlementRateSource:
		+ informationSource
			[value "informationSource"]
		+ cashSettlementReferenceBanks
			[value "cashSettlementReferenceBanks"]

	SimplePayment:
		+ paymentAmount
			[value "paymentAmount"]
		+ paymentDate
			[value "paymentDate"]

	SpreadSchedule:
		+ spreadScheduleType
			[value "SpreadScheduleType" meta "spreadScheduleTypeScheme"]

	Step:
		+ stepDate
			[value "stepDate"]
		+ stepValue
			[value "stepValue"]

	Strike:
		+ strikeRate
			[value "strikeRate"]
		+ buyer
			[value "buyer"]
		+ seller
			[value "seller"]

	StrikeSchedule:
		+ buyer
			[value "buyer"]
		+ seller
			[value "seller"]

	StubFloatingRate:
		+ floatingRateIndex
			[value "floatingRateIndex"]
		+ indexTenor
			[value "indexTenor"]
		+ floatingRateMultiplierSchedule
			[value "floatingRateMultiplierSchedule"]
		+ spreadSchedule
			[value "spreadSchedule"]
		+ rateTreatment
			[value "rateTreatment"]
		+ capRateSchedule
			[value "capRateSchedule"]
		+ floorRateSchedule
			[value "floorRateSchedule"]

	StubValue:
		+ floatingRate
			[value "floatingRate"]
		+ stubRate
			[value "stubRate"]
		+ stubAmount
			[value "stubAmount"]

	TradeDate:
		+ date
			[value "tradeDate" path "trade->tradeHeader"]
			[value "tradeDate" path "tradeHeader"]

	BondOptionStrike:
		+ referenceSwapCurve
			[value "referenceSwapCurve"]
		+ price
			[value "price"]

	MakeWholeAmount:
		+ interpolationMethod
			[value "interpolationMethod"]
		+ earlyCallDate
			[value "earlyCallDate" meta "id"]

	ReferenceSwapCurve:
		+ swapUnwindValue
			[value "swapUnwindValue"]
		+ makeWholeAmount
			[value "makeWholeAmount"]

	SwapCurveValuation:
		+ floatingRateIndex
			[value "floatingRateIndex"]
		+ indexTenor
			[value "indexTenor"]
		+ spread
			[value "spread"]
		+ side
			[value "side"]
}

