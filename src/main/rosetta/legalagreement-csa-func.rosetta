namespace cdm.legalagreement.csa : <"Credit support concepts: CSA, collateral, elections, initial margin, threshold, minimum transfer amount.">
version "${project.version}"

import cdm.base.math.*
import cdm.observable.asset.*

import cdm.legalagreement.common.*

func PostedCreditSupportItemAmount: <"Calculates the Value for the given Posted Credit Support item. Value means, unless otherwise specified in Paragraph 13, for any Calculation Date (IM) or other date for which Value is calculated and subject to Paragraph 5 in the case of a dispute, with respect to: (i) save as provided in clause (ii) below, Eligible Collateral (IM) or Posted Collateral (IM) that is: (A) an amount of Cash, the Base Currency Equivalent of such amount multiplied by (VP – HFX); and (B) a security, the Base Currency Equivalent of the bid price obtained by the Calculation Agent (IM) multiplied by (VP – HFX); where: VP equals the applicable Valuation Percentage; and HFX equals the applicable FX Haircut Percentage, provided that, for the purposes of calculating Value under Paragraph 8(b)(iv)(B) or Paragraph 11(a), the VP will be 100% and HFX will be zero; (ii) Posted Collateral (IM) that consists of items that are, in respect of the relevant posting obligation, deemed as of such date to have a Value of zero pursuant to Paragraph 13, zero; and (iii) Other Eligible Support (IM) and Other Posted Support. (IM), as specified in Paragraph 13.">
	[calculation]

	inputs:
		item PostedCreditSupportItem (1..1)
		baseCurrency string (1..1)  <"Base Currency means the currency specified as such in Paragraph 13.">

	output:
		result Money (1..1)

	alias cashOrSecurityValue:
		item -> cashOrSecurityValue -> amount

	alias haircutPercentage:
		item -> haircutPercentage

	alias fxHaircutPercentage:
		item -> fxHaircutPercentage

	alias additionalHaircutPercentage:
		item -> fxHaircutPercentage

	alias postedCreditSupportAmount:
		cashOrSecurityValue * (1.00 - (haircutPercentage + fxHaircutPercentage + additionalHaircutPercentage))

	condition:
		baseCurrency = item -> cashOrSecurityValue -> unitOfAmount-> currency
			and baseCurrency = item -> disputedCashOrSecurityValue -> unitOfAmount-> currency

	assign-output result -> amount:
		postedCreditSupportAmount - item -> disputedCashOrSecurityValue -> amount

	assign-output result -> unitOfAmount-> currency:
		baseCurrency

func SumPostedCreditSupportItemAmounts: <"Loops through each PostedCreditSupportItem, calculating the PostedCreditSupportItemAmount (by executing func PostedCreditSupportItemAmount), and summing the result.  Currently loops are not supported in the syntax so the loop must be implemented in code.">
	[calculation]

	inputs:
		postedCreditSupportItems PostedCreditSupportItem (1..*)
		baseCurrency string (1..1)  <"Base Currency means the currency specified as such in Paragraph 13.">

	output:
		result Money (1..1)


func UndisputedAdjustedPostedCreditSupportAmount:
	[calculation]

	inputs:
		postedCreditSupportItems PostedCreditSupportItem (0..*)
		priorDeliveryAmountAdjustment Money (1..1) <"The adjustment value to include any prior Delivery Amount (IM), the transfer of which has not yet been completed and for which the relevant Regular Settlement Day falls on or prior to such Calculation Date (IM)).  See Paragraph 3 (a) (ii).">
		priorReturnAmountAdjustment Money (1..1) <"The adjustment value to exclude any prior Return Amount (IM), the transfer of which has not yet been completed and for which the relevant Regular Settlement Day falls on or prior to such Calculation Date (IM)).  See Paragraph 3 (a) (ii).">
		disputedTransferredPostedCreditSupportAmount Money (1..1) <"Paragraph 5. If a party (a 'Disputing Party') disputes the Value of any Transfer of Eligible Credit Support.">
		baseCurrency string (1..1)  <"Base Currency means the currency specified as such in Paragraph 13.">

	output:
		result Money (1..1)
	alias totalPostedCreditSupportAmount:
		SumPostedCreditSupportItemAmounts(postedCreditSupportItems, baseCurrency)

	alias adjustedPostedCreditSupportAmount:
		totalPostedCreditSupportAmount -> amount + priorDeliveryAmountAdjustment -> amount - priorReturnAmountAdjustment -> amount

	condition:
		(baseCurrency = priorDeliveryAmountAdjustment -> unitOfAmount-> currency)
		and (baseCurrency = priorReturnAmountAdjustment -> unitOfAmount-> currency)
		and (baseCurrency = disputedTransferredPostedCreditSupportAmount -> unitOfAmount-> currency)

	assign-output result -> amount:
		adjustedPostedCreditSupportAmount - disputedTransferredPostedCreditSupportAmount -> amount

	assign-output result -> unitOfAmount-> currency:
	baseCurrency

func CreditSupportAmount:
	[calculation]

	inputs:
		marginAmount Money (1..1) <"2018 Credit Support Annex For Initial Margin, Paragraph 3 (c) (i) Margin Amount (IM) means, for any Calculation Date (IM) and a posting obligation of a Pledgor under a Regime, the Base Currency Equivalent of an amount equal to the sum of the initial margin amounts in respect of the Covered Transactions (IM) determined using the Method specified as applicable to such Regime in Paragraph 13.">
		threshold Money (1..1) <"Threshold (IM) means, with respect to a party, the Base Currency Equivalent of the amount specified as such for that party in Paragraph 13 and, if no amount is specified, zero.">
		marginApproach MarginApproachEnum (1..1) <"Margin Approach has the meaning specified in Paragraph 3 (c) (iii).">
		marginAmountIA Money (0..1) <"Paragraph 3 (c) (ii)  Margin Amount (IA) means, for any Calculation Date (IM) and a posting obligation of a Pledgor, the Base Currency Equivalent of an amount equal to the sum of the Independent Amounts (as defined in any Other CSA) applicable to the Pledgor and any other amounts applicable to the Pledgor (other than any amounts in respect of Margin Amount (IM) or Exposure), however described, intended by the parties to operate as an Independent Amount, if any, after taking into account any relevant Threshold applicable to the Pledgor and any other relevant amounts applicable to the Pledgor, however described, intended by the parties to operate as a Threshold but prior to giving effect to any other applicable deduction, discharge or netting of such amounts, under or in relation to this Agreement, as determined and reported by the party responsible for calculating such amounts.  For the avoidance of doubt, in order to determine the amounts 'applicable to the Pledgor' for the purposes hereof, the parties will take into account the effect of any conditions precedent applicable to such amounts.">
		baseCurrency string (1..1)  <"Base Currency means the currency specified as such in Paragraph 13.">

	output:
		result Money (1..1)

	alias creditSupportAmountCalc:
		Max(marginAmount -> amount - threshold -> amount, 0.0)

	condition:
		(baseCurrency = marginAmount -> unitOfAmount-> currency)
		and (baseCurrency = threshold -> unitOfAmount-> currency)
		and (if marginAmountIA exists then baseCurrency = marginAmountIA -> unitOfAmount-> currency else True)

	condition:
		if marginApproach = MarginApproachEnum -> Distinct or marginApproach = MarginApproachEnum -> Allocated
		then marginAmountIA is absent
		else if marginApproach = MarginApproachEnum -> GreaterOf
			then marginAmountIA exists

	assign-output result -> amount: <"Paragraph 3 (c) (iii) Margin Approach. (A) If the Distinct Margin Flow (IM) Approach is specified as applicable in Paragraph 13, the following provisions will apply: (1) Credit Support Amount (IM) means, with respect to a party as the Pledgor, for any Calculation Date (IM), (i) the Margin Amount (IM) applicable to the Pledgor, if any, minus (ii) the Pledgor’s Threshold (IM); provided, however, that the Credit Support Amount (IM) will be deemed to be zero whenever the calculation of the Credit Support Amount (IM) yields a number less than zero. (2) No Amendment to Obligations in respect of Margin Amount (IA). The posting obligation of a Pledgor in respect of any amount that constitutes a Margin Amount (IA) under any Other CSA shall not be affected or amended in any way by the provisions of this Annex. (B) If the Allocated Margin Flow (IM/IA) Approach is specified as applicable in Paragraph 13, the following provisions will apply: (1) Credit Support Amount (IM) means, with respect to a party as the Pledgor, for any Calculation Date (IM), (i) the Margin Amount (IM) applicable to the Pledgor, if any, minus (ii) the Pledgor’s Threshold (IM); provided, however, that the Credit Support Amount (IM) will be deemed to be zero whenever the calculation of the Credit Support Amount (IM) yields a number less than zero. (2) Amendment to Obligations in respect of Margin Amount (IA). The posting obligation of a Pledgor in respect of any amount that constitutes a Margin Amount (IA) under any Other CSA shall be reduced on an aggregate basis by the amount of the Pledgor’s Credit Support Amount (IM); provided, however, that if, after such reduction, any such Margin Amount (IA) would be a negative amount, such Margin Amount (IA) will be deemed to be zero. (C) If the Greater of Margin Flow (IM/IA) Approach is specified as applicable in Paragraph 13, the following provisions will apply: (1) Credit Support Amount (IM) means, with respect to a party as the Pledgor, for any Calculation Date (IM), the greater of (i)(A) the Margin Amount (IM) applicable to the Pledgor, if any, minus (B) the Pledgor’s Threshold (IM) and (ii) the Margin Amount (IA); provided, however, that the Credit Support Amount (IM) will be deemed to be zero whenever the calculation of the Credit Support Amount (IM) yields a number less than zero. (2) Amendment to Obligations in respect of Margin Amount (IA).  The posting obligation of a Pledgor in respect of any amount that constitutes a Margin Amount (IA) under any Other CSA, other than such obligations of a Pledgor under this Annex, shall be reduced to zero.">
		if marginApproach = MarginApproachEnum -> Distinct or marginApproach = MarginApproachEnum -> Allocated
		then creditSupportAmountCalc
		else if marginApproach = MarginApproachEnum -> GreaterOf
			then Max(creditSupportAmountCalc, marginAmountIA -> amount)

	assign-output result -> unitOfAmount-> currency:
	baseCurrency

func ReturnAmount: <"2018 Credit Support Annex For Initial Margin, Paragraph 3 (b) Return Amount (IM).  Subject to Paragraphs 4 and 5, upon a demand made by the Pledgor on or promptly following a Calculation Date (IM), if the Return Amount (IM) applicable to the Secured Party for that Calculation Date (IM) equals or exceeds the Secured Party’s Minimum Transfer Amount (IM), then the Secured Party will Transfer to the Pledgor Posted Credit Support (IM) specified by the Pledgor in that demand having a Value as of the date of Transfer as close as practicable to (but not more than) the applicable Return Amount (IM) (rounded pursuant to Paragraph 13).  Unless otherwise specified in Paragraph 13, the Return Amount (IM) applicable to the Secured Party for any Calculation Date (IM) will equal the amount by which: (i) the Value as of that Calculation Date (IM) of all Posted Credit Support (IM) held by the Secured Party (as adjusted to include any prior Delivery Amount (IM) and to exclude any prior Return Amount (IM), the transfer of which, in either case, has not yet been completed and for which the relevant Regular Settlement Day falls on or prior to such Calculation Date (IM)) exceeds (ii) the Credit Support Amount (IM) applicable to the Pledgor.">
	[calculation]

	inputs:
		postedCreditSupportItems PostedCreditSupportItem (0..*)
		priorDeliveryAmountAdjustment Money (1..1) <"The adjustment value to include any prior Delivery Amount (IM), the transfer of which has not yet been completed and for which the relevant Regular Settlement Day falls on or prior to such Calculation Date (IM)).  See Paragraph 3 (a) (ii).">
		priorReturnAmountAdjustment Money (1..1) <"The adjustment value to exclude any prior Return Amount (IM), the transfer of which has not yet been completed and for which the relevant Regular Settlement Day falls on or prior to such Calculation Date (IM)).  See Paragraph 3 (a) (ii).">
		disputedTransferredPostedCreditSupportAmount Money (1..1) <"Paragraph 5. If a party (a 'Disputing Party') disputes the Value of any Transfer of Eligible Credit Support.">
		marginAmount Money (1..1)  <"Paragraph 3 (c) (i) Margin Amount (IM) means, for any Calculation Date (IM) and a posting obligation of a Pledgor under a Regime, the Base Currency Equivalent of an amount equal to the sum of the initial margin amounts in respect of the Covered Transactions (IM) determined using the Method specified as applicable to such Regime in Paragraph 13.">
		threshold Money (1..1) <"Threshold (IM) means, with respect to a party, the Base Currency Equivalent of the amount specified as such for that party in Paragraph 13 and, if no amount is specified, zero.">
		marginApproach MarginApproachEnum (1..1) <"Margin Approach has the meaning specified in Paragraph 3 (c) (iii).">
		marginAmountIA Money (0..1) <"Paragraph 3 (c) (ii)  Margin Amount (IA) means, for any Calculation Date (IM) and a posting obligation of a Pledgor, the Base Currency Equivalent of an amount equal to the sum of the Independent Amounts (as defined in any Other CSA) applicable to the Pledgor and any other amounts applicable to the Pledgor (other than any amounts in respect of Margin Amount (IM) or Exposure), however described, intended by the parties to operate as an Independent Amount, if any, after taking into account any relevant Threshold applicable to the Pledgor and any other relevant amounts applicable to the Pledgor, however described, intended by the parties to operate as a Threshold but prior to giving effect to any other applicable deduction, discharge or netting of such amounts, under or in relation to this Agreement, as determined and reported by the party responsible for calculating such amounts.  For the avoidance of doubt, in order to determine the amounts 'applicable to the Pledgor' for the purposes hereof, the parties will take into account the effect of any conditions precedent applicable to such amounts.">
		minimumTransferAmount Money (1..1) <"Minimum Transfer Amount (IM) means, with respect to a party, the Base Currency Equivalent of the amount specified as such for that party in Paragraph 13 and, if no amount is specified, zero.">
		rounding CollateralRounding (1..1) <"Rounding methodology applicable to the Delivery Amount and the Return Amount in terms of nearest integral multiple of Base Currency units. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (c)(vi)(C): Rounding. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (d)(vi)(C): Rounding. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (c)(vi)(C): Rounding.">
		disputedReturnAmount Money (1..1) <"Paragraph 5. If a party (a 'Disputing Party') disputes the the Calculation Agent (IM)’s calculation of a Return Amount (IM).">
		baseCurrency string (1..1) <"Base Currency means the currency specified as such in Paragraph 13.">

	output:
		result Money (1..1)

	alias undisputedAdjustedPostedCreditSupportAmount:
		UndisputedAdjustedPostedCreditSupportAmount(postedCreditSupportItems, priorDeliveryAmountAdjustment, priorReturnAmountAdjustment, disputedTransferredPostedCreditSupportAmount, baseCurrency)

	alias creditSupportAmount:
		CreditSupportAmount(marginAmount, threshold, marginApproach, marginAmountIA, baseCurrency)

	alias returnAmount:
		Max(undisputedAdjustedPostedCreditSupportAmount -> amount - creditSupportAmount -> amount, 0.0)

	alias undisputedReturnAmount:
		Max(returnAmount - disputedReturnAmount -> amount, 0.0)

	condition:
		(baseCurrency = minimumTransferAmount -> unitOfAmount->currency)
		and (baseCurrency = disputedReturnAmount -> unitOfAmount->currency)

	assign-output result -> amount:
		if undisputedReturnAmount >= minimumTransferAmount -> amount
		then RoundToNearest(undisputedReturnAmount, rounding -> returnAmount, RoundingModeEnum -> Down)
		else 0.0

	assign-output result -> unitOfAmount->currency:
	baseCurrency

func DeliveryAmount: <"2018 Credit Support Annex For Initial Margin, Paragraph 3 (a) Delivery Amount (IM).  Subject to Paragraphs 4 and 5, upon a demand made by the Secured Party on or promptly following a Calculation Date (IM), if the Delivery Amount (IM) applicable to the Pledgor for that Calculation Date (IM) equals or exceeds the Pledgor’s Minimum Transfer Amount (IM), then the Pledgor will Transfer to the Secured Party Eligible Credit Support (IM) having a Value as of the date of Transfer at least equal to the applicable Delivery Amount (IM) (rounded pursuant to Paragraph 13).  Unless otherwise specified in Paragraph 13, the Delivery Amount (IM) applicable to the Pledgor for any Calculation Date (IM) will equal the amount by which: (i) the Credit Support Amount (IM) applicable to the Pledgor exceeds (ii) the Value as of that Calculation Date (IM) of all Posted Credit Support (IM) held by the Secured Party (as adjusted to include any prior Delivery Amount (IM) and to exclude any prior Return Amount (IM), the transfer of which, in either case, has not yet been completed and for which the relevant Regular Settlement Day falls on or prior to such Calculation Date (IM)).">
	[calculation]

	inputs:
		postedCreditSupportItems PostedCreditSupportItem (0..*)
		priorDeliveryAmountAdjustment Money (1..1) <"The adjustment value to include any prior Delivery Amount (IM), the transfer of which has not yet been completed and for which the relevant Regular Settlement Day falls on or prior to such Calculation Date (IM)).  See Paragraph 3 (a) (ii).">
		priorReturnAmountAdjustment Money (1..1) <"The adjustment value to exclude any prior Return Amount (IM), the transfer of which has not yet been completed and for which the relevant Regular Settlement Day falls on or prior to such Calculation Date (IM)).  See Paragraph 3 (a) (ii).">
		disputedTransferredPostedCreditSupportAmount Money (1..1) <"Paragraph 5. If a party (a 'Disputing Party') disputes the Value of any Transfer of Eligible Credit Support.">
		marginAmount Money (1..1) <"Paragraph 3 (c) (i) Margin Amount (IM) means, for any Calculation Date (IM) and a posting obligation of a Pledgor under a Regime, the Base Currency Equivalent of an amount equal to the sum of the initial margin amounts in respect of the Covered Transactions (IM) determined using the Method specified as applicable to such Regime in Paragraph 13.">
		threshold Money (1..1) <"Threshold (IM) means, with respect to a party, the Base Currency Equivalent of the amount specified as such for that party in Paragraph 13 and, if no amount is specified, zero.">
		marginApproach MarginApproachEnum (1..1) <"Margin Approach has the meaning specified in Paragraph 3 (c) (iii).">
		marginAmountIA Money (0..1)  <"Paragraph 3 (c) (ii) Margin Amount (IA) means, for any Calculation Date (IM) and a posting obligation of a Pledgor, the Base Currency Equivalent of an amount equal to the sum of the Independent Amounts (as defined in any Other CSA) applicable to the Pledgor and any other amounts applicable to the Pledgor (other than any amounts in respect of Margin Amount (IM) or Exposure), however described, intended by the parties to operate as an Independent Amount, if any, after taking into account any relevant Threshold applicable to the Pledgor and any other relevant amounts applicable to the Pledgor, however described, intended by the parties to operate as a Threshold but prior to giving effect to any other applicable deduction, discharge or netting of such amounts, under or in relation to this Agreement, as determined and reported by the party responsible for calculating such amounts.  For the avoidance of doubt, in order to determine the amounts 'applicable to the Pledgor' for the purposes hereof, the parties will take into account the effect of any conditions precedent applicable to such amounts.">
		minimumTransferAmount Money (1..1) <"Minimum Transfer Amount (IM) means, with respect to a party, the Base Currency Equivalent of the amount specified as such for that party in Paragraph 13 and, if no amount is specified, zero.">
		rounding CollateralRounding (1..1) <"Rounding methodology applicable to the Delivery Amount and the Return Amount in terms of nearest integral multiple of Base Currency units. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (c)(vi)(C): Rounding. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (d)(vi)(C): Rounding. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (c)(vi)(C): Rounding.">
		disputedDeliveryAmount Money (1..1) <"Paragraph 5. If a party (a 'Disputing Party') disputes the the Calculation Agent (IM)’s calculation of a Delivery Amount (IM).">
		baseCurrency string (1..1) <"Base Currency means the currency specified as such in Paragraph 13.">

	output:
		result Money (1..1)

	alias undisputedAdjustedPostedCreditSupportAmount:
		UndisputedAdjustedPostedCreditSupportAmount(postedCreditSupportItems, priorDeliveryAmountAdjustment, priorReturnAmountAdjustment, disputedTransferredPostedCreditSupportAmount, baseCurrency)

	alias creditSupportAmount:
		CreditSupportAmount(marginAmount, threshold, marginApproach, marginAmountIA, baseCurrency)

	alias deliveryAmount:
		Max(creditSupportAmount -> amount - undisputedAdjustedPostedCreditSupportAmount -> amount, 0.0)

	alias undisputedDeliveryAmount:
		Max(deliveryAmount - disputedDeliveryAmount -> amount, 0.0)

	condition:
		(baseCurrency = minimumTransferAmount -> unitOfAmount -> currency
		and (baseCurrency = disputedDeliveryAmount -> unitOfAmount -> currency))

	assign-output result -> amount:
		if undisputedDeliveryAmount >= minimumTransferAmount -> amount
		then RoundToNearest(undisputedDeliveryAmount, rounding -> deliveryAmount, RoundingModeEnum -> Up)
		else 0.0

	assign-output result -> unitOfAmount -> currency:
	    baseCurrency

		