Rosetta versionNumber "0.0.1"
FIX versionNumber "5.0 SP3"
FpML versionNumber "5.10"

/*
 * FpML cd validation rules perceived as needing extensions to the data rule syntax or calls to java functions:
 * - cd-15, cd-16, cd-17, cd-18 as they require to test the number of referenceObligation nodes
 * - cd-21, cd-21b, cd-22 as in order to test the condition that a trade is a short form, we need to have a like-type function to represent that an enumeration value that begins with string "iTraxx" or "CDX".
 * - cd-33 as there is a need for date computation by 'adding an integer multiple of the period in paymentFrequency to firstPaymentDate'
 * - cd-38 as there is a need to sum-up a set of values and check that their total = 1
 */
class AdditionalFixedPayments stereotype contractualProduct <"A class to specify the events that will give rise to the payment additional fixed payments.">
	[synonym FpML value AdditionalFixedPayments]
{
	interestShortfallReimbursement boolean (0..1) <"An additional Fixed Payment Event. Corresponds to the payment by or on behalf of the Issuer of an actual interest amount in respect to the reference obligation that is greater than the expected interest amount. ISDA 2003 Term: Interest Shortfall Reimbursement.">;
		[synonym FpML value interestShortfallReimbursement]
	principalShortfallReimbursement boolean (0..1) <"An additional Fixed Payment Event. Corresponds to the payment by or on behalf of the Issuer of an actual principal amount in respect to the reference obligation that is greater than the expected principal amount. ISDA 2003 Term: Principal Shortfall Reimbursement.">;
		[synonym FpML value principalShortfallReimbursement]
	writedownReimbursement boolean (0..1) <"An Additional Fixed Payment. Corresponds to the payment by or on behalf of the issuer of an amount in respect to the reference obligation in reduction of the prior writedowns. ISDA 2003 Term: Writedown Reimbursement.">;
		[synonym FpML value writedownReimbursement]
}

class AdjustedPaymentDates stereotype contractualProduct
	[synonym FpML value AdjustedPaymentDates]
{
	adjustedPaymentDate date (1..1) <"The adjusted payment date. This date should already be adjusted for any applicable business day convention. This component is not intended for use in trade confirmation but may be specified to allow the fee structure to also serve as a cashflow type component (all dates the the Cashflows type are adjusted payment dates).">;
		[synonym FpML value adjustedPaymentDate]
	paymentAmount Money (1..1) <"The currency amount of the payment.">;
		[synonym FpML value paymentAmount]
}

class BasketName stereotype contractualProduct <"The basket name, with an optional set of basket Id. Corresponds to a sub-construct of the FpML BasketIdentifier.model.">
{
	basketName string (1..1) scheme "basketNameScheme" <"The name of the basket expressed as a free format string. FpML does not define usage rules for this element.">;
		[synonym FpML value basketName]
	basketId string (0..*) scheme "basketIdScheme" <"A CDS basket identifier.">;
		[synonym FpML value basketId]
}

class BasketReferenceInformation stereotype contractualProduct <"CDS Basket Reference Information.">
	[synonym FpML value BasketReferenceInformation]
{
	basketName BasketName (0..1) <"This attribute corresponds to the FpML combination of a basket name and a basket Id, as a component of the BasketIdentifier.model.">;
	basketId string (0..*) scheme "basketIdScheme" <"A CDS basket identifier.">;
		[synonym FpML value basketId]
	referencePool ReferencePool (1..1) <"This element contains all the reference pool items to define the reference entity and reference obligation(s) in the basket.">;
		[synonym FpML value referencePool]
	nthToDefault int (0..1) <"N th reference obligation to default triggers payout.">;
		[synonym FpML value nthToDefault]
	mthToDefault int (0..1) <"M th reference obligation to default to allow representation of N th to M th defaults.">;
		[synonym FpML value mthToDefault]
	tranche Tranche (0..1) <"This element contains CDS tranche terms.">;
		[synonym FpML value tranche]
}

choice rule BasketReferenceInformation_choice1 <"Choice rule to represent the FpML choice construct between [basketName, basketId] and basketId.">
	for BasketReferenceInformation required choice between
	basketName and basketId

choice rule BasketReferenceInformation_choice2 <"Choice rule to represent an FpML choice construct. This choice rule is complemented by the data rule BasketReferenceInformation_nthToDefault to represent the FpML construct where there is a choice between a tranche element and a [required nthToDefault, optional mthToDefault] branch.">
	for BasketReferenceInformation required choice between
	nthToDefault and tranche

data rule BasketReferenceInformation_basketName_basketId <"FpML specifies a choice between (basketName and optional basketId) and basketId.">
	when BasketReferenceInformation exists
	then (BasketReferenceInformation -> basketName exists and BasketReferenceInformation -> basketId exists)
		or (BasketReferenceInformation -> basketName exists or BasketReferenceInformation -> basketId exists)

data rule BasketReferenceInformation_nthToDefault <"As part of the branch of the choice node, FpML requires the nthToDefault element to be present, while the mthToDefault one is optional.">
	when BasketReferenceInformation -> mthToDefault exists
	then BasketReferenceInformation -> nthToDefault must exist

data rule BasketReferenceInformation_nthToDefault_mthToDefault <"FpML validation rule cd-39 - Context: BasketReferenceInformation (complex type). If nthToDefault exists, and if mthToDefault exists, then nthToDefault must be less than mthToDefault.">
	when (BasketReferenceInformation -> nthToDefault and BasketReferenceInformation -> mthToDefault) exists
	then BasketReferenceInformation -> nthToDefault < BasketReferenceInformation -> mthToDefault

class CalculationAmount extends Money stereotype contractualProduct
	[synonym FpML value CalculationAmount]
{
	step Step (0..*) <"A schedule of step date and value pairs. On each step date the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. FpML specifies that an FpML document containing an unordered list of steps is still regarded as a conformant document.">;
		[synonym FpML value step]
}

class CashSettlementTerms stereotype contractualProduct <"In FpML, PhysicalSettlementTerms and CashSettlementTerms extend SettlementTerms.  In Rosetta, this extension paradigm has not been used because SettlementTerms class has been used for purposes related to securities transactions, while it is not used as such in the FpML standard (i.e. only as an abstract construct.">
	[synonym FpML value CashSettlementTerms]
{
	id string (0..1);
		[synonym FpML value id]
	settlementCurrency CurrencyEnum (0..1) <"ISDA 2003 Term: Settlement Currency.">;
		[synonym FpML value settlementCurrency]
	valuationDate ValuationDate (0..1) <"The number of business days after conditions to settlement have been satisfied when the calculation agent obtains a price quotation on the Reference Obligation for purposes of cash settlement. There may be one or more valuation dates. This is typically specified if the cash settlement amount is not a fixed amount. ISDA 2003 Term: Valuation Date.">;
		[synonym FpML value valuationDate]
	valuationTime BusinessCenterTime (0..1) <"The time of day in the specified business center when the calculation agent seeks quotations for an amount of the reference obligation for purposes of cash settlement. ISDA 2003 Term: Valuation Time.">;
		[synonym FpML value valuationTime]
	quotationMethod QuotationRateTypeEnum (0..1) <"The type of price quotations to be requested from dealers when determining the market value of the reference obligation for purposes of cash settlement. For example, Bid, Offer or Mid-market. ISDA 2003 Term: Quotation Method.">;
		[synonym FpML value quotationMethod]
	quotationAmount Money (0..1) <"In the determination of a cash settlement amount, if weighted average quotations are to be obtained, the quotation amount specifies an upper limit to the outstanding principal balance of the reference obligation for which the quote should be obtained. If not specified, the ISDA definitions provide for a fallback amount equal to the floating rate payer calculation amount. ISDA 2003 Term: Quotation Amount.">;
		[synonym FpML value quotationAmount]
	minimumQuotationAmout Money (0..1) <"In the determination of a cash settlement amount, if weighted average quotations are to be obtained, the minimum quotation amount specifies a minimum intended threshold amount of outstanding principal balance of the reference obligation for which the quote should be obtained. If not specified, the ISDA definitions provide for a fallback amount of the lower of either USD 1,000,000 (or its equivalent in the relevant obligation currency) or the quotation amount. ISDA 2003 Term: Minimum Quotation Amount.">;
		[synonym FpML value minimumQuotationAmout]
	dealer string (0..1) <"A dealer from whom quotations are obtained by the calculation agent on the reference obligation for purposes of cash settlement. ISDA 2003 Term: Dealer.">;
		[synonym FpML value dealer]
	cashSettlementBusinessDays int (0..1) <"The number of business days used in the determination of the cash settlement payment date. If a cash settlement amount is specified, the cash settlement payment date will be this number of business days following the calculation of the final price. If a cash settlement amount is not specified, the cash settlement payment date will be this number of business days after all conditions to settlement are satisfied. ISDA 2003 Term: Cash Settlement Date.">;
		[synonym FpML value cashSettlementBusinessDays]
	cashSettlementAmount Money (0..1) <"The amount paid by the seller to the buyer for cash settlement on the cash settlement date. If not otherwise specified, would typically be calculated as 100 (or the Reference Price) minus the price of the Reference Obligation (all expressed as a percentage) times Floating Rate Payer Calculation Amount. ISDA 2003 Term: Cash Settlement Amount.">;
		[synonym FpML value cashSettlementAmount]
	recoveryFactor number (0..1) <"Used for fixed recovery, specifies the recovery level, determined at contract inception, to be applied on a default. Used to calculate the amount paid by the seller to the buyer for cash settlement on the cash settlement date. Amount calculation is (1 minus the Recovery Factor) multiplied by the Floating Rate Payer Calculation Amount. The currency will be derived from the Floating Rate Payer Calculation Amount.">;
		[synonym FpML value recoveryFactor]
	fixedSettlement boolean (0..1) <"Used for Recovery Lock, to indicate whether fixed Settlement is Applicable or Not Applicable. If Buyer fails to deliver an effective Notice of Physical Settlement on or before the Buyer NOPS Cut-off Date, and If Seller fails to deliver an effective Seller NOPS on or before the Seller NOPS Cut-off Date, then either: (a) if Fixed Settlement is specified in the related Confirmation as not applicable, then the Seller NOPS Cut-off Date shall be the Termination Date; or (b) if Fixed Settlement is specified in the related Confirmation as applicable, then: (i) if the Fixed Settlement Amount is a positive number, Seller shall, subject to Section 3.1 (except for the requirement of satisfaction of the Notice of Physical Settlement Condition to Settlement), pay the Fixed Settlement Amount to Buyer on the Fixed Settlement Payment Date; and (ii) if the Fixed Settlement Amount is a negative number, Buyer shall, subject to Section 3.1 (except for the requirement of satisfaction of the Notice of Physical Settlement Condition to Settlement), pay the absolute value of the Fixed Settlement Amount to Seller on the Fixed Settlement Payment Date.">;
		[synonym FpML value fixedSettlement]
	accruedInterest boolean (0..1) <"Indicates whether accrued interest is included (true) or not (false). For cash settlement this specifies whether quotations should be obtained inclusive or not of accrued interest. For physical settlement this specifies whether the buyer should deliver the obligation with an outstanding principal balance that includes or excludes accrued interest. ISDA 2003 Term: Include/Exclude Accrued Interest.">;
		[synonym FpML value accruedInterest]
	valuationMethod ValuationMethodEnum (0..1) <"The ISDA defined methodology for determining the final price of the reference obligation for purposes of cash settlement. (ISDA 2003 Term: Valuation Method). For example, Market, Highest etc.">;
		[synonym FpML value valuationMethod]
}

choice rule CashSettlementTerms_choice <"Choice rule to represent an FpML choice construct.">
	for CashSettlementTerms optional choice between
	cashSettlementAmount and recoveryFactor

data rule CashSettlementTerms_cashSettlementBusinessDays <"FpML specifies cashSettlementBusinessDays as a nonNegativeInteger.">
	when CashSettlementTerms -> cashSettlementBusinessDays exists
	then CashSettlementTerms -> cashSettlementBusinessDays >= 0

data rule CashSettlementTerms_recoveryFactor <"FpML specifies recoveryFactor as a RestrictedPercentage, meaning that it is a decimal which value is restricted between 0 and 1.">
	when CashSettlementTerms -> recoveryFactor exists
	then CashSettlementTerms -> recoveryFactor >= 0b and CashSettlementTerms -> recoveryFactor <= 1b

data rule CashSettlementTerms_quotationAmount <"FpML validation rule cd-37 - Context: CashSettlementTerms (complex type). If condition quotationAmount is true, and if condition minimumQuotationAmount is true, and if both amounts have the same-currency, then quotationAmount/amount must be greater or equal to minimumQuotationAmount/amount.">
	when (CashSettlementTerms -> quotationAmount and CashSettlementTerms -> minimumQuotationAmout) exists
		and CashSettlementTerms -> quotationAmount -> currency = CashSettlementTerms -> minimumQuotationAmout -> currency
	then CashSettlementTerms -> quotationAmount -> amount > CashSettlementTerms -> minimumQuotationAmout -> amount

class CreditDefaultSwap extends ContractualHeader stereotype contractualProduct <"A class defining the credit default swap.">
	[synonym FpML value CreditDefaultSwap]
{
	generalTerms GeneralTerms (1..1) <"This element contains all the data that appears in the section entitled '1. General Terms' in the 2003 ISDA Credit Derivatives Confirmation.">;
		[synonym FpML value generalTerms]
	feeLeg FeeLeg (1..1) <"This element contains all the terms relevant to defining the fixed amounts/payments per the applicable ISDA definitions.">;
		[synonym FpML value feeLeg]
	protectionTerms ProtectionTerms (1..*) <"This element contains all the terms relevant to defining the applicable floating rate payer calculation amount, credit events and associated conditions to settlement, and reference obligations.">;
		[synonym FpML value protectionTerms]
	cashSettlementTerms CashSettlementTerms (0..1);
		[synonym FpML value cashSettlementTerms]
	physicalSettlementTerms PhysicalSettlementTerms (0..1);
		[synonym FpML value physicalSettlementTerms]
}

choice rule CreditDefaultSwap_choice <"Choice rule to represent an FpML choice construct.">
	for CreditDefaultSwap optional choice between
	cashSettlementTerms and physicalSettlementTerms

//data rule CreditDefaultSwap_contractualDefinitions_ISDA1999Credit <"FpML validation rule cd-19 - Context: CreditDefaultSwap (complex type). If the condition ISDA1999Credit is true, then the following elements must not exist: protectionTerms/creditEvents/creditEventNotice/businessCenter, protectionTerms/creditEvents/restructuring/multipleHolderObligation, protectionTerms/creditEvents/restructuring/multipleCreditEventNotices, generalTerms/referenceInformation/allGuarantees, generalTerms/indexReferenceInformation, generalTerms/substitution, generalTerms/modifiedEquityDelivery.">
//	when Contract -> documentation -> contractualDefinitions = ContractualDefinitionsEnum.ISDA1999Credit
//	then (Contract -> contractualProduct -> creditDefaultSwap -> protectionTerms -> creditEvents -> creditEventNotice -> businessCenter
//		and Contract -> contractualProduct -> creditDefaultSwap -> protectionTerms -> creditEvents -> restructuring -> multipleHolderObligation 
//		and Contract -> contractualProduct -> creditDefaultSwap -> protectionTerms -> creditEvents -> restructuring -> multipleCreditEventNotices
//		and Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> referenceInformation -> allGuarantees
//		and Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> indexReferenceInformation
//		and Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> substitution
//		and Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> modifiedEquityDelivery)
//		must be absent
//
//data rule CreditDefaultSwap_contractualDefinitions_ISDA2003Credit <"FpML validation rule cd-20 - Context: CreditDefaultSwap (complex type). If the condition ISDA2003 is true, then protectionTerms/obligations/notContingent must not exist."> 
//	when Contract -> documentation -> contractualDefinitions = ContractualDefinitionsEnum.ISDA2003Credit
//	then Contract -> contractualProduct -> creditDefaultSwap -> protectionTerms -> obligations -> notContingent must be absent
//
//data rule CreditDefaultSwap_contractualDefinitions_cashSettlementTerms <"FpML validation rule cd-23 - Context: CreditDefaultSwap (complex type) If the condition LongForm is true, then cashSettlementTerms or physicalSettlementTerms must exist.">
//	when ( Contract -> documentation -> masterConfirmation or Contract -> documentation -> contractualMatrix) is absent
//		and Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> referenceInformation exists
//	then (Contract -> contractualProduct -> creditDefaultSwap -> cashSettlementTerms or Contract -> contractualProduct -> creditDefaultSwap -> physicalSettlementTerms) must exist
//
//data rule CreditDefaultSwap_LongForm <"FpML validation rule cd-24 - Context: CreditDefaultSwap (complex type). If the condition LongForm is true, then the following elements must exist: protectionTerms/creditEvents/creditEventNotice, protectionTerms/obligations, generalTerms/referenceInformation/referencePrice.">
//	when ( Contract -> documentation -> masterConfirmation or Contract -> documentation -> contractualMatrix ) is absent 
//		and Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> referenceInformation exists
//	then ( Contract -> contractualProduct -> creditDefaultSwap -> protectionTerms -> creditEvents -> creditEventNotice 
//		and Contract -> contractualProduct -> creditDefaultSwap -> protectionTerms -> obligations 
//		and Contract -> contractualProduct -> creditDefaultSwap ->generalTerms -> referenceInformation -> referencePrice ) must exist
//
//data rule CreditDefaultSwap_LongForm_physicalSettlementTerms <"FpML validation rule cd-25 - Context: CreditDefaultSwap (complex type). If the condition LongForm is true, and if physicalSettlementTerms exists, then physicalSettlementTerms must contain settlementCurrency, physicalSettlementPeriod, escrow and deliverableObligations/accruedInterest.">
//	when (Contract -> documentation -> masterConfirmation or Contract -> documentation -> contractualMatrix) is absent 
//		and Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> referenceInformation exists
//		and Contract -> contractualProduct -> creditDefaultSwap -> physicalSettlementTerms exists
//	then (Contract -> contractualProduct -> creditDefaultSwap -> physicalSettlementTerms -> settlementCurrency 
//		and Contract -> contractualProduct -> creditDefaultSwap -> physicalSettlementTerms -> physicalSettlementPeriod
//		and Contract -> contractualProduct -> creditDefaultSwap -> physicalSettlementTerms -> escrow 
//		and Contract -> contractualProduct -> creditDefaultSwap -> physicalSettlementTerms -> deliverableObligations -> accruedInterest)
//		must exist

class CreditDefaultSwapOption extends OptionBaseExtended stereotype contractualProduct <"An option on a credit default swap.">
	[synonym FpML value CreditDefaultSwapOption]
{
	clearingInstructions SwaptionPhysicalSettlement (0..1) <"Specifies any instructions on how the physical settlement is to be effected when the option is exercised.">;
		[synonym FpML value clearingInstructions]
	strike CreditOptionStrike (1..1) <"Specifies the strike of the option on credit default swap.">;
		[synonym FpML value strike]
	creditDefaultSwap CreditDefaultSwap (1..1);
		[synonym FpML value creditDefaultSwap]
}

class CreditOptionStrike stereotype contractualProduct one of <"A class to specify the strike of a credit swaption or a credit default swap option.">
	[synonym FpML value CreditOptionStrike]
{
	spread number (0..1) <"The strike of a credit default swap option or credit swaption when expressed as a spread per annum.">;
		[synonym FpML value spread]
	price number (0..1) <"The strike of a credit default swap option or credit swaption when expressed as in reference to the price of the underlying obligation(s) or index.">;
		[synonym FpML value price]
	/*
	 * This referencing is based upon the cd-swaption-1; needs to confirm that there is no other example.
	 */
	strikeReference FixedAmountCalculation (0..1) reference <"The strike of a credit default swap option or credit swaption when expressed in reference to the spread of the underlying swap (typical practice in the case of single name swaps).">;
		[synonym FpML value strikeReference]
}

class DeliverableObligations stereotype contractualProduct <"A class to specify all the ISDA terms relevant to defining the deliverable obligations.">
	[synonym FpML value DeliverableObligations]
{
	/*
	 * The FpML credit construct makes a large use of optional boolean elements, with indication as part of the documentation that the applicability of the element is indicated by the appearance of its corresponding element.
	 * A follow-up is needed with the FpML group to confirm whether an element with the value 'true' would have the same meaning with an element with the value 'false', and possibly implement
	 * restriction logic as part of the Rosetta model.
	 */
	accruedInterest boolean (0..1) <"Indicates whether accrued interest is included (true) or not (false). For cash settlement this specifies whether quotations should be obtained inclusive or not of accrued interest. For physical settlement this specifies whether the buyer should deliver the obligation with an outstanding principal balance that includes or excludes accrued interest. ISDA 2003 Term: Include/Exclude Accrued Interest.">;
		[synonym FpML value accruedInterest]
	category ObligationCategoryEnum (0..1) <"Used in both obligations and deliverable obligations to represent a class or type of securities which apply. ISDA 2003 Term: Obligation Category/Deliverable Obligation Category.">;
		[synonym FpML value category]
	notSubordinated boolean (0..1) <"An obligation and deliverable obligation characteristic. An obligation that ranks at least equal with the most senior Reference Obligation in priority of payment or, if no Reference Obligation is specified in the related Confirmation, the obligations of the Reference Entity that are senior. ISDA 2003 Term: Not Subordinated.">;
		[synonym FpML value notSubordinated]
	specifiedCurrency SpecifiedCurrency (0..1) <"An obligation and deliverable obligation characteristic. The currency or currencies in which an obligation or deliverable obligation must be payable. ISDA 2003 Term: Specified Currency.">;
		[synonym FpML value specifiedCurrency]
	notSovereignLender boolean (0..1) <"An obligation and deliverable obligation characteristic. Any obligation that is not primarily (majority) owed to a Sovereign or Supranational Organisation. ISDA 2003 Term: Not Sovereign Lender.">;
		[synonym FpML value notSovereignLender]
	notDomesticCurrency NotDomesticCurrency (0..1) <"An obligation and deliverable obligation characteristic. Any obligation that is payable in any currency other than the domestic currency. Domestic currency is either the currency so specified or, if no currency is specified, the currency of (a) the reference entity, if the reference entity is a sovereign, or (b) the jurisdiction in which the relevant reference entity is organised, if the reference entity is not a sovereign. ISDA 2003 Term: Not Domestic Currency.">;
		[synonym FpML value notDomesticCurrency]
	notDomesticLaw boolean (0..1) <"An obligation and deliverable obligation characteristic. If the reference entity is a Sovereign, this means any obligation that is not subject to the laws of the reference entity. If the reference entity is not a sovereign, this means any obligation that is not subject to the laws of the jurisdiction of the reference entity. ISDA 2003 Term: Not Domestic Law.">;
		[synonym FpML value notDomesticLaw]
	listed boolean (0..1) <"An obligation and deliverable obligation characteristic. Indicates whether or not the obligation is quoted, listed or ordinarily purchased and sold on an exchange. ISDA 2003 Term: Listed.">;
		[synonym FpML value listed]
	notContingent boolean (0..1) <"A deliverable obligation characteristic. In essence Not Contingent means the repayment of principal cannot be dependant on a formula/index, i.e. to prevent the risk of being delivered an instrument that may never pay any element of principal, and to ensure that the obligation is interest bearing (on a regular schedule). ISDA 2003 Term: Not Contingent.">;
		[synonym FpML value notContingent]
	notDomesticIssuance boolean (0..1) <"An obligation and deliverable obligation characteristic. Any obligation other than an obligation that was intended to be offered for sale primarily in the domestic market of the relevant Reference Entity. This specifies that the obligation must be an internationally recognised bond. ISDA 2003 Term: Not Domestic Issuance.">;
		[synonym FpML value notDomesticIssuance]
	assignableLoan PCDeliverableObligationCharac (0..1) <"A deliverable obligation characteristic. A loan that is freely assignable to a bank or financial institution without the consent of the Reference Entity or the guarantor, if any, of the loan (or the consent of the applicable borrower if a Reference Entity is guaranteeing the loan) or any agent. ISDA 2003 Term: Assignable Loan.">;
		[synonym FpML value assignableLoan]
	consentRequiredLoan PCDeliverableObligationCharac (0..1) <"A deliverable obligation characteristic. A loan that is capable of being assigned with the consent of the Reference Entity or the guarantor, if any, of the loan or any agent. ISDA 2003 Term: Consent Required Loan.">;
		[synonym FpML value consentRequiredLoan]
	directLoanParticipation LoanParticipation (0..1) <"A deliverable obligation characteristic. A loan with a participation agreement whereby the buyer is capable of creating, or procuring the creation of, a contractual right in favour of the seller that provides the seller with recourse to the participation seller for a specified share in any payments due under the relevant loan which are received by the participation seller. ISDA 2003 Term: Direct Loan Participation.">;
		[synonym FpML value directLoanParticipation]
	transferable boolean (0..1) <"A deliverable obligation characteristic. An obligation that is transferable to institutional investors without any contractual, statutory or regulatory restrictions. ISDA 2003 Term: Transferable.">;
		[synonym FpML value transferable]
	maximumMaturity Period (0..1) <"A deliverable obligation characteristic. An obligation that has a remaining maturity from the Physical Settlement Date of not greater than the period specified. ISDA 2003 Term: Maximum Maturity.">;
		[synonym FpML value maximumMaturity]
	acceleratedOrMatured boolean (0..1) <"A deliverable obligation characteristic. An obligation at time of default is due to mature and due to be repaid, or as a result of downgrade/bankruptcy is due to be repaid as a result of an acceleration clause. ISDA 2003 Term: Accelerated or Matured.">;
		[synonym FpML value acceleratedOrMatured]
	notBearer boolean (0..1) <"A deliverable obligation characteristic. Any obligation that is not a bearer instrument. This applies to Bonds only and is meant to avoid tax, fraud and security/delivery provisions that can potentially be associated with Bearer Bonds. ISDA 2003 Term: Not Bearer.">;
		[synonym FpML value notBearer]
	fullFaithAndCreditObLiability boolean (0..1) <"An obligation and deliverable obligation characteristic. Defined in the ISDA published additional provisions for U.S. Municipal as Reference Entity. ISDA 2003 Term: Full Faith and Credit Obligation Liability.">;
		[synonym FpML value fullFaithAndCreditObLiability]
	generalFundObligationLiability boolean (0..1) <"An obligation and deliverable obligation characteristic. Defined in the ISDA published additional provisions for U.S. Municipal as Reference Entity. ISDA 2003 Term: General Fund Obligation Liability.">;
		[synonym FpML value generalFundObligationLiability]
	revenueObligationLiability boolean (0..1) <"An obligation and deliverable obligation characteristic. Defined in the ISDA published additional provisions for U.S. Municipal as Reference Entity. ISDA 2003 Term: Revenue Obligation Liability.">;
		[synonym FpML value revenueObligationLiability]
	indirectLoanParticipation LoanParticipation (0..1) <"ISDA 1999 Term: Indirect Loan Participation. NOTE: Only applicable as a deliverable obligation under ISDA Credit 1999.">;
		[synonym FpML value indirectLoanParticipation]
	excluded string (0..1) <"A free format string to specify any excluded obligations or deliverable obligations, as the case may be, of the reference entity or excluded types of obligations or deliverable obligations. ISDA 2003 Term: Excluded Obligations/Excluded Deliverable Obligations.">;
		[synonym FpML value excluded]
	othReferenceEntityObligations string (0..1) <"This element is used to specify any other obligations of a reference entity in both obligations and deliverable obligations. The obligations can be specified free-form. ISDA 2003 Term: Other Obligations of a Reference Entity.">;
		[synonym FpML value othReferenceEntityObligations]
}

choice rule DeliverableObligations_choice <"Choice rule to represent an FpML choice construct.">
	for DeliverableObligations optional choice between
	fullFaithAndCreditObLiability and generalFundObligationLiability and revenueObligationLiability

data rule DeliverableObligations_maximumMaturity <"In FpML, maximumMaturity is of type PeriodEnum, which doesn't include the value 'T'.">
	when DeliverableObligations -> maximumMaturity exists
	then DeliverableObligations -> maximumMaturity -> period <> PeriodEnum.T

data rule DeliverableObligations_category <"FpML validation rule cd-34 - Context: DeliverableObligations (complex type). If category is equal to 'ReferenceObligationsOnly', then no other elements may be contained in the deliverable obligations element.">
	when DeliverableObligations -> category exists
		and DeliverableObligations -> category = ObligationCategoryEnum.ReferenceObligationsOnly
	then (DeliverableObligations -> acceleratedOrMatured
		and DeliverableObligations -> accruedInterest
		and DeliverableObligations -> assignableLoan
		and DeliverableObligations -> consentRequiredLoan
		and DeliverableObligations -> directLoanParticipation
		and DeliverableObligations -> excluded
		and DeliverableObligations -> fullFaithAndCreditObLiability
		and DeliverableObligations -> generalFundObligationLiability
		and DeliverableObligations -> indirectLoanParticipation
		and DeliverableObligations -> listed
		and DeliverableObligations -> maximumMaturity
		and DeliverableObligations -> notBearer
		and DeliverableObligations -> notContingent
		and DeliverableObligations -> notDomesticCurrency
		and DeliverableObligations -> notDomesticIssuance
		and DeliverableObligations -> notDomesticLaw
		and DeliverableObligations -> notSovereignLender
		and DeliverableObligations -> notSubordinated
		and DeliverableObligations -> othReferenceEntityObligations
		and DeliverableObligations -> revenueObligationLiability
		and DeliverableObligations -> specifiedCurrency
		and DeliverableObligations -> transferable)
	must be absent
	
class FeeLeg stereotype contractualProduct
	[synonym FpML value FeeLeg]
{
	id string (0..1);
		[synonym FpML value id]
	initialPayment InitialPayment (0..1) <"Specifies a single fixed payment that is payable by the payer to the receiver on the initial payment date. The fixed payment to be paid is specified in terms of a known currency amount. This element should be used for CDS Index trades, Standard CDS trades, and can be used for CDS trades where it is necessary to represent a payment from Seller to Buyer. For CDS trades where a payment is to be made from Buyer to Seller the feeLeg/singlePayment structure must be used.">;
		[synonym FpML value initialPayment]
	periodicPayment PeriodicPayment (0..1) <"Specifies a periodic schedule of fixed amounts that are payable by the buyer to the seller on the fixed rate payer payment dates. The fixed amount to be paid on each payment date can be specified in terms of a known currency amount or as an amount calculated on a formula basis by reference to a per annum fixed rate. The applicable business day convention and business day for adjusting any fixed rate payer payment date if it would otherwise fall on a day that is not a business day are those specified in the dateAdjustments element within the generalTerms component.">;
		[synonym FpML value periodicPayment]
	singlePayment SinglePayment (0..1) <"Specifies a single fixed amount that is payable by the buyer to the seller on the fixed rate payer payment date. The fixed amount to be paid is specified in terms of a known currency amount.">;
		[synonym FpML value singlePayment]
	marketFixedRate number (0..1) <"An optional element that only has meaning in a credit index trade. This element contains the credit spread ('fair value') at which the trade was executed. Unlike the fixedRate of an index, the marketFixedRate varies over the life of the index depending on market conditions. The marketFixedRate is the price of the index as quoted by trading desks.">;
		[synonym FpML value marketFixedRate]
	paymentDelay boolean (0..1) <"Applicable to CDS on MBS to specify whether payment delays are applicable to the fixed Amount. RMBS typically have a payment delay of 5 days between the coupon date of the reference obligation and the payment date of the synthetic swap. CMBS do not, on the other hand, with both payment dates being on the 25th of each month.">;
		[synonym FpML value paymentDelay]
	initialPoints number (0..1) <"An optional element that contains the up-front points expressed as a percentage of the notional. An initialPoints value of 5% would be represented as 0.05. The initialPoints element is an alternative to marketFixedRate in quoting the traded level of a trade. When initialPoints is used, the traded level is the sum of fixedRate and initialPoints. The initialPoints is one of the items that are factored into the initialPayment calculation and is payable by the Buyer to the Seller. Note that initialPoints and marketFixedRate may both be present in the same document when both implied values are desired.">;
		[synonym FpML value initialPoints]
	marketPrice number (0..1) <"An optional element that only has meaning in a credit index trade. This element contains the price at which the trade was executed and is used instead of marketFixedRate on credit trades on certain indicies which are quoted using a price rather than a spread.">;
		[synonym FpML value marketPrice]
	quotationStyle QuotationStyleEnum (0..1) <"The type of quotation that was used between the trading desks. The purpose of this element is to indicate the actual quotation style that was used to quote this trade which may not be apparent when both marketFixedRate and initialPoints are included in the document. When quotationStyle is ‘PointsUpFront’, the initialPoints element should be populated. When quotationStyle is ‘TradedSpread’, the marketFixedRate element should be populated.">;
		[synonym FpML value quotationStyle]
}

choice rule FeeLeg_choice <"Choice rule to represent an FpML choice construct.">
	for FeeLeg required choice between
	initialPayment and singlePayment

data rule FeeLeg_initialPoints <"The FpML QuotationStyleEnum states that when quotation style is 'PointsUpFront', the initialPoints element of the feeLeg should be populated.">
	when FeeLeg -> quotationStyle = QuotationStyleEnum.PointsUpFront
	then FeeLeg -> initialPoints must exist

data rule FeeLeg_marketFixedRate <"The FpML QuotationStyleEnum states that when quotation style is 'TradedSpread', the marketFixedRate element of the feeLeg should be populated.">
	when FeeLeg -> quotationStyle = QuotationStyleEnum.TradedSpread
	then FeeLeg -> marketFixedRate must exist

data rule FeeLeg_marketPrice <"The FpML QuotationStyleEnum states that when quotation style is 'Price', the marketPrice element of the feeLeg should be populated. FpML specifies marketPrice as a NonNegativeDecimal.">
	when FeeLeg -> quotationStyle = QuotationStyleEnum.Price
	then FeeLeg -> marketPrice must exist and FeeLeg -> marketPrice >= 0b

class FixedAmountCalculation stereotype contractualProduct
	[synonym FpML value FixedAmountCalculation]
{
	id string (0..1);
		[synonym FpML value id]
	calculationAmount CalculationAmount (0..1) <"The notional amount used in the calculation of fixed amounts where an amount is calculated on a formula basis, i.e. fixed amount = fixed rate payer calculation amount x fixed rate x fixed rate day count fraction. ISDA 2003 Term: Fixed Rate Payer Calculation Amount.">;
		[synonym FpML value calculationAmount]
	fixedRate number (1..1) <"The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.  The FpML implementation consists in a FixedRate complex type with a simpleContent of type decimal and and associated Id.">;
		[synonym FpML value fixedRate]
	dayCountFraction DayCountFractionEnum (0..1) <"The day count fraction. ISDA 2003 Term: Fixed Rate Day Count Fraction.">;
		[synonym FpML value dayCountFraction]
}

class FloatingAmountCalculation stereotype contractualProduct
	[synonym FpML value FloatingAmountCalculation]
{
	calculationAmount CalculationAmount (0..1) <"The notional amount used in the calculation of fixed amounts where an amount is calculated on a formula basis, i.e. fixed amount = fixed rate payer calculation amount x fixed rate x fixed rate day count fraction. ISDA 2003 Term: Fixed Rate Payer Calculation Amount.">;
		[synonym FpML value calculationAmount]
	floatingRate FloatingRateCalculation (1..1) <"The calculation period floating rate.">;
		[synonym FpML value floatingRate]
	dayCountFraction DayCountFractionEnum (0..1) <"The day count fraction. ISDA 2003 Term: Fixed Rate Day Count Fraction.">;
		[synonym FpML value dayCountFraction]
	initialFixingDate date (0..1);
		[synonym FpML value initialFixingDate]
	finalFixingDate AdjustableDate (0..1);
		[synonym FpML value finalFixingDate]
}

class FloatingAmountEvents stereotype contractualProduct <"A class to specify the ISDA terms relating to the floating rate payment events and the implied additional fixed payments, applicable to the credit derivatives transactions on mortgage-backed securities with pay-as-you-go or physical settlement.">
	[synonym FpML value FloatingAmountEvents]
{
	failureToPayPrincipal boolean (0..1) <"A floating rate payment event. Corresponds to the failure by the Reference Entity to pay an expected principal amount or the payment of an actual principal amount that is less than the expected principal amount. ISDA 2003 Term: Failure to Pay Principal.">;
		[synonym FpML value failureToPayPrincipal]
	interestShortfall InterestShortFall (0..1) <"A floating rate payment event. With respect to any Reference Obligation Payment Date, either (a) the non-payment of an Expected Interest Amount or (b) the payment of an Actual Interest Amount that is less than the Expected Interest Amount. ISDA 2003 Term: Interest Shortfall.">;
		[synonym FpML value interestShortfall]
	writedown boolean (0..1) <"A floating rate payment event. Results from the fact that the underlyer writes down its outstanding principal amount. ISDA 2003 Term: Writedown.">;
		[synonym FpML value writedown]
	impliedWritedown boolean (0..1) <"A floating rate payment event. Results from the fact that losses occur to the underlying instruments that do not result in reductions of the outstanding principal of the reference obligation.">;
		[synonym FpML value impliedWritedown]
	floatingAmountProvisions FloatingAmountProvisions (0..1) <"Specifies the floating amount provisions associated with the floatingAmountEvents.">;
		[synonym FpML value floatingAmountProvisions]
	additionalFixedPayments AdditionalFixedPayments (0..1) <"Specifies the events that will give rise to the payment additional fixed payments.">;
		[synonym FpML value additionalFixedPayments]
}

class FloatingAmountProvisions stereotype contractualProduct
	[synonym FpML value FloatingAmountProvisions]
{
	wacCapInterestProvision boolean (0..1) <"As specified by the ISDA Supplement for use with trades on mortgage-backed securities, 'WAC Cap' means a weighted average coupon or weighted average rate cap provision (however defined in the Underlying Instruments) of the Underlying Instruments that limits, increases or decreases the interest rate or interest entitlement, as set out in the Underlying Instruments on the Effective Date without regard to any subsequent amendment The presence of the element with value set to 'true' signifies that the provision is applicable. From a usage standpoint, this provision is typically applicable in the case of CMBS and not applicable in case of RMBS trades.">;
		[synonym FpML value WACCapInterestProvision]
	stepUpProvision boolean (0..1) <"As specified by the ISDA Standard Terms Supplement for use with trades on mortgage-backed securities. The presence of the element with value set to 'true' signifies that the provision is applicable. If applicable, the applicable step-up terms are specified as part of that ISDA Standard Terms Supplement. From a usage standpoint, this provision is typically applicable in the case of RMBS and not applicable in case of CMBS trades.">;
		[synonym FpML value stepUpProvision]
}

//class GeneralTerms stereotype contractualProduct <"A class specifying the general terms of the credit default swap.">
//	[synonym FpML value GeneralTerms]
//{
//	effectiveDate AdjustableDate2 (0..1) <"The first day of the term of the trade. This day may be subject to adjustment in accordance with a business day convention. ISDA 2003 Term: Effective Date.">;
//		[synonym FpML value effectiveDate]
//	scheduledTerminationDate AdjustableDate2 (0..1) <"The scheduled date on which the credit protection will lapse. This day may be subject to adjustment in accordance with a business day convention. ISDA 2003 Term: Scheduled Termination Date.">;
//		[synonym FpML value scheduledTerminationDate]
//	buyerParty Party (1..1) reference <"FML specifies a reference to the party that buys this instrument, i.e. pays for this instrument and receives the rights defined by it. See 2000 ISDA definitions Article 11.1 (b).  Rosetta explicitly indicates the party, to simplify data access.">;
//		[synonym FpML value buyerPartyReference]
//	buyerAccount Account (0..1) reference <"FpML specifies a reference to the account that buys this instrument. Rosetta explicitly specifies the account, to simplify data access.">;
//		[synonym FpML value buyerAccountReference]
//	sellerParty Party (1..1) reference <"FML specifies a reference to the party that sells ('writes') this instrument, i.e. that grants the rights defined by this instrument and in return receives a payment for it. See 2000 ISDA definitions Article 11.1 (a).  Rosetta explicitly indicates the party, to simplify data access.">;
//		[synonym FpML value sellerPartyReference]
//	sellerAccount Account (0..1) reference <"FpML specifies a reference to the account that sells this instrument. Rosetta explicitly specifies the account, to simplify data access.">;
//		[synonym FpML value sellerAccountReference]
//	dateAdjustments BusinessDayAdjustments (0..1) <"ISDA 2003 Terms: Business Day and Business Day Convention.">;
//		[synonym FpML value dateAdjustments]
//	referenceInformation ReferenceInformation (0..1) <"This element contains all the terms relevant to defining the reference entity and reference obligation(s).">;
//		[synonym FpML value referenceInformation]
//	indexReferenceInformation IndexReferenceInformation (0..1) <"This element contains all the terms relevant to defining the Credit Default Swap Index.">;
//		[synonym FpML value indexReferenceInformation]
//	basketReferenceInformation BasketReferenceInformation (0..1) <"This element contains all the terms relevant to defining the Credit Default Swap Basket.">;
//		[synonym FpML value basketReferenceInformation]
//	additionalTerm string (0..*) scheme "additionalTermScheme" <"This element is used for representing information contained in the Additional Terms field of the 2003 Master Credit Derivatives confirm.">;
//		[synonym FpML value AdditionalTerm]
//	substitution boolean (0..1) <"Value of this element set to 'true' indicates that substitution is applicable.">;
//		[synonym FpML value substitution]
//	modifiedEquityDelivery boolean (0..1) <"Value of this element set to 'true' indicates that modified equity delivery is applicable.">;
//		[synonym FpML value modifiedEquityDelivery]
//}
//
//choice rule GeneralTerms_choice <"Choice rule to represent an FpML choice construct.">
//	for GeneralTerms required choice between
//	referenceInformation and indexReferenceInformation and basketReferenceInformation

//data rule GeneralTerms_tradeDate <"FpML validation rule cd-1 - Context: Trade (complex type). If creditDefaultSwap/generalTerms/referenceInformation exists, tradeHeader/tradeDate must be before creditDefaultSwap/generalTerms/effectiveDate/unadjustedDate.">
//	when Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> referenceInformation exists
//	then Contract -> tradeDate < Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> effectiveDate -> unadjustedDate
//
//data rule GeneralTerms_effectiveDate <"FpML validation rule cd-5 - Context: GeneralTerms (complex type). If effectiveDate exists, and if scheduledTerminationDate exists, then effectiveDate/unadjustedDate must be before scheduledTerminationDate/unadjustedDate.">
//	when CreditDefaultSwap -> generalTerms -> effectiveDate exists
//	then CreditDefaultSwap -> generalTerms -> effectiveDate -> unadjustedDate < CreditDefaultSwap -> generalTerms -> scheduledTerminationDate -> unadjustedDate
//
//data rule GeneralTerms_effectiveDateAdjustments <"FpML validation rule cd-7 - Context: GeneralTerms (complex type). If condition LongForm is true, then effectiveDate/dateAdjustments or effectiveDate/dateAdjustmentsReference must exist.">
//	when (Contract -> documentation -> masterConfirmation is absent 
//		or Contract -> documentation -> contractualMatrix is absent
//		and Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> referenceInformation exists)
//	then Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> effectiveDate -> dateAdjustments exists
//	
//data rule GeneralTerms_terminationDateAdjustments <"FpML validation rule cd-8 - Context: GeneralTerms (complex type). If condition LongForm is true, and if scheduledTerminationDate exists then scheduledTerminationDate/dateAdjustments or scheduledTerminationDate/dateAdjustmentsReference must exist.">
//	when (Contract -> documentation -> masterConfirmation is absent 
//		or Contract -> documentation -> contractualMatrix is absent
//		and Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> referenceInformation exists)
//	then Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> scheduledTerminationDate -> dateAdjustments exists 

data rule GeneralTerms_indexReferenceInformation <"FpML validation rule cd-41 - Context: GeneralTerms (complex type). If indexReferenceInformation/tranche does not exist, then modifiedEquityDelivery must not exist.">
	when GeneralTerms -> indexReferenceInformation -> tranche is absent
	then GeneralTerms -> modifiedEquityDelivery must be absent
	
data rule GeneralTerms_basketReferenceInformation <"FpML validation rule cd-42 - Context: GeneralTerms (complex type). If basketReferenceInformation does not exist, then substitution must not exist.">
	when GeneralTerms -> basketReferenceInformation is absent
	then GeneralTerms -> substitution must be absent

class IndexName stereotype contractualProduct <"The index name, with an optional set of index Id. Corresponds to a sub-construct of the FpML IndexReferenceInformation complex type.">
{
	indexName string (1..1) scheme "indexNameScheme" <"The name of the index expressed as a free format string. FpML does not define usage rules for this element.">;
		[synonym FpML value indexName]
	indexId string (0..*) scheme "indexIdScheme" <"A CDS index identifier (e.g. RED pair code).">;
		[synonym FpML value indexId]
}

class IndexReferenceInformation stereotype contractualProduct <"A class defining a Credit Default Swap Index.">
	[synonym FpML value IndexReferenceInformation]
{
	id string (0..1);
		[synonym FpML value id]
	indexName IndexName (0..1) scheme "indexNameScheme" <"This attribute corresponds to the FpML combination of a index name and a index Id, as a component of the IndexReferenceInformation complex type.">;
	indexId string (0..*) scheme "indexIdScheme" <"A CDS index identifier (e.g. RED pair code).">;
		[synonym FpML value indexId]
	indexSeries int (0..1) <"A CDS index series identifier, e.g. 1, 2, 3 etc.">;
		[synonym FpML value indexSeries]
	indexAnnexVersion int (0..1) <"A CDS index series version identifier, e.g. 1, 2, 3 etc.">;
		[synonym FpML value indexAnnexVersion]
	indexAnnexDate date (0..1) <"A CDS index series annex date.">;
		[synonym FpML value indexAnnexDate]
	indexAnnexSource IndexAnnexSourceEnum (0..1) <"A CDS index series annex source.">;
		[synonym FpML value indexAnnexSource]
	excludedReferenceEntity LegalEntity (0..*) <"Excluded reference entity.">;
		[synonym FpML value excludedReferenceEntity]
	tranche Tranche (0..1) <"This element contains CDS tranche terms.">;
		[synonym FpML value tranche]
	settledEntityMatrix SettledEntityMatrix (0..1) <"Used to specify the Relevant Settled Entity Matrix when there are settled entities at the time of the trade.">;
		[synonym FpML value settledEntityMatrix]
}

choice rule IndexReferenceInformation_choice <"Choice rule to represent the FpML choice construct between [indexName, indexId] and indexId.">
	for IndexReferenceInformation required choice between
	indexName and indexId

data rule IndexReferenceInformation_indexSeries <"FpML specifies the type associated to indexSeries as a positive integer.">
	when IndexReferenceInformation -> indexSeries exists
	then IndexReferenceInformation -> indexSeries >= 0

data rule IndexReferenceInformation_indexAnnexVersion <"FpML specifies the type associated to indexVersion as a positive integer.">
	when IndexReferenceInformation -> indexAnnexVersion exists
	then IndexReferenceInformation -> indexAnnexVersion >= 0

class InitialPayment extends PayerReceiver stereotype contractualProduct
	[synonym FpML value InitialPayment]
{
	id string (0..1);
		[synonym FpML value id]
	adjustablePaymentDate date (0..1) <"A fixed payment date that shall be subject to adjustment in accordance with the applicable business day convention if it would otherwise fall on a day that is not a business day. The applicable business day convention and business day are those specified in the dateAdjustments element within the generalTerms component.">;
		[synonym FpML value adjustablePaymentDate]
	adjustedPaymentDate date (0..1) <"The adjusted payment date. This date should already be adjusted for any applicable business day convention. This component is not intended for use in trade confirmation but may be specified to allow the fee structure to also serve as a cashflow type component.">;
		[synonym FpML value adjustedPaymentDate]
	paymentAmount Money (1..1) <"A fixed payment amount.">;
		[synonym FpML value paymentAmount]
}

class InterestShortFall stereotype contractualProduct <"A class to specify the interest shortfall floating rate payment event.">
	[synonym FpML value InterestShortFall]
{
	interestShortfallCap InterestShortfallCapEnum (1..1) <"Specifies the nature of the interest Shortfall cap (i.e. Fixed Cap or Variable Cap) in the case where it is applicable. ISDA 2003 Term: Interest Shortfall Cap.">;
		[synonym FpML value interestShortfallCap]
	compounding boolean (1..1);
		[synonym FpML value compounding]
	rateSource FloatingRateIndexEnum (0..1) <"The rate source in the case of a variable cap.">;
		[synonym FpML value rateSource]
}

class LoanParticipation extends PCDeliverableObligationCharac stereotype contractualProduct <"A class to specify loan with a participation agreement whereby the buyer is capable of creating, or procuring the creation of, a contractual right in favour of the seller that provides the seller with recourse to the participation seller for a specified share in any payments due under the relevant loan which are received by the participation seller. ISDA 2003 Term: Direct Loan Participation.">
	[synonym FpML value LoanParticipation]
{
	qualifyingParticipationSeller string (0..1) <"If Direct Loan Participation is specified as a deliverable obligation characteristic, this specifies any requirements for the Qualifying Participation Seller. The requirements may be listed free-form. ISDA 2003 Term: Qualifying Participation Seller.">;
		[synonym FpML value qualifyingParticipationSeller]
}

class MultipleValuationDates extends SingleValuationDate stereotype contractualProduct
	[synonym FpML value MultipleValuationDates]
{
	businessDaysThereafter int (0..1) <"The number of business days between successive valuation dates when multiple valuation dates are applicable for cash settlement. ISDA 2003 Term: Business Days thereafter.">;
		[synonym FpML value businessDaysThereafter]
	numberValuationDates int (0..1) <"Where multiple valuation dates are specified as being applicable for cash settlement, this element specifies (a) the number of applicable valuation dates, and (b) the number of business days after satisfaction of all conditions to settlement when the first such valuation date occurs, and (c) the number of business days thereafter of each successive valuation date. ISDA 2003 Term: Multiple Valuation Dates.">;
		[synonym FpML value numberValuationDates]
}

data rule MultipleValuationDates_businessDaysThereafter <"FpML specifies businessDaysThereafter as a PositiveInteger.">
	when MultipleValuationDates -> businessDaysThereafter exists
	then MultipleValuationDates -> businessDaysThereafter >= 0

data rule MultipleValuationDates_numberValuationDates <"FpML specifies numberValuationDates as a PositiveInteger.">
	when MultipleValuationDates -> numberValuationDates exists
	then MultipleValuationDates -> numberValuationDates >= 0

class NotDomesticCurrency stereotype contractualProduct <"A class to specify the ISDA 2003 Term: Not Domestic Currency.">
	[synonym FpML value NotDomesticCurrency]
{
	applicable boolean (1..1) <"Indicates whether the Not Domestic Currency provision is applicable.">;
		[synonym FpML value applicable]
	currency CurrencyEnum (0..1) <"An explicit specification of the domestic currency">;
		[synonym FpML value currency]
}

class Obligations stereotype contractualProduct <"A class to specify the underlying obligations of the reference entity on which protection is purchased or sold through the Credit Default Swap.">
	[synonym FpML value Obligations]
{
	/*
	 * As mentioned, the optional boolean creates a level of ambiguity and should be reassessed.
	 * Discussions with relevant FpML experts should held as part of that.
	 */
	category ObligationCategoryEnum (1..1) <"Used in both obligations and deliverable obligations to represent a class or type of securities which apply. ISDA 2003 Term: Obligation Category/Deliverable Obligation Category.">;
		[synonym FpML value category]
	notSubordinated boolean (0..1) <"An obligation and deliverable obligation characteristic. An obligation that ranks at least equal with the most senior Reference Obligation in priority of payment or, if no Reference Obligation is specified in the related Confirmation, the obligations of the Reference Entity that are senior. ISDA 2003 Term: Not Subordinated.">;
		[synonym FpML value notSubordinated]
	specifiedCurrency SpecifiedCurrency (0..1) <"An obligation and deliverable obligation characteristic. The currency or currencies in which an obligation or deliverable obligation must be payable. ISDA 2003 Term: Specified Currency.">;
		[synonym FpML value specifiedCurrency]
	notSovereignLender boolean (0..1) <"An obligation and deliverable obligation characteristic. Any obligation that is not primarily (majority) owed to a Sovereign or Supranational Organisation. ISDA 2003 Term: Not Sovereign Lender.">;
		[synonym FpML value notSovereignLender]
	notDomesticCurrency NotDomesticCurrency (0..1) <"An obligation and deliverable obligation characteristic. Any obligation that is payable in any currency other than the domestic currency. Domestic currency is either the currency so specified or, if no currency is specified, the currency of (a) the reference entity, if the reference entity is a sovereign, or (b) the jurisdiction in which the relevant reference entity is organised, if the reference entity is not a sovereign. ISDA 2003 Term: Not Domestic Currency.">;
		[synonym FpML value notDomesticCurrency]
	notDomesticLaw boolean (0..1) <"An obligation and deliverable obligation characteristic. If the reference entity is a Sovereign, this means any obligation that is not subject to the laws of the reference entity. If the reference entity is not a sovereign, this means any obligation that is not subject to the laws of the jurisdiction of the reference entity. ISDA 2003 Term: Not Domestic Law.">;
		[synonym FpML value notDomesticLaw]
	listed boolean (0..1) <"An obligation and deliverable obligation characteristic. Indicates whether or not the obligation is quoted, listed or ordinarily purchased and sold on an exchange. ISDA 2003 Term: Listed.">;
		[synonym FpML value listed]
	notDomesticIssuance boolean (0..1) <"An obligation and deliverable obligation characteristic. Any obligation other than an obligation that was intended to be offered for sale primarily in the domestic market of the relevant Reference Entity. This specifies that the obligation must be an internationally recognised bond. ISDA 2003 Term: Not Domestic Issuance.">;
		[synonym FpML value notDomesticIssuance]
	fullFaithAndCreditObLiability boolean (0..1) <"An obligation and deliverable obligation characteristic. Defined in the ISDA published additional provisions for U.S. Municipal as Reference Entity. ISDA 2003 Term: Full Faith and Credit Obligation Liability.">;
		[synonym FpML value fullFaithAndCreditObLiability]
	generalFundObligationLiability boolean (0..1) <"An obligation and deliverable obligation characteristic. Defined in the ISDA published additional provisions for U.S. Municipal as Reference Entity. ISDA 2003 Term: General Fund Obligation Liability.">;
		[synonym FpML value generalFundObligationLiability]
	revenueObligationLiability boolean (0..1) <"An obligation and deliverable obligation characteristic. Defined in the ISDA published additional provisions for U.S. Municipal as Reference Entity. ISDA 2003 Term: Revenue Obligation Liability.">;
		[synonym FpML value revenueObligationLiability]
	notContingent boolean (0..1) <"OTE: Only allowed as an obligation characteristic under ISDA Credit 1999. In essence Not Contingent means the repayment of principal cannot be dependent on a formula/index, i.e. to prevent the risk of being delivered an instrument that may never pay any element of principal, and to ensure that the obligation is interest bearing (on a regular schedule). ISDA 2003 Term: Not Contingent.">;
		[synonym FpML value notContingent]
	excluded string (0..1) <"A free format string to specify any excluded obligations or deliverable obligations, as the case may be, of the reference entity or excluded types of obligations or deliverable obligations. ISDA 2003 Term: Excluded Obligations/Excluded Deliverable Obligations.">;
		[synonym FpML value notContingent]
	othReferenceEntityObligations string (0..1) <"This element is used to specify any other obligations of a reference entity in both obligations and deliverable obligations. The obligations can be specified free-form. ISDA 2003 Term: Other Obligations of a Reference Entity.">;
		[synonym FpML value othReferenceEntityObligations]
	designatedPriority string (0..1) scheme "lienScheme" <"Applies to Loan CDS, to indicate what lien level is appropriate for a deliverable obligation. Applies to European Loan CDS, to indicate the Ranking of the obligation. Example: a 2nd lien Loan CDS would imply that the deliverable obligations are 1st or 2nd lien loans.">;
		[synonym FpML value designatedPriority]
	cashSettlementOnly boolean (0..1) <"An obligation and deliverable obligation characteristic. Defined in the ISDA published Standard Terms Supplement for use with CDS Transactions on Leveraged Loans. ISDA 2003 Term: Cash Settlement Only.">;
		[synonym FpML value cashSettlementOnly]
	deliveryOfCommitments boolean (0..1) <"An obligation and deliverable obligation characteristic. Defined in the ISDA published Standard Terms Supplement for use with CDS Transactions on Leveraged Loans. ISDA 2003 Term: Delivery of Commitments.">;
		[synonym FpML value deliveryOfCommitments]
	continuity boolean (0..1) <"An obligation and deliverable obligation characteristic. Defined in the ISDA published Standard Terms Supplement for use with CDS Transactions on Leveraged Loans. ISDA 2003 Term: Continuity.">;
		[synonym FpML value continuity]
}

choice rule Obligations_choice <"Choice rule to represent an FpML choice construct.">
	for Obligations optional choice between
	fullFaithAndCreditObLiability and generalFundObligationLiability and revenueObligationLiability

class PCDeliverableObligationCharac stereotype contractualProduct <"A class to specify the Partial Cash Deliverable Obligation Characteristic.">
	[synonym FpML value PCDeliverableObligationCharac]
{
	applicable boolean (1..1) <"Indicates whether the provision is applicable.">;
		[synonym FpML value applicable]
	partialCashSettlement boolean (0..1) <"Specifies whether either 'Partial Cash Settlement of Assignable Loans', 'Partial Cash Settlement of Consent Required Loans' or 'Partial Cash Settlement of Participations' is applicable. If this element is specified and Assignable Loan is a Deliverable Obligation Characteristic, any Assignable Loan that is deliverable, but where a non-receipt of Consent by the Physical Settlement Date has occurred, the Loan can be cash settled rather than physically delivered. If this element is specified and Consent Required Loan is a Deliverable Obligation Characteristic, any Consent Required Loan that is deliverable, but where a non-receipt of Consent by the Physical Settlement Date has occurred, the Loan can be cash settled rather than physically delivered. If this element is specified and Direct Loan Participation is a Deliverable Obligation Characteristic, any Participation that is deliverable, but where this participation has not been effected (has not come into effect) by the Physical Settlement Date, the participation can be cash settled rather than physically delivered.">;
		[synonym FpML value partialCashSettlement]
}

class PeriodicPayment stereotype contractualProduct
	[synonym FpML value PeriodicPayment]
{
	id string (0..1);
		[synonym FpML value id]
	paymentFrequency Period (0..1) <"The time interval between regular fixed rate payer payment dates.">;
		[synonym FpML value paymentFrequency]
	firstPeriodStartDate date (0..1) <"The start date of the initial calculation period if such date is not equal to the trade’s effective date. It must only be specified if it is not equal to the effective date. The applicable business day convention and business day are those specified in the dateAdjustments element within the generalTerms component (or in a transaction supplement representation defined within the referenced general terms confirmation agreement).">;
		[synonym FpML value firstPeriodStartDate]
	firstPaymentDate date (0..1) <"The first unadjusted fixed rate payer payment date. The applicable business day convention and business day are those specified in the dateAdjustments element within the generalTerms component (or in a transaction supplement FpML representation defined within the referenced general terms confirmation agreement). ISDA 2003 Term: Fixed Rate Payer Payment Date.">;
		[synonym FpML value firstPaymentDate]
	lastRegularPaymentDate date (0..1) <"The last regular unadjusted fixed rate payer payment date. The applicable business day convention and business day are those specified in the dateAdjustments element within the generalTerms component (or in a transaction supplement FpML representation defined within the referenced general terms confirmation agreement). This element should only be included if there is a final payment stub, i.e. where the last regular unadjusted fixed rate payer payment date is not equal to the scheduled termination date. ISDA 2003 Term: Fixed Rate Payer Payment Date.">;
		[synonym FpML value lastRegularPaymentDate]
	rollConvention RollConventionEnum (0..1) <"Used in conjunction with the effectiveDate, scheduledTerminationDate, firstPaymentDate, lastRegularPaymentDate and paymentFrequency to determine the regular fixed rate payer payment dates.">;
		[synonym FpML value rollConvention]
	fixedAmount Money (0..1) <"A fixed payment amount. ISDA 2003 Term: Fixed Amount.">;
		[synonym FpML value fixedAmount]
	fixedAmountCalculation FixedAmountCalculation (0..1) <"This element contains all the terms relevant to calculating a fixed amount where the fixed amount is calculated by reference to a per annum fixed rate. There is no corresponding ISDA 2003 Term. The equivalent is Sec 5.1 'Calculation of Fixed Amount' but this in itself is not a defined Term.">;
		[synonym FpML value fixedAmountCalculation]
	floatingAmountCalculation FloatingAmountCalculation (0..1);
		[synonym FpML value floatingAmountCalculation]
	adjustedPaymentDates AdjustedPaymentDates (0..*) <"An optional cashflow-like structure allowing the equivalent representation of the periodic fixed payments in terms of a series of adjusted payment dates and amounts. This is intended to support application integration within an organisation and is not intended for use in inter-firm communication or confirmations. ISDA 2003 Term: Fixed Rate Payer Payment Date.">;
		[synonym FpML value adjustedPaymentDates]
}

data rule PeriodicPayment_paymentFrequency <"In FpML, indexTenor is of type PeriodEnum, which doesn't include the value 'T'.">
	when PeriodicPayment -> paymentFrequency exists
	then PeriodicPayment -> paymentFrequency -> period <> PeriodEnum.T

choice rule PeriodicPayment_choice <"Choice rule to represent an FpML choice construct.">
	for PeriodicPayment required choice between
	fixedAmount and fixedAmountCalculation and floatingAmountCalculation

//data rule PeriodicPayment_firstPaymentDate_effectiveDate <"FpML validation rule cd-28 - Context: CreditDefaultSwap (complex type). If feeLeg/periodicPayment/firstPaymentDate exists, then feeLeg/periodicPayment/firstPaymentDate must be after generalTerms/effectiveDate/unadjustedDate.">
//	when CreditDefaultSwap -> feeLeg -> periodicPayment -> firstPaymentDate exists
//	then CreditDefaultSwap -> feeLeg -> periodicPayment -> firstPaymentDate > CreditDefaultSwap -> generalTerms -> effectiveDate -> unadjustedDate

//data rule PeriodicPayment_firstPaymentDate_scheduledTerminationDate <"FpML validation rule cd-29 - Context: CreditDefaultSwap (complex type). If feeLeg/periodicPayment/firstPaymentDate exists, and if generalTerms/scheduledTerminationDate exists, then feeLeg/periodicPayment/firstPaymentDate must be before generalTerms/scheduledTerminationDate/unadjustedDate.">
//	when CreditDefaultSwap -> feeLeg -> periodicPayment -> firstPaymentDate exists
//	then CreditDefaultSwap -> feeLeg -> periodicPayment -> firstPaymentDate < CreditDefaultSwap -> generalTerms -> scheduledTerminationDate -> unadjustedDate

//data rule PeriodicPayment_lastRegularPaymentDate <"FpML validation rule cd-30 - Context: CreditDefaultSwap (complex type). If feeLeg/periodicPayment/lastRegularPaymentDate exists, and if generalTerms/scheduledTerminationDate exists, then feeLeg/periodicPayment/lastRegularPaymentDate must be before generalTerms/scheduledTerminationDate/unadjustedDate.">
//	when (CreditDefaultSwap -> feeLeg -> periodicPayment -> lastRegularPaymentDate 
//		and CreditDefaultSwap -> generalTerms -> scheduledTerminationDate) exists
//	then CreditDefaultSwap -> feeLeg -> periodicPayment -> lastRegularPaymentDate < CreditDefaultSwap -> generalTerms -> scheduledTerminationDate -> unadjustedDate
	
data rule PeriodicPayment_firstPaymentDate_lastRegularPaymentDate <"FpML validation rule cd-31 - Context: PeriodicPayment (complex type). If firstPaymentDate exists, and if lastRegularPaymentDate exists, then firstPaymentDate must be before lastRegularPaymentDate.">
	when (CreditDefaultSwap -> feeLeg -> periodicPayment -> firstPaymentDate
		and CreditDefaultSwap -> feeLeg -> periodicPayment -> lastRegularPaymentDate) exists
	then CreditDefaultSwap -> feeLeg -> periodicPayment -> firstPaymentDate < CreditDefaultSwap -> feeLeg -> periodicPayment -> lastRegularPaymentDate

//data rule PeriodicPayment_LongForm <"FpML validation rule cd-32 - Context: PeriodicPayment (complex type). If condition LongForm is true, and if fixedAmountCalculation/calculationAmount exists, then fixedAmountCalculation/dayCountFraction must exist.">
//	when ( (Contract -> documentation -> masterConfirmation or Contract -> documentation -> contractualMatrix) is absent )
//		and Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> referenceInformation exists
//	 	and Contract -> contractualProduct -> creditDefaultSwap -> feeLeg -> periodicPayment -> fixedAmountCalculation -> calculationAmount exists
//	then Contract -> contractualProduct -> creditDefaultSwap -> feeLeg -> periodicPayment -> fixedAmountCalculation -> dayCountFraction must exist

class PhysicalSettlementPeriod stereotype contractualProduct one of
	[synonym FpML value PhysicalSettlementPeriod]
{
	businessDaysNotSpecified boolean (0..1) <"An explicit indication that a number of business days are not specified and therefore ISDA fallback provisions should apply.">;
		[synonym FpML value businessDaysNotSpecified]
	businessDays int (0..1) <"A number of business days. Its precise meaning is dependant on the context in which this element is used. ISDA 2003 Term: Business Day.">;
		[synonym FpML value businessDays]
	maximumBusinessDays int (0..1) <"A maximum number of business days. Its precise meaning is dependant on the context in which this element is used. Intended to be used to limit a particular ISDA fallback provision.">;
		[synonym FpML value maximumBusinessDays]
}

data rule PhysicalSettlementPeriod_businessDays <"FpML specifies businessDays as a NonNegativeInteger.">
	when PhysicalSettlementPeriod -> businessDays exists
	then PhysicalSettlementPeriod -> businessDays >= 0

data rule PhysicalSettlementPeriod_maximumBusinessDays <"FpML specifies maximumBusinessDays as a NonNegativeInteger.">
	when PhysicalSettlementPeriod -> maximumBusinessDays exists
	then PhysicalSettlementPeriod -> maximumBusinessDays >= 0

class PhysicalSettlementTerms stereotype contractualProduct <"In FpML, PhysicalSettlementTerms and CashSettlementTerms extend SettlementTerms.  In Rosetta, this extension paradigm has not been used because SettlementTerms class has been used for purposes related to securities transactions, while it is not used as such in the FpML standard (i.e. only as an abstract construct.">
	[synonym FpML value PhysicalSettlementTerms]
{
	id string (0..1);
		[synonym FpML value id]
	settlementCurrency CurrencyEnum (0..1) <"ISDA 2003 Term: Settlement Currency.">;
		[synonym FpML value settlementCurrency]
	physicalSettlementPeriod PhysicalSettlementPeriod (0..1) <"The number of business days used in the determination of the physical settlement date. The physical settlement date is this number of business days after all applicable conditions to settlement are satisfied. If a number of business days is not specified fallback provisions apply for determining the number of business days. If Section 8.5/8.6 of the 1999/2003 ISDA Definitions are to apply the businessDaysNotSpecified element should be included. If a specified number of business days are to apply these should be specified in the businessDays element. If Section 8.5/8.6 of the 1999/2003 ISDA Definitions are to apply but capped at a maximum number of business days then the maximum number should be specified in the maximumBusinessDays element. ISDA 2003 Term: Physical Settlement Period.">;
		[synonym FpML value physicalSettlementPeriod]
	deliverableObligations DeliverableObligations (0..1) <"This element contains all the ISDA terms relevant to defining the deliverable obligations.">;
		[synonym FpML value deliverableObligations]
	escrow boolean (0..1) <"If this element is specified and set to 'true', indicates that physical settlement must take place through the use of an escrow agent. (For Canadian counterparties this is always 'Not Applicable'. ISDA 2003 Term: Escrow.">;
		[synonym FpML value escrow]
	sixtyBusinessDaySettlementCap boolean (0..1) <"If this element is specified and set to 'true', for a transaction documented under the 2003 ISDA Credit Derivatives Definitions, has the effect of incorporating the language set forth below into the confirmation. The section references are to the 2003 ISDA Credit Derivatives Definitions. Notwithstanding Section 1.7 or any provisions of Sections 9.9 or 9.10 to the contrary, but without prejudice to Section 9.3 and (where applicable) Sections 9.4, 9.5 and 9.6, if the Termination Date has not occurred on or prior to the date that is 60 Business Days following the Physical Settlement Date, such 60th Business Day shall be deemed to be the Termination Date with respect to this Transaction except in relation to any portion of the Transaction (an 'Affected Portion') in respect of which: (1) a valid notice of Buy-in Price has been delivered that is effective fewer than three Business Days prior to such 60th Business Day, in which case the Termination Date for that Affected Portion shall be the third Business Day following the date on which such notice is effective; or (2) Buyer has purchased but not Delivered Deliverable Obligations validly specified by Seller pursuant to Section 9.10(b), in which case the Termination Date for that Affected Portion shall be the tenth Business Day following the date on which Seller validly specified such Deliverable Obligations to Buyer.">;
		[synonym FpML value sixtyBusinessDaySettlementCap]
}

//class ProtectionTerms stereotype contractualProduct <"This class contains all the terms relevant to defining the applicable floating rate payer calculation amount, credit events and associated conditions to settlement, and reference obligations.">
//	[synonym FpML value ProtectionTerms]
//{
//	id string (0..1);
//		[synonym FpML value id]
//	calculationAmount Money (1..1) <"The notional amount of protection coverage. ISDA 2003 Term: Floating Rate Payer Calculation Amount.">;
//		[synonym FpML value calculationAmount]
//	creditEvents CreditEvents (0..1) <"This element contains all the ISDA terms relating to credit events.">;
//		[synonym FpML value creditEvents]
//	obligations Obligations (0..1) <"The underlying obligations of the reference entity on which you are buying or selling protection. The credit events Failure to Pay, Obligation Acceleration, Obligation Default, Restructuring, Repudiation/Moratorium are defined with respect to these obligations.">;
//		[synonym FpML value obligations]
//	floatingAmountEvents FloatingAmountEvents (0..1) <"This element contains the ISDA terms relating to the floating rate payment events and the implied additional fixed payments, applicable to the credit derivatives transactions on mortgage-backed securities with pay-as-you-go or physical settlement.">;
//		[synonym FpML value floatingAmountEvents]
//}

class ReferenceInformation stereotype contractualProduct <"A class specifying the Credit Default Swap Reference Information.">
	[synonym FpML value ReferenceInformation]
{
	referenceEntity LegalEntity (1..1) <"The corporate or sovereign entity on which you are buying or selling protection and any successor that assumes all or substantially all of its contractual and other obligations. It is vital to use the correct legal name of the entity and to be careful not to choose a subsidiary if you really want to trade protection on a parent company. Please note, Reference Entities cannot be senior or subordinated. It is the obligations of the Reference Entities that can be senior or subordinated. ISDA 2003 Term: Reference Entity.">;
		[synonym FpML value referenceEntity]
	referenceObligation ReferenceObligation (0..*) <"The Reference Obligation is a financial instrument that is either issued or guaranteed by the reference entity. It serves to clarify the precise reference entity protection is being offered upon, and its legal position with regard to other related firms (parents/subsidiaries). Furthermore the Reference Obligation is ALWAYS deliverable and establishes the Pari Passu ranking (as the deliverable bonds must rank equal to the reference obligation). ISDA 2003 Term: Reference Obligation.">;
		[synonym FpML value referenceObligation]
	noReferenceObligation boolean (0..1) <"Used to indicate that there is no Reference Obligation associated with this Credit Default Swap and that there will never be one.">;
		[synonym FpML value noReferenceObligation]
	unknownReferenceObligation boolean (0..1) <"Used to indicate that the Reference obligation associated with the Credit Default Swap is currently not known. This is not valid for Legal Confirmation purposes, but is valid for earlier stages in the trade life cycle (e.g. Broker Confirmation).">;
		[synonym FpML value unknownReferenceObligation]
	allGuarantees boolean (0..1) <"Indicates whether an obligation of the Reference Entity, guaranteed by the Reference Entity on behalf of a non-Affiliate, is to be considered an Obligation for the purpose of the transaction. It will be considered an obligation if allGuarantees is applicable (true) and not if allGuarantees is inapplicable (false). ISDA 2003 Term: All Guarantees.">;
		[synonym FpML value allGuarantees]
	referencePrice number (0..1) <"Used to determine (a) for physically settled trades, the Physical Settlement Amount, which equals the Floating Rate Payer Calculation Amount times the Reference Price and (b) for cash settled trades, the Cash Settlement Amount, which equals the greater of (i) the difference between the Reference Price and the Final Price and (ii) zero. ISDA 2003 Term: Reference Price.">;
		[synonym FpML value referencePrice]
	referencePolicy boolean (0..1) <"Applicable to the transactions on mortgage-backed security, which can make use of a reference policy. Presence of the element with value set to 'true' indicates that the reference policy is applicable; absence implies that it is not.">;
		[synonym FpML value referencePolicy]
	securedList boolean (0..1) <"With respect to any day, the list of Syndicated Secured Obligations of the Designated Priority of the Reference Entity published by Markit Group Limited or any successor thereto appointed by the Specified Dealers (the 'Secured List Publisher') on or most recently before such day, which list is currently available at [http://www.markit.com]. ISDA 2003 Term: Relevant Secured List.">;
		[synonym FpML value securedList]
}

choice rule ReferenceInformation_choice <"Choice rule to represent an FpML choice construct.">
	for ReferenceInformation required choice between
		referenceObligation and noReferenceObligation and unknownReferenceObligation
//
//data rule ReferenceInformation_allGuarantees <"FpML validation rule cd-11 - Context: ReferenceInformation (complex type). If condition LongForm is true, and if condition ISDA2003 is true, then allGuarantees must exist.">
//	when ( ( Contract -> documentation -> masterConfirmation exists 
//		or Contract -> documentation -> contractualMatrix exists ) 
//		and Contract -> documentation -> contractualDefinitions = ContractualDefinitionsEnum.ISDA2003Credit )
//	then Contract -> contractualProduct -> creditDefaultSwap -> generalTerms -> referenceInformation -> allGuarantees = True

data rule ReferenceInformation_referencePrice <"FpML validation rule cd-12 - Context: ReferenceInformation (complex type). If referencePrice exists, referencePrice must be greater or equal to 0">
	when CreditDefaultSwap -> generalTerms -> referenceInformation -> referencePrice exists
	then CreditDefaultSwap -> generalTerms -> referenceInformation -> referencePrice >= 0b

class ReferenceObligation stereotype contractualProduct
	[synonym FpML value ReferenceObligation]
{
	bond Bond (0..1) <"Identifies the underlying asset when it is a series or a class of bonds.">;
		[synonym FpML value bond]
	convertibleBond ConvertibleBond (0..1) <"Identifies the underlying asset when it is a convertible bond.">;
		[synonym FpML value convertibleBond]
	mortgage Mortgage (0..1) <"Identifies the underlying asset when it is a mortgage backed security.">;
		[synonym FpML value mortgage]
	loan Loan (0..1) <"Identifies the underlying asset when it is a loan.">;
		[synonym FpML value loan]
	primaryObligor LegalEntity (0..1) reference <"The entity primarily responsible for repaying debt to a creditor as a result of borrowing or issuing bonds. ISDA 2003 Term: Primary Obligor.">;
		[synonym FpML value primaryObligor]
		[synonym FpML value primaryObligorReference]
	guarantor LegalEntity (0..1) reference <"The party that guarantees by way of a contractual arrangement to pay the debts of an obligor if the obligor is unable to make the required payments itself. ISDA 2003 Term: Guarantor.">;
		[synonym FpML value guarantor]
		[synonym FpML value guarantorReference]
	standardReferenceObligation boolean (0..1) <"Indicates if the reference obligation is a Standard Reference Obligation. ISDA 2014 Term: Standard Reference Obligation.">;
		[synonym FpML value standardReferenceObligation]
}

choice rule ReferenceObligation_choice <"Choice rule to represent an FpML choice construct.">
	for ReferenceObligation required choice between
	bond and convertibleBond and loan and mortgage

class ReferencePair stereotype contractualProduct
	[synonym FpML value ReferencePair]
{
	referenceEntity LegalEntity (1..1) <"The corporate or sovereign entity on which you are buying or selling protection and any successor that assumes all or substantially all of its contractual and other obligations. It is vital to use the correct legal name of the entity and to be careful not to choose a subsidiary if you really want to trade protection on a parent company. Please note, Reference Entities cannot be senior or subordinated. It is the obligations of the Reference Entities that can be senior or subordinated. ISDA 2003 Term: Reference Entity.">;
		[synonym FpML value referenceEntity]
	referenceObligation ReferenceObligation (0..1) <"The Reference Obligation is a financial instrument that is either issued or guaranteed by the reference entity. It serves to clarify the precise reference entity protection is being offered upon, and its legal position with regard to other related firms (parents/subsidiaries). Furthermore the Reference Obligation is ALWAYS deliverable and establishes the Pari Passu ranking (as the deliverable bonds must rank equal to the reference obligation). ISDA 2003 Term: Reference Obligation.">;
		[synonym FpML value referenceObligation]
	noReferenceObligation boolean (0..1) <"Used to indicate that there is no Reference Obligation associated with this Credit Default Swap and that there will never be one.">;
		[synonym FpML value noReferenceObligation]
	entityType EntityTypeEnum (1..1) <"Defines the reference entity types corresponding to a list of types in the ISDA First to Default documentation.">;
		[synonym FpML value entityType]
}

choice rule ReferencePair_choice <"Choice rule to represent an FpML choice construct.">
	for ReferencePair required choice between
	referenceObligation and noReferenceObligation

class ReferencePool stereotype contractualProduct <"This type contains all the reference pool items to define the reference entity and reference obligation(s) in the basket.">
	[synonym FpML value ReferencePool]
{
	referencePoolItem ReferencePoolItem (1..*) <"This type contains all the constituent weight and reference information.">;
		[synonym FpML value referencePoolItem]
}

data rule ReferencePool_constituentWeight <"FpML validation rule cd-44 - Context: ReferencePool (complex type). All referencePoolItem/constituentWeight must have the same name of child element.">
	when ReferencePool exists
	then (ReferencePool -> referencePoolItem -> constituentWeight -> basketPercentage or ReferencePool -> referencePoolItem -> constituentWeight -> openUnits) must exist

class ReferencePoolItem stereotype contractualProduct <"This type contains all the constituent weight and reference information.">
	[synonym FpML value ReferencePoolItem]
{
	constituentWeight ConstituentWeight (0..1) <"Describes the weight of each of the constituents within the basket. If not provided, it is assumed to be equal weighted.">;
		[synonym FpML value constituentWeight]
	referencePair ReferencePair (1..1);
		[synonym FpML value referencePair]
	protectionTerms ProtectionTerms (0..1) reference <"The documentation terms applicable to this item.">;
		[synonym FpML value protectionTermsReference]
	cashSettlementTerms CashSettlementTerms (0..1) reference <"Reference to the cash settlement terms applicable to this item. Rosetta's model differs from FpML, which has one settlementTermsReference element with an associated href which points to the id anchor which is associated to the cashSettlementTerms and physicalSettlementTerms elements that are part of the CreditDefaultSwap.">;
		[synonym FpML value settlementTermsReference]
	physicalSettlementTerms PhysicalSettlementTerms (0..1) reference <"Reference to the physical settlement terms applicable to this item.  Rosetta's model differs from FpML, which has one settlementTermsReference element with an associated href which points to the id anchor which is associated to the cashSettlementTerms and physicalSettlementTerms elements that are part of the CreditDefaultSwap.">;
		[synonym FpML value settlementTermsReference]
}

choice rule ReferencePoolItem_choice <"Rosetta model differs from FpML as instead of having a settlementTermsReference with an associated href, it has explicit cash and physical settlement constructs, the reason being that Rosetta instantiates the element associated with the id anchor.">
	for ReferencePoolItem optional choice between
	physicalSettlementTerms and cashSettlementTerms

class SettledEntityMatrix stereotype contractualProduct <"A class to specify the Relevant Settled Entity Matrix.">
	[synonym FpML value SettledEntityMatrix]
{
	matrixSource SettledEntityMatrixSourceEnum (1..1) <"Relevant settled entity matrix source.">;
		[synonym FpML value matrixSource]
	publicationDate date (0..1) <"Specifies the publication date of the applicable version of the matrix. When this element is omitted, the Standard Terms Supplement defines rules for which version of the matrix is applicable.">;
		[synonym FpML value publicationDate]
}

class SinglePayment stereotype contractualProduct
	[synonym FpML value SinglePayment]
{
	id string (0..1);
		[synonym FpML value id]
	adjustablePaymentDate date (1..1) <"A fixed amount payment date that shall be subject to adjustment in accordance with the applicable business day convention if it would otherwise fall on a day that is not a business day. The applicable business day convention and business day are those specified in the dateAdjustments element within the generalTerms component. ISDA 2003 Term: Fixed Rate Payer Payment Date.">;
		[synonym FpML value adjustablePaymentDate]
	adjustedPaymentDate date (0..1) <"The adjusted payment date. This date should already be adjusted for any applicable business day convention. This component is not intended for use in trade confirmation but may be specified to allow the fee structure to also serve as a cashflow type component.">;
		[synonym FpML value adjustedPaymentDate]
	fixedAmount Money (1..1) <"A fixed payment amount. ISDA 2003 Term: Fixed Amount.">;
		[synonym FpML value fixedAmount]
}

//data rule SinglePayment_adjustablePaymentDate_effectiveDate <"FpML validation rule cd-26 - Context: CreditDefaultSwap (complex type). If feeLeg/singlePayment/adjustablePaymentDate exists, then feeLeg/singlePayment/adjustablePaymentDate must be after generalTerms/effectiveDate/unadjustedDate.">
//	when CreditDefaultSwap -> feeLeg -> singlePayment -> adjustablePaymentDate exists
//	then CreditDefaultSwap -> feeLeg -> singlePayment -> adjustablePaymentDate > CreditDefaultSwap -> generalTerms -> effectiveDate -> unadjustedDate
//
//data rule SinglePayment_adjustablePaymentDate_scheduledTerminationDate <"FpML validation rule cd-27 - Context: CreditDefaultSwap (complex type). If feeLeg/singlePayment/adjustablePaymentDate exists, and if generalTerms/scheduledTerminationDate exists, then feeLeg/singlePayment/adjustablePaymentDate must be before generalTerms/scheduledTerminationDate/unadjustedDate.">
//	when (CreditDefaultSwap -> feeLeg -> singlePayment -> adjustablePaymentDate 
//		and CreditDefaultSwap -> generalTerms -> scheduledTerminationDate) exists
//	then CreditDefaultSwap -> feeLeg -> singlePayment -> adjustablePaymentDate < CreditDefaultSwap -> generalTerms -> scheduledTerminationDate -> unadjustedDate

class SingleValuationDate stereotype contractualProduct <"A class to specify the number of business days after satisfaction of all conditions to settlement.">
	[synonym FpML value SingleValuationDate]
{
	businessDays int (0..1) <"A number of business days. Its precise meaning is dependant on the context in which this element is used. ISDA 2003 Term: Business Day.">;
		[synonym FpML value businessDays]
}

data rule SingleValuationDate_businessDays <"FpML specifies businessDays as a NonNegativeInteger.">
	when SingleValuationDate -> businessDays exists
	then SingleValuationDate -> businessDays >= 0

class SpecifiedCurrency stereotype contractualProduct
	[synonym FpML value SpecifiedCurrency]
{
	applicable boolean (1..1) <"Indicates whether the specified currency provision is applicable.">;
		[synonym FpML value applicable]
	currency CurrencyEnum (0..1) <"The currency in which an amount is denominated.">;
		[synonym FpML value currency]
}

class Tranche stereotype contractualProduct <"The class to represent a CDS Tranche.">
	[synonym FpML value Tranche]
{
	attachmentPoint number (1..1) <"Lower bound percentage of the loss that the Tranche can endure, expressed as a decimal. An attachment point of 5% would be represented as 0.05. The difference between Attachment and Exhaustion points is called the width of the Tranche.">;
		[synonym FpML value attachmentPoint]
	exhaustionPoint number (1..1) <"Upper bound percentage of the loss that the Tranche can endure, expressed as a decimal. An exhaustion point of 5% would be represented as 0.05. The difference between Attachment and Exhaustion points is call the width of the Tranche.">;
		[synonym FpML value exhaustionPoint]
	incurredRecoveryApplicable boolean (0..1) <"Outstanding Swap Notional Amount is defined at any time on any day, as the greater of: (a) Zero; If Incurred Recovery Amount Applicable: (b) The Original Swap Notional Amount minus the sum of all Incurred Loss Amounts and all Incurred Recovery Amounts (if any) determined under this Confirmation at or prior to such time.Incurred Recovery Amount not populated: (b) The Original Swap Notional Amount minus the sum of all Incurred Loss Amounts determined under this Confirmation at or prior to such time.">;
		[synonym FpML value incurredRecoveryApplicable]
}

data rule Tranche_attachmentPoint <"FpML definition associated with the attachmentPoint element specifies that a schema facet to constraint the value between 0 to 1 will be introduced in FpML 4.3.">
	when Tranche exists
	then Tranche -> attachmentPoint >= 0b and Tranche -> attachmentPoint <= 1b

data rule Tranche_exhaustionPoint <"FpML definition associated with the exhaustionPoint element specifies that a schema facet to constraint the value between 0 to 1 will be introduced in FpML 4.3.">
	when Tranche exists
	then Tranche -> exhaustionPoint >= 0b and Tranche -> exhaustionPoint <= 1b

data rule Tranche_attachmentPoint_exhaustionPoint <"FpML validation rule cd-40 - Context: Tranche (complex type) attachmentPoint must be less or equal to exhaustionPoint.">
	when Tranche exists
	then Tranche -> attachmentPoint <= Tranche -> exhaustionPoint

class ValuationDate stereotype contractualProduct one of
	[synonym FpML value ValuationDate]
{
	singleValuationDate SingleValuationDate (0..1) <"Where single valuation date is specified as being applicable for cash settlement, this element specifies the number of business days after satisfaction of all conditions to settlement when such valuation date occurs. ISDA 2003 Term: Single Valuation Date.">;
		[synonym FpML value singleValuationDate]
	multipleValuationDates MultipleValuationDates (0..1) <"Where multiple valuation dates are specified as being applicable for cash settlement, this element specifies (a) the number of applicable valuation dates, and (b) the number of business days after satisfaction of all conditions to settlement when the first such valuation date occurs, and (c) the number of business days thereafter of each successive valuation date. ISDA 2003 Term: Multiple Valuation Dates.">;
		[synonym FpML value multipleValuationDates]
}
