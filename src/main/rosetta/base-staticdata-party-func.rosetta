namespace cdm.base.staticdata.party : <"Basic party concepts: legal entity, natural person, contact details, buyer / payer and all related enums.">
version "${project.version}"

func Create_Counterparty: <"Constructs a Counterparty given a party and a counterparty enum value.">
	inputs:
		party Party (1..1)
		role CounterpartyRoleEnum (1..1)
	output:
		counterparty Counterparty (1..1)

	assign-output counterparty -> partyReference: <"Party serves the role of a key.">
		party 

	assign-output counterparty -> role:
		role

func Create_PartyRole: <"Constructs a PartyRole given a party and party role enumeration value.">
	inputs:
		party Party(1..1)
		role PartyRoleEnum(1..1)
	output:
		partyRole PartyRole (1..1)

	assign-output partyRole -> partyReference:
		party

	assign-output partyRole -> role:
		role

func ExtractCounterpartyByRole: <"Extracts from a list of Counterparty data types, the Counterparty that corresponds to the role i.e. Party1 or Party2.">
	inputs:
		counterparties Counterparty (1..*) <"The list of counterparties to filter.">
		roleEnumToExtract CounterpartyRoleEnum (1..1) <"The counterparty role enum to filter by.">
	output:
		counterparty Counterparty (0..1) <"The counterparty with specified counterparty role.">

func ExtractAncillaryPartyByRole: <"Extracts from a list of AncillaryParty data types, the AncillaryParty that corresponds to the AncillaryRoleEnum.">
	inputs:
		ancillaryParties AncillaryParty (1..*) <"The list of ancillary parties to filter.">
		roleEnumToExtract AncillaryRoleEnum (1..1) <"The ancillary role enum to filter by.">
	output:
		ancillaryParty AncillaryParty (0..1) <"The ancillary party with specified ancillary role.">

func ReplaceParty: <"Removes the old party, and adds the new party.">
	inputs:
		parties Party (0..*) <"Specifies the list of parties to update.">
		oldParty Party (1..1) <"Specifies the party to be removed.">
		newParty Party (1..1) <"Specifies the party to be added.">
	output:
		updatedParties Party (0..*) <"The updated list of parties.">

func Create_PayerReceiver:
	inputs:
		payer CounterpartyRoleEnum (0..1)
		receiver CounterpartyRoleEnum (0..1)
	output:
		payerReceiver PayerReceiver (1..1)

	assign-output payerReceiver -> payer:
		payer

	assign-output payerReceiver -> receiver:
		receiver

func FilterPartyRole: <"Filters the list of partyRoles based on the provided partyRoleEnum.">
	inputs:
		partyRoles PartyRole (0..*)
		partyRoleEnum PartyRoleEnum (1..1)
	output:
		partyRole PartyRole (0..*)
