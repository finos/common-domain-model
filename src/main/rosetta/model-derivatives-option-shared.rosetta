namespace org.isda.cdm
version "${project.version}"

import cdm.base.*
import cdm.base.math.*
import cdm.base.datetime.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

type Asian: <"As per ISDA 2002 Definitions.">

	averagingInOut AveragingInOutEnum (1..1)
	strikeFactor number (0..1) <"The factor of strike.">
	averagingPeriodIn AveragingPeriod (0..1) <"The averaging in period.">
	averagingPeriodOut AveragingPeriod (0..1) <"The averaging out period.">

type AveragingObservationList: <"An unordered list of weighted averaging observations.">

	averagingObservation WeightedAveragingObservation (1..*) <"A single weighted averaging observation.">

type AveragingPeriod: <"Period over which an average value is taken.">

	schedule AveragingSchedule (0..*) <"A schedule for generating averaging observation dates.">
	averagingDateTimes DateTimeList (0..1) <"An unweighted list of averaging observation date and times.">
	averagingObservations AveragingObservationList (0..1) <"A weighted list of averaging observation date and times.">
	marketDisruption MarketDisruptionEnum (0..1) <"The market disruption event as defined by ISDA 2002 Definitions.">
		[metadata scheme]

	condition Choice: <" Choice rule to represent an FpML choice construct between unweighted and weighted averaging date and times.">
		optional choice averagingDateTimes, averagingObservations

type AveragingSchedule: <"Class to representing a method for generating a series of dates.">

	startDate date (1..1) <"Date on which this period begins.">
	endDate date (1..1) <"Date on which this period ends.">
	averagingPeriodFrequency CalculationPeriodFrequency (1..1) <"The frequency at which averaging period occurs with the regular part of the valuation schedule and their roll date convention.">

type Barrier: <"As per ISDA 2002 Definitions.">

	barrierCap TriggerEvent (0..1) <"A trigger level approached from beneath.">
	barrierFloor TriggerEvent (0..1) <"A trigger level approached from above.">

type CalendarSpread: <"A type for defining a calendar spread feature.">

	expirationDateTwo AdjustableOrRelativeDate (1..1)

type Composite: <"Specifies the conditions to be applied for converting into a reference currency when the actual currency rate is not determined upfront.">

	determinationMethod DeterminationMethodEnum (0..1) <"Specifies the method according to which an amount or a date is determined.">
	relativeDate RelativeDateOffset (0..1) <"A date specified as some offset to another date (the anchor date).">
	fxSpotRateSource FxSpotRateSource (0..1) <"Specifies the methodology (reference source and, optionally, fixing time) to be used for determining a currency conversion rate.">

type CreditEvents: <"A class to specify the applicable Credit Events that would trigger a settlement, as specified in the related Confirmation and defined in the ISDA 2014 Credit Definition article IV section 4.1.">
	[metadata key]

	bankruptcy boolean (0..1) <"A credit event. The reference entity has been dissolved or has become insolvent. It also covers events that may be a precursor to insolvency such as instigation of bankruptcy or insolvency proceedings. Sovereign trades are not subject to Bankruptcy as 'technically' a Sovereign cannot become bankrupt. ISDA 2003 Term: Bankruptcy.">
	failureToPay FailureToPay (0..1) <"A credit event. This credit event triggers, after the expiration of any applicable grace period, if the reference entity fails to make due payments in an aggregate amount of not less than the payment requirement on one or more obligations (e.g. a missed coupon payment). ISDA 2003 Term: Failure to Pay.">
	failureToPayPrincipal boolean (0..1) <"A credit event. Corresponds to the failure by the Reference Entity to pay an expected principal amount or the payment of an actual principal amount that is less than the expected principal amount. ISDA 2003 Term: Failure to Pay Principal.">
	failureToPayInterest boolean (0..1) <"A credit event. Corresponds to the failure by the Reference Entity to pay an expected interest amount or the payment of an actual interest amount that is less than the expected interest amount. ISDA 2003 Term: Failure to Pay Interest.">
	obligationDefault boolean (0..1) <"A credit event. One or more of the obligations have become capable of being declared due and payable before they would otherwise have been due and payable as a result of, or on the basis of, the occurrence of a default, event of default or other similar condition or event other than failure to pay. ISDA 2003 Term: Obligation Default.">
	obligationAcceleration boolean (0..1) <"A credit event. One or more of the obligations have been declared due and payable before they would otherwise have been due and payable as a result of, or on the basis of, the occurrence of a default, event of default or other similar condition or event other than failure to pay (preferred by the market over Obligation Default, because more definitive and encompasses the definition of Obligation Default - this is more favorable to the Seller). Subject to the default requirement amount. ISDA 2003 Term: Obligation Acceleration.">
	repudiationMoratorium boolean (0..1) <"A credit event. The reference entity, or a governmental authority, either refuses to recognise or challenges the validity of one or more obligations of the reference entity, or imposes a moratorium thereby postponing payments on one or more of the obligations of the reference entity. Subject to the default requirement amount. ISDA 2003 Term: Repudiation/Moratorium.">
	restructuring Restructuring (0..1) <"A credit event. A restructuring is an event that materially impacts the reference entity's obligations, such as an interest rate reduction, principal reduction, deferral of interest or principal, change in priority ranking, or change in currency or composition of payment. ISDA 2003 Term: Restructuring.">
	governmentalIntervention boolean (0..1) <"A credit event. A governmental intervention is an event resulting from an action by a governmental authority that materially impacts the reference entity's obligations, such as an interest rate reduction, principal reduction, deferral of interest or principal, change in priority ranking, or change in currency or composition of payment. ISDA 2014 Term: Governmental Intervention.">
	distressedRatingsDowngrade boolean (0..1) <"A credit event. Results from the fact that the rating of the reference obligation is down-graded to a distressed rating level. From a usage standpoint, this credit event is typically not applicable in case of RMBS trades.">
	maturityExtension boolean (0..1) <"A credit event. Results from the fact that the underlier fails to make principal payments as expected.">
	writedown boolean (0..1) <"A credit event. Results from the fact that the underlier writes down its outstanding principal amount.">
	impliedWritedown boolean (0..1) <"A credit event. Results from the fact that losses occur to the underlying instruments that do not result in reductions of the outstanding principal of the reference obligation.">
	defaultRequirement Money (0..1) <"In relation to certain credit events, serves as a threshold for Obligation Acceleration, Obligation Default, Repudiation/Moratorium and Restructuring. Market standard is USD 10,000,000 (JPY 1,000,000,000 for all Japanese Yen trades). This is applied on an aggregate or total basis across all Obligations of the Reference Entity. Used to prevent technical/operational errors from triggering credit events. ISDA 2003 Term: Default Requirement.">
	creditEventNotice CreditEventNotice (0..1) <"A specified condition to settlement. An irrevocable written or verbal notice that describes a credit event that has occurred. The notice is sent from the notifying party (either the buyer or the seller) to the counterparty. It provides information relevant to determining that a credit event has occurred. This is typically accompanied by Publicly Available Information. ISDA 2003 Term: Credit Event Notice.">

type CreditEventNotice:

	notifyingParty NotifyingParty (1..1) <"The notifying party is the party that notifies the other party when a credit event has occurred by means of a credit event notice. If more than one party is referenced as being the notifying party then either party may notify the other of a credit event occurring. ISDA 2003 Term: Notifying Party.">
	businessCenter BusinessCenterEnum (0..1) <"Inclusion of this business center element implies that Greenwich Mean Time in Section 3.3 of the 2003 ISDA Credit Derivatives Definitions is replaced by the local time of the city indicated by the businessCenter element value.">
	publiclyAvailableInformation PubliclyAvailableInformation (0..1) <"A specified condition to settlement. Publicly available information means information that reasonably confirms any of the facts relevant to determining that a credit event or potential repudiation/moratorium, as applicable, has occurred. The ISDA defined list (2003) is the market standard and is considered comprehensive, and a minimum of two differing public sources must have published the relevant information, to declare a Credit Event. ISDA 2003 Term: Notice of Publicly Available Information Applicable.">

type FailureToPay:

	applicable boolean (1..1) <"Indicates whether the failure to pay provision is applicable.">
	gracePeriodExtension GracePeriodExtension (0..1) <"If this element is specified, indicates whether or not a grace period extension is applicable. ISDA 2003 Term: Grace Period Extension Applicable.">
	paymentRequirement Money (0..1) <"Specifies a threshold for the failure to pay credit event. Market standard is USD 1,000,000 (JPY 100,000,000 for Japanese Yen trades) or its equivalent in the relevant obligation currency. This is applied on an aggregate basis across all Obligations of the Reference Entity. Intended to prevent technical/operational errors from triggering credit events. ISDA 2003 Term: Payment Requirement">

type FeaturePayment: <"Payment made following trigger occurrence.">
	[metadata key]

	payerReceiver PayerReceiver (1..1) <"This attribute doesn't exist as part of the FpML construct, which makes use of the PayerReceiver.model group.">
	levelPercentage number (0..1) <"The trigger level percentage.">
	amount number (0..1)	<"The monetary quantity in currency units.">
	time TimeTypeEnum (0..1) <"The feature payment time.">
	currency string (0..1) <"The currency in which an amount is denominated.">
		[metadata scheme]
	paymentDate AdjustableOrRelativeDate (0..1) <"The feature payment date.">
	condition Choice: <" Choice rule to represent an FpML choice construct.">
		required choice levelPercentage, amount

	condition Amount: <" The amount attribute is specified in FpML as non-negative decimal.">
		if amount exists
		then amount >= 0.0

type FxFeature: <"A type for defining FX Features.">

	referenceCurrency string (1..1) <"Specifies the reference currency of the trade.">
		[metadata id]
		[metadata scheme]
	composite Composite (0..1) <"If 'Composite' is specified as the Settlement Type in the relevant Transaction Supplement, an amount in the Settlement Currency, determined by the Calculation Agent as being equal to the number of Options exercised or deemed exercised, multiplied by: (Settlement Price – Strike Price) / (Strike Price – Settlement Price) x Multiplier provided that if the above is equal to a negative amount the Option Cash Settlement Amount shall be deemed to be zero.">
	/*
	 * The below quanto associated definition makes reference to the Equity definitions.  Is that right, considering the cross-assets use of this construct?
	 */
	quanto Quanto (0..1) <"If 'Quanto' is specified as the Settlement Type in the relevant Transaction Supplement, an amount, as determined by the Calculation Agent in accordance with the Section 8.2 of the Equity Definitions.">
	crossCurrency Composite (0..1) <"If 'Cross-Currency' is specified as the Settlement Type in the relevant Transaction Supplement, an amount in the Settlement Currency, determined by the Calculation Agent as being equal to the number of Options exercised or deemed exercised, multiplied by: (Settlement Price – Strike Price) / (Strike Price – Settlement Price) x Multiplier x one unit of the Reference Currency converted into an amount in the Settlement Currency using the rate of exchange of the Settlement Currency as quoted on the Reference Price Source on the Valuation Date, provided that if the above is equal to a negative amount the Option Cash Settlement Amount shall be deemed to be zero.">
	condition Choice: <" Choice rule to represent an FpML choice construct.">
		required choice composite, quanto, crossCurrency

type GracePeriodExtension:

	applicable boolean (1..1) <"Indicates whether the grace period extension provision is applicable.">
	gracePeriod Offset (0..1) <"The number of calendar or business days after any due date that the reference entity has to fulfil its obligations before a failure to pay credit event is deemed to have occurred. ISDA 2003 Term: Grace Period.">

type Knock: <"Knock In means option to exercise comes into existence. Knock Out means option to exercise goes out of existence.">

	knockIn TriggerEvent (0..1) <"The knock in.">
	knockOut TriggerEvent (0..1) <"The knock out.">

type NotifyingParty:

	buyer CounterpartyEnum (0..1)
	seller CounterpartyEnum (0..1)


type OptionDenomination: <"Class which corresponds to the FpML OptionDenomination.model group.">

	optionEntitlement number (1..1) <"The number of units of underlier per option comprised in the option transaction.">
	entitlementCurrency string (0..1) <"The currency in which the option is denominated. The list of valid currencies is not presently positioned as an enumeration as part of the CDM because that scope is limited to the values specified by ISDA and FpML. As a result, implementers have to make reference to the relevant standard, such as the ISO 4217 standard for currency codes.">
		[metadata scheme]
	numberOfOptions number (0..1) <"The number of options comprised in the option transaction.">
	condition PositiveOptionEntitlement: <" In FpML the optionEntitlement element is specified as a positive decimal.">
		if optionEntitlement exists
		then optionEntitlement >= 0.0

	condition PositiveNumberOfOptions: <" In FpML the numberOfOptions element is specified as a positive decimal.">
		if numberOfOptions exists
		then numberOfOptions >= 0.0

type OptionFeature: <"A class for defining option features.">

	fxFeature FxFeature (0..1) <"A quanto or composite FX feature.">
	strategyFeature StrategyFeature (0..1) <"A simple strategy feature.">
	asian Asian (0..1) <"An option where and average price is taken on valuation.">
	barrier Barrier (0..1) <"An option with a barrier feature.">
	knock Knock (0..1) <"A knock feature.">
	passThrough PassThrough (0..1) <"Pass-through payments from the underlier, such as dividends.">

type OptionProvision: <"A class for defining option provisions.">
	cancelableProvision CancelableProvision (0..1) <"A provision that allows the specification of an embedded option within a swap giving the buyer of the option the right to terminate the swap, in whole or in part, on the early termination date.">
	extendibleProvision ExtendibleProvision (0..1) <"A provision that allows the specification of an embedded option with a swap giving the buyer of the option the right to extend the swap, in whole or in part, to the extended termination date.">

type OptionSettlement extends SettlementTerms: <"The option settlement terms, which can either be cash, physical, or fx-based cash-settlement. This class can be used for both the settlement of options or forwards.">
	// TBD: refactor OptionCashSettlement and FxCashSettlement to be a unique class, where cash settlement can be specified in a given currency?
	cashSettlementTerms OptionCashSettlement (0..1) <"Specifies the parameters associated with the cash settlement procedure.">
	physicalSettlementTerms OptionPhysicalSettlement (0..1) <"Specifies the physical settlement terms which apply to the transaction.">
	fxSettlementTerms FxCashSettlement (0..1) <"Specifies the cash settlement of a non deliverable fx option / forward. It includes the currency to settle into together with the fixings required to calculate the currency amount">
	condition Choice: <"The option settlement cannot combine both physical and cash terms specification.">
		optional choice cashSettlementTerms, physicalSettlementTerms, fxSettlementTerms

	condition CashSettlementTerms: <"If the cash settlement terms are specified, then the settlementType can either be Cash, Election or CashOrPhysical">
		if cashSettlementTerms exists
		then settlementType <> SettlementTypeEnum -> Physical

	condition PhysicalSettlementTerms: <"If the physical settlement terms are specified, then the settlementType can either be Physical, Election or CashOrPhysical">
		if physicalSettlementTerms exists
		then settlementType <> SettlementTypeEnum -> Cash

type OptionStrike: <"A class to specify the option strike.">

	spread number (0..1) <"The strike of a credit default swap option or credit swaption when expressed as a spread per annum.">
	price number (0..1) <"The strike of a credit default swap option or credit swaption when expressed as in reference to the price of the underlying obligation(s) or index.">
	currency string (0..1) <"The currency in which the option strike is denominated. The list of valid currencies is not presently positioned as an enumeration as part of the CDM because that scope is limited to the values specified by ISDA and FpML. As a result, implementers have to make reference to the relevant standard, such as the ISO 4217 standard for currency codes.">
		[metadata scheme]
	percentage number (0..1) <"The price or level expressed as a percentage of the forward starting spot price.">
	strikeReference FixedRateSpecification (0..1) <"The strike of an option on a credit default swap when expressed in reference to the spread of the underlying swap (typical practice in the case of credit single name swaps).">
		[metadata reference]
	referenceSwapCurve ReferenceSwapCurve (0..1) <"The strike of an option when expressed by reference to a swap curve. (Typically the case for a convertible bond option.)">
	condition: one-of

type OptionStyle: <"The qualification of the option style: American, Bermuda or European. FpML implements those features as part of a substitution group.">

	americanExercise AmericanExercise (0..1)
	bermudaExercise BermudaExercise (0..1)
	europeanExercise EuropeanExercise (0..1)
	condition: one-of

type PassThrough: <"Type which contains pass through payments.">

	passThroughItem PassThroughItem (1..*) <"One to many pass through payment items.">

type PassThroughItem: <"Class to represent a single pass through payment.">

	payerReceiver PayerReceiver (1..1) <"This attribute doesn't exists in the FpML construct, which makes use of the PayerReceiver.model group.">
// TODO - To be developed	
//	underlier Underlier (1..1) reference <"This attribute is specified in FpML as a reference to the underlier whose payments are being passed through. In the CDM, it is specified as this actual underlier.">
//		
	passThroughPercentage number (1..1) <"Percentage of payments from the underlier which are passed through.">

type PubliclyAvailableInformation:

	standardPublicSources boolean (0..1) <"If this element is specified and set to 'true', indicates that ISDA defined Standard Public Sources are applicable.">
	publicSource string (0..*) <"A public information source, e.g. a particular newspaper or electronic news service, that may publish relevant information used in the determination of whether or not a credit event has occurred. ISDA 2003 Term: Public Source.">
	specifiedNumber int (0..1) <"The minimum number of the specified public information sources that must publish information that reasonably confirms that a credit event has occurred. The market convention is two. ISDA 2003 Term: Specified Number.">
	condition SourceChoice: <" FpML validation rule cd-36 - Context: PubliclyAvailableInformation (complex type). Either standardPublicSources or at least one publicSource element must exist.">
		required choice standardPublicSources, publicSource

	condition PositiveSpecifiedNumber: <" FpML specifies specifiedNumber as a positiveInteger.">
		if specifiedNumber exists
		then specifiedNumber >= 0

/*
 * The below definition originating from FpML probably needs to be updated, as it is very equity-specific.
 */
type Quanto: <"Determines the currency rate that the seller of the equity amounts will apply at each valuation date for converting the respective amounts into a currency that is different from the currency denomination of the underlier.">

	fxRate FxRate (0..*) <"Specifies a currency conversion rate.">
	fxSpotRateSource FxSpotRateSource (0..1) <"Specifies the methodology (reference source and, optionally, fixing time) to be used for determining a currency conversion rate.">

type Restructuring:

	applicable boolean (1..1) <"Indicates whether the restructuring provision is applicable.">
	restructuringType RestructuringEnum (0..1) <"Specifies the type of restructuring that is applicable.">
		[metadata scheme]
	multipleHolderObligation boolean (0..1) <"In relation to a restructuring credit event, unless multiple holder obligation is not specified restructurings are limited to multiple holder obligations. A multiple holder obligation means an obligation that is held by more than three holders that are not affiliates of each other and where at least two thirds of the holders must agree to the event that constitutes the restructuring credit event. ISDA 2003 Term: Multiple Holder Obligation.">
	multipleCreditEventNotices boolean (0..1) <"Presence of this element and value set to 'true' indicates that Section 3.9 of the 2003 Credit Derivatives Definitions shall apply. Absence of this element indicates that Section 3.9 shall not apply. NOTE: Not allowed under ISDA Credit 1999.">

type StrategyFeature: <"A class for defining option strategy features.">

	strikeSpread StrikeSpread (0..1) <"Definition of the upper strike in a strike spread.">
	calendarSpread CalendarSpread (0..1) <"Definition of the later expiration date in a calendar spread.">

type StrikeSpread: <"A class for defining a strike spread feature.">

	upperStrike OptionStrike (1..1) <"Upper strike in a strike spread.">
	upperStrikeNumberOfOptions number (1..1) <"Number of options at the upper strike price in a strike spread.">

type Trigger: <"Trigger point at which feature is effective.">

	level number (0..1) <"The trigger level.">
	levelPercentage number (0..1) <"The trigger level percentage.">
	creditEvents CreditEvents (0..1)
	creditEventsReference CreditEvents (0..1)
		[metadata reference]
	triggerType TriggerTypeEnum (0..1) <"The Triggering condition.">
	triggerTimeType TriggerTimeTypeEnum (0..1) <"The valuation time type of knock condition.">

	condition Choice1: <" Choice rule to represent an FpML choice construct.">
		required choice level, levelPercentage , creditEvents , creditEventsReference

// condition Choice2: <" Choice rule to represent an FpML choice construct.">
// required choice creditEvents, creditEventsReference
type TriggerEvent: <"Observation point for trigger.">

	schedule AveragingSchedule (0..*) <"A derivative schedule.">
	triggerDates DateList (0..1) <"The trigger Dates.">
	trigger Trigger (1..1) <"The trigger level">
	featurePayment FeaturePayment (0..1) <"The feature payment, i.e. the payment made following trigger occurrence.">

type WeightedAveragingObservation: <"A single weighted averaging observation.">

	dateTime zonedDateTime (0..1) <"Observation date time, which should be used when literal observation dates are required. The CDM specifies that the zoned date time is to be expressed in accordance with ISO 8601, either as UTC as an offset to UTC.">
	observationNumber int (0..1) <"Observation number, which should be unique, within a series generated by a date schedule.">
	weight number (1..1) <"Observation weight, which is used as a multiplier for the observation value.">

	condition Choice: <" Choice rule to represent an FpML choice construct between date times for literal date values, and observation numbers for schedule generated observations.">
		required choice dateTime, observationNumber

	condition PositiveObservationNumber: <" FpML specifies observationNumber as a positive integer.">
		if observationNumber exists
		then observationNumber >= 0

	condition PositiveWeight: <" FpML specifies observationNumber as a non-negative decimal.">
		if weight exists
		then weight >= 0.0
