Rosetta versionNumber "0.0.1"
FIX versionNumber "5.0 SP3"
FpML versionNumber "5.10"

/*
 * This file content corresponds to the fpml-asset file.
 * There is potential to consolidate it with the product file.  
 */
class AssetPool stereotype contractualProduct, productReferenceData <"Characterises the asset pool behind an asset backed bond.">
	[synonym FpML value AssetPool]
{
	version string (0..1) <"The asset pool version.">;
		[synonym FpML value version]
	effectiveDate date (0..1) <"Optionally it is possible to specify a version effective date when a version is supplied.">;
		[synonym FpML value effectiveDate]
	initialFactor number (1..1) <"The part of the mortgage that is outstanding on trade inception, i.e. has not been repaid yet as principal. It is expressed as a multiplier factor to the mortgage: 1 means that the whole mortgage amount is outstanding, 0.8 means that 20% has been repaid.">;
		[synonym FpML value initialCost]
	currentFactor number (0..1) <"The part of the mortgage that is currently outstanding. It is expressed similarly to the initial factor, as factor multiplier to the mortgage. This term is formally defined as part of the 'ISDA Standard Terms Supplement for use with credit derivatives transactions on mortgage-backed security with pas-as-you-go or physical settlement'.">;
		[synonym FpML value currentFactor]
}

data rule AssetPool_effectiveDate <"The effectiveDate associated to the version should only exist if that latter exists.">
 	when AssetPool -> version is absent
 	then AssetPool -> effectiveDate must be absent
 
class Bond extends FixedIncomeSecurity stereotype productReferenceData, listedProduct <"FpML specifies this complex type as an exchange traded bond, but it seems that this class also applies to bonds that are traded over-the-counter.">
	[synonym FpML value Bond]
{
	parValue number (0..1) <"Specifies the nominal amount of a fixed income security or convertible bond.">;
		[synonym FpML value parValue]
	/*
	 * Is the term used below actually correct?  par value = face value
	 * If we want to have an element that corresponds to the par/face value * number of issued securities, shouldn't we call it issuanceFaceAmount, rather?
	 * Also, what is the purpose of having it as a field for credit default swaps purposes?
	 */
	issuanceFaceAmount number (0..1) <"Specifies the total amount of the issue. Corresponds to the par value multiplied by the number of issued securities.">;
		[synonym FpML value faceAmount]
	paymentFrequency Period (0..1) <"Specifies the frequency at which the bond pays, e.g. 6M.">;
		[synonym FpML value paymentFrequency]
	dayCountFraction DayCountFractionEnum (0..1) <"The day count basis for the bond.">;
		[synonym FpML value dayCountFraction]
}

data rule Bond_paymentFrequency <"In FpML, paymentFrequency is of type PeriodEnum, which doesn't include the value 'T'.">
	when Bond -> paymentFrequency exists
	then Bond -> paymentFrequency -> period <> PeriodEnum.T

class ConstituentWeight stereotype contractualProduct, contractualProduct <"A class describing the weight of each of the underlyer constituent within the basket, either in absolute or relative terms.">
	[synonym FpML value ConstituentWeight]
{
	openUnits number (0..1) <"The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.">;
		[synonym FpML value openUnits]
	basketPercentage number (0..1) <"The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.">;
		[synonym FpML value basketPercentage]
}

data rule ConstituentWeight_basketPercentage <"FpML specifies basketPercentage as a RestrictedPercentage type, meaning that the value needs to be comprised between 0 and 1.">
	when ConstituentWeight -> basketPercentage exists
	then ConstituentWeight -> basketPercentage >= 0b and ConstituentWeight -> basketPercentage >= 1b

class ConvertibleBond extends Bond stereotype productReferenceData
	[synonym FpML value ConvertibleBond]
{
	underlyingEquity EquityAsset (0..1) <"Specifies the equity in which the convertible bond can be converted.">;
		[synonym FpML value underlyingEquity]
	redemptionDate date (0..1) <"Earlier date between the convertible bond put dates and its maturity date.">;
		[synonym FpML value redemptionDate]
}

class EquityAsset extends ListedHeader stereotype productReferenceData, listedProduct
	[synonym FpML value EquityAsset]
{
	/*
	 * FpML EquityAsset complex type is composed of the relatedExchangeId, optionsExchangeId and specifiedExchangeId.
	 * As part of Rosetta, those artefacts are being tackled through the ExecutionVanue class.
	 * As a result, the EquityAsset class will be positioned as an empty class for the time being.
	 */
}

class FixedIncomeSecurity extends ListedHeader stereotype productReferenceData, listedProduct <"A fixed income security. In FpML, it corresponds to the FixedIncomeSecurityContent.model.">
{
	issuer Party (0..1) reference <"FpML implements this element as an href into the party information. Rosetta restricts the type of party that can issue a product to a legal entity. FpML provides the ability to specify the issuer name, but this is deemed insufficient in the context of Rosetta at a time when the LEI is available and of paramount importance to identify entities.">;
		[synonym FpML value issuerPartyReference]
	seniority CreditSeniorityEnum (0..1) <"The repayment precedence of a debt instrument, as specified by a set of enumerated values.  FpML specifies that creditSeniorityTradingScheme (specified in Rosetta through the CreditSeniorityTradingEnum) overrides creditSeniorityScheme (specified in Rosetta through the CreditSeniorityEnum) when the underlyer defines the reference obligation used in a single name credit default swap trade.">;
		[synonym FpML value seniority]
	couponType CouponTypeEnum (0..1) <"Specifies if the bond has a variable coupon, step-up/down coupon or a zero-coupon.">;
		[synonym FpML value couponType]
	couponRate number (0..1) <"Specifies the coupon rate (expressed in percentage) of a fixed income security or convertible bond.">;
		[synonym FpML value couponRate]
	maturity date (0..1) <"The date when the principal amount of a security becomes due and payable.">;
		[synonym FpML value maturity]
		[synonym FIX value maturityDate]
	issueDate date (0..1) <"The date on which the instrument was issued.">;
		[synonym FIX value issueDate]
}

class Loan stereotype productReferenceData
	[synonym FpML value Loan]
{
	borrower Party (0..*) reference <"Specifies the borrower. There can be more than one borrower. It is meant to be used in the event that there is no Bloomberg Id or the Secured List isn't applicable.  In FpML, the borrower is of type LegalEntity, while in Rosetta we deem important to provide the ability for natural persons to be loan borrowers.">;
		[synonym FpML value borrower]
		[synonym FpML value borrowerReference]
	lien string (0..1) scheme "lienScheme" <"Specifies the seniority level of the lien.">;
		[synonym FpML value lien]
	facilityType string (0..1) scheme "facilityTypeScheme" <"The type of loan facility (letter of credit, revolving, ...).">;
		[synonym FpML value facilityType]
	maturity date (0..1) <"The date when the principal amount of the loan becomes due and payable.">;
		[synonym FpML value maturity]
		[synonym FIX value maturityDate]
	creditAgreementDate date (0..1) <"The credit agreement date is the closing date (the date where the agreement has been signed) for the loans in the credit agreement. Funding of the facilities occurs on (or sometimes a little after) the Credit Agreement date. This underlyer attribute is used to help identify which of the company's outstanding loans are being referenced by knowing to which credit agreement it belongs. ISDA Standards Terms Supplement term: Date of Original Credit Agreement.">;
		[synonym FpML value creditAgreementDate]
	tranche string (0..1) <"The loan tranche that is subject to the derivative transaction. It will typically be referenced as the Bloomberg tranche number. ISDA Standards Terms Supplement term: Bloomberg Tranche Number. In FpML, this element is of type loanTrancheScheme.  It is assumed at this point that setting up an enumeration as part of the Rosetta model would not practicable.">;
		[synonym FpML value tranche]
}

class Mortgage extends FixedIncomeSecurity stereotype productReferenceData
	[synonym FpML value Mortgage]
{
	insurer Party (0..1) reference <"Applicable to the case of default swaps on MBS terms. For specifying the insurer name, when applicable.  When the element is not present, it signifies that the insurer is Not Applicable.">;
		[synonym FpML value insurer]
		[synonym FpML value insurerReference]
	paymentFrequency Period (0..1) <"Specifies the frequency at which the mortgage pays, e.g. 6M.">;
		[synonym FpML value paymentFrequency]
	dayCountFraction DayCountFractionEnum (0..1) <"The day count basis for the mortgage.">;
		[synonym FpML value dayCountFraction]
	originalPrincipalAmount number (0..1) <"The initial issued amount of the mortgage obligation.">;
		[synonym FpML value originalPrincipalAmount]
	pool AssetPool (0..1) <"The mortgage pool that is underneath the mortgage obligation.">;
		[synonym FpML value pool]
	sector MortgageSectorEnum (0..1) <"The sector classification of the mortgage obligation.">;
		[synonym FpML value sector]
	tranche string (0..1) <"The mortgage obligation tranche that is subject to the derivative transaction.">;
		[synonym FpML value tranche]
}

data rule Mortgage_paymentFrequency <"In FpML, paymentFrequency is of type PeriodEnum, which doesn't include the value 'T'.">
	when Mortgage -> paymentFrequency exists
	then Mortgage -> paymentFrequency -> period <> PeriodEnum.T