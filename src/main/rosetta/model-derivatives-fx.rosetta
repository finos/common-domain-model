namespace "org.isda.cdm"
version "${project.version}"

class ForwardPayout <"Representation of a forward settling payout. Both FX Spot and FX Forward should use this component. Distinction between the two will be handled via product qualification.">
{
	/*
	TBD for later commit:

	- Remove securityLeg from the ForwardPayout class alltogether, since settlementDate is redundant with the same attribute in the securityLeg and a securityPayout attribute is now included directly within the Payout class.
	Also:
	- Either rename that class as "ForeignExchangePayout",
	- Or keep as "ForwardPayout" with the anticipation that other underlying payoffs (e.g. Commodities) could be optionally added later.
	*/
	settlementDate date (0..1) <"The settlement date for a forward settling product. For Foreign Exchange contracts, this represents a common settlement date between both currency legs. To specify different settlement dates for each currency leg, see the ForeignExchange class.">;
		[synonym FpML_5_10 value valueDate path "fxSingleLeg"]
	foreignExchange ForeignExchange (0..1) <"A Foreign Exchange underlier to the forward payout.">;
		[synonym FpML_5_10 value fxSingleLeg]
	securityLeg SecurityLeg (0..1) <"A security leg underlier to the forward payout.">;
}

choice rule ForwardPayout_choice <"The forward payout must have an underlying asset that is either a security or a foreign exchange contract.">
	for ForwardPayout required choice between 
	foreignExchange and securityLeg

/*
NOW SUPERSEDED BY NEW SecurityLeg CLASS USED TO REPRESENT SECURITIES FINANCING TRANSACTIONS

class SecurityComponent <"Represents attributes specific to a forward settling security.">
{
	buyerSeller BuyerSeller (0..1) <"The buyer and seller on the forward contract when parties are not specified on the product i.e. Bonds">;
	quantity Quantity (0..1) <"The quantity of the underlier expressed as a number.">;
	nominalAmount Money (0..1) <"The quantity of the underlier expressed as a nominal amount.">;
	underlier Security (1..1) <"The security underlying the forward contract.">;
}

choice rule SecurityComponent_choice <"Quantity of securities can either be represented at number of contracts or a nominal amount.">
	for SecurityComponent required choice between 
	quantity and nominalAmount
*/

class ForeignExchange <"From FpML: A type defining either a spot or forward FX transactions.">
	[synonym FpML_5_10 value FxSingleLeg]
{
	exchangedCurrency1 Cashflow (1..1) <"This is the first of the two currency flows that define a single leg of a standard foreign exchange transaction.">;
		[synonym FpML_5_10 value exchangedCurrency1]
	exchangedCurrency2 Cashflow (1..1) <"This is the second of the two currency flows that define a single leg of a standard foreign exchange transaction.">;
		[synonym FpML_5_10 value exchangedCurrency2]
	tenorPeriod Period (0..1) <"A tenor expressed as a period type and multiplier (e.g. 1D, 1Y, etc.)">;
		[synonym FpML_5_10 value tenorPeriod]
	exchangeRate ExchangeRate (1..1) <"The rate of exchange between the two currencies.">;
		[synonym FpML_5_10 value exchangeRate]
	nonDeliverableSettlement FxCashSettlement (0..1) <"Used to describe a particular type of FX forward transaction that is settled in a single currency (for example, a non-deliverable forward).">;
		[synonym FpML_5_10 value nonDeliverableSettlement]
}

data rule FxForward_settlementDate <"For foreign exchange contracts, either the settlementDate is set or the currencyValueDates, but not both.">
	when ForwardPayout -> foreignExchange  exists 
	then ( ForwardPayout -> settlementDate exists and ForwardPayout -> foreignExchange -> exchangedCurrency1 -> cashflowDate is absent and ForwardPayout -> foreignExchange -> exchangedCurrency2 -> cashflowDate is absent ) 
		or ( ForwardPayout -> settlementDate is absent and ForwardPayout -> foreignExchange -> exchangedCurrency1 -> cashflowDate exists and ForwardPayout -> foreignExchange -> exchangedCurrency2 -> cashflowDate exists )

class ExchangeRate <"A class that is used for describing the exchange rate for a particular transaction.">
	[synonym FpML_5_10 value ExchangeRate] 
{
	quotedCurrencyPair QuotedCurrencyPair (1..1) <"Defines the two currencies for an FX trade and the quotation relationship between the two currencies.">;
		[synonym FpML_5_10 value quotedCurrencyPair]
	rate number (1..1) <"The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.">;
		[synonym FpML_5_10 value rate]
	spotRate number (0..1) <"An element used for FX forwards and certain types of FX OTC options. For deals consummated in the FX Forwards Market, this represents the current market rate for a particular currency pair. For barrier and digital/binary options, it can be useful to include the spot rate at the time the option was executed to make it easier to know whether the option needs to move 'up' or 'down' to be triggered.">;
		[synonym FpML_5_10 value spotRate]
	forwardPoints number (0..1) <"An optional element used for deals consummated in the FX Forwards market. Forward points represent the interest rate differential between the two currencies traded and are quoted as a premium or a discount. Forward points are added to, or subtracted from, the spot rate to create the rate of the forward trade.">;
		[synonym FpML_5_10 value forwardPoints]
	pointValue number (0..1) <"An optional element that documents the size of point (pip) in which a rate was quoted (or in this case, forwardPoints are calculated). Point (pip) size varies by currency pair: major currencies are all traded in points of 0.0001, with the exception of JPY which has a point size of 0.01. The FpML PointValue type is constrained such that the factor can only be values of 10^n, where n <= 0, this constraint is not enforced here and is left to the implementor.">;
		[synonym FpML_5_10 value pointValue]
	crossRate CrossRate (0..*) <"An optional element that allow for definition of the currency exchange rates used to cross between the traded currencies for non-base currency FX contracts.">;
		[synonym FpML_5_10 value crossRate]
}

data rule ExchangeRate_rate <"Per FpML the rate must be a PositiveDecimal">
	when ExchangeRate -> rate exists
	then ExchangeRate -> rate > 0
	
data rule ExchangeRate_spotRate <"Per FpML the spotRate must be a PositiveDecimal">
	when ExchangeRate -> spotRate exists
	then ExchangeRate -> spotRate > 0

data rule ExchangeRate_pointValue_forwardPoints
	when ExchangeRate -> pointValue exists 
	then ExchangeRate -> forwardPoints exists 

data rule ExchangeRate_forwardPoints_spotRate
	when ExchangeRate -> forwardPoints exists 
	then ExchangeRate -> spotRate exists

// TODO: Duplicates large part of ExchangeRate, consider removing redundancy
class CrossRate extends QuotedCurrencyPair <"A class that is used for including the currency exchange rates used to cross between the traded currencies for non-base currency FX contracts.">
	[synonym FpML_5_10 value CrossRate] 
{
	rate number (1..1) <"The exchange rate used to cross between the traded currencies.">;
		[synonym FpML_5_10 value rate]
	spotRate number (0..1) <"An optional element used for FX forwards and certain types of FX OTC options. For deals consummated in the FX Forwards Market, this represents the current market rate for a particular currency pair.">;
		[synonym FpML_5_10 value spotRate]
	forwardPoints number (0..1) <"An optional element used for deals consummated in the FX Forwards market. Forward points represent the interest rate differential between the two currencies traded and are quoted as a premium or a discount. Forward points are added to, or subtracted from, the spot rate to create the rate of the forward trade.">;
		[synonym FpML_5_10 value forwardPoints]
}

data rule CrossRate_rule_1
	when CrossRate -> forwardPoints exists 
	then CrossRate -> spotRate exists
	
class FxCashSettlement <"A class that is used for describing cash settlement of an option / non deliverable forward. It includes the currency to settle into together with the fixings required to calculate the currency amount.">
	[synonym FpML_5_10 value FxCashSettlement] 
{
	settlementCurrency string (1..1) scheme <"The currency in which cash settlement occurs for non-deliverable forwards and cash-settled options (non-deliverable or otherwise).">;
		[synonym FpML_5_10 value settlementCurrency]
	referenceCurrency string (0..1) scheme;
		[synonym FpML_5_10 value referenceCurrency]
	fixing FxFixing (0..*) <"Specifies the source for and timing of a fixing of an exchange rate. This is used in the agreement of non-deliverable forward trades as well as various types of FX OTC options that require observations against a particular rate. This element is optional, permitting it to be omitted where fixing details are unavailable at the point of message creation. It has multiple occurrence to support the case where fixing details must be specified for more than one currency pair e.g. on an option settled into a third currency (that is not one of the option currencies).">;
		[synonym FpML_5_10 value fixing]
	rateSourceFixing FxRateSourceFixing (0..*) <"Specifies the source for and timing of a fixing of an exchange rate. This is used in the agreement of non-deliverable forward trades as well as various types of FX OTC options that require observations against a particular rate. This element is optional, permitting it to be omitted where fixing details are unavailable at the point of message creation. It has multiple occurrence to support the case where fixing details must be specified for more than one currency pair e.g. on an option settled into a third currency (that is not one of the option currencies).">;
		[synonym FpML_5_10 value rateSourceFixing]
}
	
choice rule FxCashSettlement_choice 
	for FxCashSettlement optional choice between fixing and rateSourceFixing

class FxFixing <"A class that specifies the source for and timing of a fixing of an exchange rate. This is used in the agreement of non-deliverable forward trades as well as various types of FX OTC options that require observations against a particular rate.">
	[synonym FpML_5_10 value FxFixing] 
{
	quotedCurrencyPair QuotedCurrencyPair (1..1) <"Defines the two currencies for an FX trade and the quotation relationship between the two currencies.">;
		[synonym FpML_5_10 value quotedCurrencyPair]
	fixingDate date (0..1) <"Describes the specific date when a non-deliverable forward or cash-settled option will 'fix' against a particular rate, which will be used to compute the ultimate cash settlement. This element should be omitted where a single, discrete fixing date cannot be identified e.g. on an american option, where fixing may occur at any date on a continuous range.">;
		[synonym FpML_5_10 value fixingDate]
	fxSpotRateSource FxSpotRateSource (0..1) <"Specifies the methodology (reference source and, optionally, fixing time) to be used for determining a currency conversion rate.">;
		[synonym FpML_5_10 value fxSpotRateSource]
}

class FxRateSourceFixing <"Describes a rate source to be fixed and the date the fixing occurs">
	[synonym FpML_5_10 value FxRateSourceFixing] 
{
	settlementRateSource FxSettlementRateSource (1..1);
		[synonym FpML_5_10 value settlementRateSource]
	fixingDate AdjustableDate (1..1) <"The date on which the fixing is scheduled to occur.">;
		[synonym FpML_5_10 value fixingDate]
}

class FxSettlementRateSource <"The source of the Foreign Exchange settlement rate.">
	[synonym FpML_5_10 value FxSettlementRateSource] 
{
	settlementRateOption string (0..1) scheme <"Indicates that an officially defined rate settlement rate option will be the used for the fixing.">;
		[synonym FpML_5_10 value settlementRateOption]
	nonstandardSettlementRate FxInformationSource (0..1) <"Indicates that a non-standard rate source will be used for the fixing.">;
}

choice rule FxSettlementRateSource_choice 
	for FxSettlementRateSource required choice between settlementRateOption and nonstandardSettlementRate

class FxInformationSource extends InformationSource <"Information source specific to Foreign Exchange products.">
	[synonym FpML_5_10 value FxInformationSource] 
{
	fixingTime BusinessCenterTime (0..1) <"The time that the fixing will be taken along with a business center to define the time zone.">;
}
